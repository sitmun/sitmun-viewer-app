import*as D3 from"d3-polygon";const MergeTerrainProvider=function(e,t,i){this.noDataValue=e.noDataValue;this.view=t;this.commutingProvidersReady=!1;this.commutingProvidersPromises=cesium.when.defer();this.surfaceHasTilesToRender=cesium.when.defer();this.surfaceTilesToRender=0;this.fallback=i.fallback||[];this.fallbackProvider=[];this.fallbackProvider=this.fallback.map(function(e,i){return"WMTS"===e.type||!e.type&&e.url.indexOf("WMTS")>=0?new cesium.WMTSTerrainProvider(e,t):new cesium.WCSTerrainProvider(e,t)});this.defaultFallbackProvider=new cesium.EllipsoidTerrainProvider;this.attributions={};if(e.attributions){this.attributions=e.attributions;this.view.map.trigger(SITNA.Consts.event.TERRAINPROVIDERADD,{terrainProvider:this})}e.url instanceof cesium.Resource||(e.url=new cesium.Resource({url:e.url.trim()}));cesium.CesiumTerrainProvider.call(this,e);this.boundaries=Array.isArray(i.boundaries)?i.boundaries:[i.boundaries];cesium.when.all([this._readyPromise,this.fallbackProvider[0].readyPromise,this.surfaceHasTilesToRender],function(){this.commutingProvidersReady=!0;this.commutingProvidersPromises.resolve()}.bind(this))};!function(){(MergeTerrainProvider.prototype=Object.create(cesium.CesiumTerrainProvider.prototype,{fallback:{value:null,enumerable:!0,configurable:!0,writable:!0},fallbackProvider:{value:null,enumerable:!0,configurable:!0,writable:!0},defaultFallbackProvider:{value:null,enumerable:!0,configurable:!0,writable:!0},allReady:{get:function(){return this.commutingProvidersReady}},allReadyPromise:{get:function(){return this.commutingProvidersPromises}}})).constructor=MergeTerrainProvider;MergeTerrainProvider.prototype.isPointInDefaultBoundaries=function(e){return!this.boundaries.length||this.isPointInBoundaries(e,this.boundaries[0])};MergeTerrainProvider.prototype.isInDefaultBoundaries=function(e,t,i){return!this.boundaries.length||this.isInBoundaries(e,t,i,this.boundaries[0])};MergeTerrainProvider.prototype.isPointInBoundaries=function(e,t){return t.some(t=>D3.polygonContains(t,[cesium.Math.toDegrees(e.longitude),cesium.Math.toDegrees(e.latitude)]))};MergeTerrainProvider.prototype.isInBoundaries=function(e,t,i,r){var o=[],a=this.tilingScheme.tileXYToRectangle(e,t,i);o.push(new cesium.Cartographic(a.west,a.south));o.push(new cesium.Cartographic(a.west,a.north));o.push(new cesium.Cartographic(a.east,a.south));o.push(new cesium.Cartographic(a.east,a.north));for(var s=0;s<o.length;s++)if(!this.isPointInBoundaries(o[s],r))return!1;return!0};MergeTerrainProvider.prototype.getTileDataAvailable=function(e,t,i){this.surfaceTilesToRender>5&&this.surfaceHasTilesToRender.resolve();this.surfaceTilesToRender++;return!(i>this._availability._maximumLevel&&this.isInDefaultBoundaries(e,t,i))};MergeTerrainProvider.prototype.getAttribution=function(){return this.attributions};MergeTerrainProvider.prototype.requestTileGeometry=function(e,t,i){const r=this;let o=cesium.when.defer();const a=function(e){r.view.map.trigger(SITNA.Consts.event.TERRAINPROVIDERADD,{terrainProvider:e})},s=function(){if(r.fallbackProvider){const s=r.fallbackProvider.filter(e=>e.ready).find((o,a,s)=>1===s.length||a+1===r.boundaries.length||r.isInBoundaries(e,t,i,r.boundaries[a+1]));s?s.requestTileGeometry.apply(r,[e,t,i]).then(function(e){a(s);o.resolve(e)}).otherwise(function(){o.resolve(r.defaultFallbackProvider.requestTileGeometry([e,t,i]))}):o.resolve(r.defaultFallbackProvider.requestTileGeometry([e,t,i]))}else o.resolve(r.defaultFallbackProvider.requestTileGeometry([e,t,i]))};i>this._availability._maximumLevel?s():this.isInDefaultBoundaries(e,t,i)?cesium.CesiumTerrainProvider.prototype.requestTileGeometry.apply(r,[e,t,i]).then(function(s,l){if(l._minimumHeight===r.noDataValue)r.fallbackProvider&&r.fallbackProvider[0].ready?r.fallbackProvider[0].requestTileGeometry.apply(r,s).then(function(e){a(r.fallbackProvider[0]);o.resolve(e)}).otherwise(function(){o.resolve(r.defaultFallbackProvider.requestTileGeometry([e,t,i]))}):o.resolve(r.defaultFallbackProvider.requestTileGeometry([e,t,i]));else{a(r);o.resolve(l)}}.bind(this,arguments)).otherwise(s):s();return o.then(function(e){return e})};MergeTerrainProvider.prototype.sampleTerrainMostDetailed=function(e){var t=cesium.Rectangle.fromCartographicArray(e);return 0===[cesium.Rectangle.center(t),cesium.Rectangle.northeast(t),cesium.Rectangle.northwest(t),cesium.Rectangle.southeast(t),cesium.Rectangle.southwest(t)].filter(async function(e){return await!this.isPointInDefaultBoundaries(e)}.bind(this)).length?cesium.sampleTerrainMostDetailed(this,e):this.fallbackProvider[0].sampleTerrainMostDetailed(e)};cesium.MergeTerrainProvider=MergeTerrainProvider;const e=function(e,t){this.view=t;var i=cesium.when.defer();this._ready=!1;this._readyPromise=i;if(!cesium.defined(e))throw new cesium.DeveloperError("description is required.");this.description=e;this.url=e.url;this.layerName=e.layerName;var r=new cesium.Event;this._eventHelper=new cesium.EventHelper;var o=e.credit;"string"==typeof o&&(o=new cesium.Credit(o));this.tileCacheService=new l(this.type+"Tiles");this.tileCacheService.createDB();this.lastTile=void 0;this.ready=!1;this.DefaultProvider=new cesium.EllipsoidTerrainProvider;Object.defineProperties(this,{errorEvent:{get:function(){return r}},credit:{get:function(){return o}},hasVertexNormals:{get:function(){return!1}},readyPromise:{get:function(){return this._readyPromise.promise}}});this._heightmapWidth=65;this.noDataValue=e.noDataValue;this.urlofServer;if(cesium.defined(this.url)){this.urlofServer=this.url;var a=this.urlofServer.lastIndexOf("?");a>-1&&(this.urlofServer=this.urlofServer.substring(0,a))}(function(e){const t=this;cesium.when(e,function(e){if(cesium.defined(e)&&e.ready){t._ready=!0;t._readyPromise.resolve(!0);e.getHeightmapTerrainData=function(i,r,o){var a;if(!isNaN(i+r+o)){const l=e.templateToURL(i,r,o);var s=0;if(o<e.minLevel){s|=1;s|=2;s|=4;s|=8}if(null!=t.lastTile&&t.lastTile.x==i&&t.lastTile.y==r&&t.lastTile.level==o)return t.lastTile.value;a=cesium.when(t.tileCacheService.getTileData(i,r,o),function(e){var a=t.HeightmapTerrainData(e.data,{width:t.heightMapHeight,height:t.heightMapHeight},s);t.lastTile={x:i,y:r,level:o,value:a};return a}).otherwise(function(e){const a="image/tiff"===t.format?cesium.Resource.fetchArrayBuffer:cesium.Resource.fetchImage;return cesium.when(a({url:l}),function(e){var a=t.ImageToHeightmapTerrainData(t.noDataValue,e,{width:t.heightMapHeight,height:t.heightMapHeight},i,r,o,t.tilingScheme);t.tileCacheService.addTile(i,r,o,a);var l=t.HeightmapTerrainData(a,{width:t.heightMapHeight,height:t.heightMapHeight},s);t.lastTile={x:i,y:r,level:o,value:l};return l}).otherwise(function(){return t.DefaultProvider.requestTileGeometry(i,r,o)})})}return a};t.getLevelMaximumGeometricError=function(t){return e.levelZeroMaximumGeometricError/(1<<t)};t.requestTileGeometry=function(i,r,o){var a;if(cesium.defined(e.getHeightmapTerrainData)){if(!t.adviced&&o>14){t.view.map.toast(TC.Util.getLocaleString(t.view.map.options.locale,"threed.terrainAdvice"),{type:TC.Consts.msgType.INFO});t.adviced=!0}a=o<=e.minLevel&&o>=e.maxLevel&&1==e.isTileInside(i,r,o)?e.getHeightmapTerrainData(i,r,o):cesium.when.defer().reject()}else a=cesium.when.defer().reject();return a};Object.defineProperties(t,{tilingScheme:{get:function(){return e.tilingScheme}},ready:{get:function(){return e.ready}},pixelSize:{get:function(){return e.pixelSize}},hasWaterMask:{get:function(){return e.waterMask}},heightMapHeight:{get:function(){return e.heightMapHeight}},heightMapWidth:{get:function(){return e.heightMapWidth}},getTileDataAvailable:{get:function(){return e.getTileDataAvailable}},minLevel:{get:function(){return e.minLevel}},maxLevel:{get:function(){return e.maxLevel}}});if(null==e.minLevel||null==e.maxLevel){var i=e.bbox;new cesium.Cartographic(cesium.Math.toRadians(i.coord[i.ulidx][0]),cesium.Math.toRadians(i.coord[i.ulidx][1]),0);e.minLevel=30;e.maxLevel=0;for(var r=0;r<30;r++){var o=t.tilingScheme.tileXYToNativeRectangle(0,0,r),a=(o.east-o.west)/(t.heightMapWidth-1),s=(o.north-o.south)/(t.heightMapHeight-1),l=t.pixelSize[0]/a,n=t.pixelSize[1]/s;if(l<10&&l>.1&&Math.abs(n)<10&&Math.abs(n)>.1){r<e.minLevel&&(e.minLevel=r);r>e.maxLevel&&(e.maxLevel=r)}}}}else console.log("Error al obtener terreno fuera de Navarra")})}).apply(this,[this.getCapabilities()]);this.OGCHelper.CRS=[{name:"CRS:84",ellipsoid:cesium.Ellipsoid.WGS84,firstAxeIsLatitude:!1,tilingScheme:cesium.GeographicTilingScheme,SupportedCRS:["urn:ogc:def:crs:OGC:2:84"]},{name:"EPSG:4258",ellipsoid:cesium.Ellipsoid.WGS84,firstAxeIsLatitude:!0,tilingScheme:cesium.GeographicTilingScheme,SupportedCRS:["urn:ogc:def:crs:EPSG::4258","EPSG:4258","IGNF:WGS84G"]},{name:"EPSG:4326",ellipsoid:cesium.Ellipsoid.WGS84,firstAxeIsLatitude:!0,tilingScheme:cesium.GeographicTilingScheme,SupportedCRS:["urn:ogc:def:crs:EPSG::4326","EPSG:4326"]},{name:"EPSG:3857",ellipsoid:cesium.Ellipsoid.WGS84,firstAxeIsLatitude:!1,tilingScheme:cesium.WebMercatorTilingScheme,SupportedCRS:["urn:ogc:def:crs:EPSG::3857","EPSG:3857"]},{name:"OSGEO:41001",ellipsoid:cesium.Ellipsoid.WGS84,firstAxeIsLatitude:!1,tilingScheme:cesium.WebMercatorTilingScheme,SupportedCRS:["urn:ogc:def:crs:EPSG::3857"]}];this.OGCHelper.FormatImage=[{format:"image/png",extension:"png"},{format:"image/jpeg",extension:"jpg"},{format:"image/jpeg",extension:"jpeg"},{format:"image/gif",extension:"gif"},{format:"image/png; mode=8bit",extension:"png"},{format:"image/tiff",extension:"tiff"},{format:"image/tiff",extension:"geotiff"},{format:"image/tiff",extension:"geotiffint16"},{format:"image/x-bil;bits=32",extension:"x-bil"}];this.format=this.OGCHelper.FormatImage.find(t=>t.extension===e.format.toLowerCase()).format};e.prototype.getAttribution=function(){return this.attributions};e.prototype.OGCHelper={};e.TiledError=function(){console.log("TiledError")};e.prototype.ImageToHeightmapTerrainData=function(e,t,i,o,a,s,l){return"image/tiff"===this.format?this.GeotiffToHeightmapTerrainData(e,t,i,o,a,s,l):"image/x-bil;bits=32"!==this.format?r(t,{offset:0,lowest:0,highest:3700},i,!0):void 0};e.prototype.GeotiffToHeightmapTerrainData=function(e,t,i,r,o,a,s){"number"==typeof i&&(i={width:i,height:i});var l=new n;l.parseHeader(t);var u=l.imageWidth,h=l.imageLength,c=0,m=new Float32Array(i.height*i.width);if(i.height!=h||i.width!=u)for(var f=s.tileXYToNativeRectangle(r,o,a),p=(f.east-f.west)/i.width,d=(f.north-f.south)/i.height,g=0;g<i.height;g++)for(var v=0;v<i.width;v++){var S=f.west+p*v,y=f.north-d*g,P=l.PCSToImage(S,y);if(1==P[0]){!(T=l.getPixelValueOnDemand(P[1],P[2]))||T&&T[0]<=e?m[c]=0:m[c]=T[0]}else m[c]=0;c++}else for(g=0;g<i.height;g++)for(v=0;v<i.width;v++){var T;!(T=l.getPixelValueOnDemand(v,g))||T&&T[0]<=e?m[c]=0:m[c]=T[0];c++}return m};e.prototype.HeightmapTerrainData=function(e,t,i){"number"==typeof t&&(t={width:t,height:t});if(!cesium.defined(e))throw new cesium.DeveloperError("no good size");var r={buffer:e,width:t.width,height:t.height,childTileMask:i};return new cesium.HeightmapTerrainData(r)};const t=function(t,i){this.parse=function(e){var t,i=this;e=cesium.defaultValue(e,cesium.defaultValue.EMPTY_OBJECT);if(cesium.defined(e.url)){var r=e.url,o=r.lastIndexOf("?");o>-1&&(r=r.substring(0,o));if(!cesium.defined(e.layerName))throw new cesium.DeveloperError("description.layerName is required.");var a=r+"?SERVICE=WCS&VERSION=1.0.0&request=DescribeCoverage&CoverageId="+e.layerName;cesium.defined(e.proxy)&&(a=e.proxy.getURL(a));t=cesium.when(cesium.Resource.fetchXML({url:a}),function(t){return i.getDescribeCoverage(t,e)}).otherwise(function(){return cesium.when.defer.resolve(null)})}else{if(!cesium.defined(e.xml))throw new cesium.DeveloperError("either description.url or description.xml are required.");t=i.getDescribeCoverage(e.xml,e)}t.type="WCS";return t};this.getDescribeCoverage=function(e,t){var i={};const r=this;if(!cesium.defined(t.layerName))throw new cesium.DeveloperError("description.layerName is required.");t.layerName;i.minLevel=cesium.defaultValue(t.minLevel,void 0);i.maxLevel=cesium.defaultValue(t.maxLevel,void 0);i.heightMapWidth=cesium.defaultValue(t.heightMapWidth,65);i.heightMapHeight=cesium.defaultValue(t.heightMapHeight,i.heightMapWidth);var o=e.querySelector("lonLatEnvelope").textContent.trim().split(" ").filter(function(e){return e.trim().length>0}),a=u(o.slice(0,2)),s=u(o.slice(2));i.upperCorner=s;i.lowerCorner=a;u(e.querySelector("gml\\:low, low").textContent.split(" ")),u(e.querySelector("gml\\:high, high").textContent.split(" "));var l="EPSG:"+4326..toString(),n=this.OGCHelper.CRS.filter(function(e){return e.name===l});n.length>0?i.tilingScheme=new n[0].tilingScheme({ellipsoid:n[0].ellipsoid}):i.tilingScheme=void 0;i.pixelSize=[65,65];i.levelZeroMaximumGeometricError=cesium.TerrainProvider.getEstimatedLevelZeroGeometricErrorForAHeightmap(i.tilingScheme._ellipsoid,Math.min(i.heightMapWidth,i.heightMapHeight),i.tilingScheme.getNumberOfXTilesAtLevel(0));i.waterMask=!1;i.ready=!0;var h={WKID:4326,EPSG:l,coord:[[a[0],s[1]],[a[0],a[1]],[s[0],a[1]],[s[0],s[1]]],ulidx:0,llidx:1,lridx:2,uridx:3};i.bbox=h;i.getTileDataAvailable=function(e,t,r){return!!(r<=i.maxLevel&&i.isInTile(e,t,r))};this.urlofServer=t.url;var c=this.urlofServer.lastIndexOf("?");c>-1&&(this.urlofServer=this.urlofServer.substring(0,c));var m=this.urlofServer+"?SERVICE=WCS&VERSION=1.0.0&REQUEST=GetCoverage&COVERAGE="+t.layerName+"&FORMAT="+t.format+"&BBOX={west},{south},{east},{north}&WIDTH=65&HEIGHT=65&CRS=EPSG:4326";i.urlGetTerrain=m;i.isTileInside=function(e,t,o){var a=!0,s=i.bbox,l=r.tilingScheme.tileXYToNativeRectangle(e,t,o);(s.coord[s.ulidx][0]>=l.east||s.coord[s.lridx][0]<=l.west||s.coord[s.lridx][1]>=l.north||s.coord[s.ulidx][1]<=l.south)&&(a=!1);return a};i.isInTile=function(e,t,r){var o=!1,a=i.bbox,s=i.tilingScheme.tileXYToNativeRectangle(e,t,r);(a.coord[a.ulidx][0]>=s.west&&a.coord[a.ulidx][0]<=s.east&&a.coord[a.ulidx][1]>=s.south&&a.coord[a.ulidx][1]<=s.north||a.coord[a.uridx][0]>=s.west&&a.coord[a.uridx][0]<=s.east&&a.coord[a.uridx][1]>=s.south&&a.coord[a.uridx][1]<=s.north||a.coord[a.llidx][0]>=s.west&&a.coord[a.llidx][0]<=s.east&&a.coord[a.llidx][1]>=s.south&&a.coord[a.llidx][1]<=s.north||a.coord[a.lridx][0]>=s.west&&a.coord[a.lridx][0]<=s.east&&a.coord[a.lridx][1]>=s.south&&a.coord[a.lridx][1]<=s.north||a.coord[a.ulidx][0]<s.east&&a.coord[a.lridx][0]>s.west&&a.coord[a.lridx][1]<s.north&&a.coord[a.ulidx][1]>s.south)&&(o=!0);return o};i.templateToURL=function(e,t,o){var a=r.tilingScheme.tileXYToNativeRectangle(e,t,o),s=(a.east-a.west)/(r.heightMapWidth-1),l=(a.north-a.south)/(r.heightMapHeight-1);a.west-=.5*s;a.east+=.5*s;a.south-=.5*l;a.north+=.5*l;return i.urlGetTerrain.replace("{south}",a.south).replace("{north}",a.north).replace("{west}",a.west).replace("{east}",a.east)};return i};this.type="WCS";e.apply(this,[t,i])};(t.prototype=Object.create(e.prototype)).constructor=t;t.prototype.getCapabilities=function(){var e=this.urlofServer+"?SERVICE=WCS&VERSION=1.0.0&request=GetCapabilities";cesium.when(cesium.Resource.fetchXML({url:e}),function(e){if(e.querySelector("Service")){this.attributions={};var t=e.querySelector("Service").querySelector("label");t&&(this.attributions.name=t.textContent.trim());var i=e.querySelector("Service").querySelector("metadataLink");i&&(this.attributions.site=i.getAttribute("about"))}}.bind(this));this.description=cesium.defaultValue(this.description,cesium.defaultValue.EMPTY_OBJECT);return this.parse.apply(this,[this.description])};var i=function(t,i){this._parse=function(e){var t,i=this;e=cesium.defaultValue(e,cesium.defaultValue.EMPTY_OBJECT);if(cesium.defined(e.url)){var r=e.url,o=r.lastIndexOf("?");o>-1&&(r=r.substring(0,o));if(!cesium.defined(e.layerName))throw new cesium.DeveloperError("description.layerName is required.");var a=r+"?SERVICE=WCS&VERSION=1.0.0&request=DescribeCoverage&CoverageId="+e.layerName;cesium.defined(e.proxy)&&(a=e.proxy.getURL(a));t=cesium.when(cesium.Resource.fetchXML({url:a}),function(t){return i.getDescribeCoverage(t,e)}).otherwise(function(){return cesium.when.defer.resolve(null)})}else{if(!cesium.defined(e.xml))throw new cesium.DeveloperError("either description.url or description.xml are required.");t=i.getDescribeCoverage(e.xml,e)}t.type="WMTS";return t};this.parse=function(e,t){const i=this,r=t.maxLevel||20,o=t.layerName;let a=t.styleName,s=null,l=[],n=null,u=null,h=null;const c=t.proxy,m=i.OGCHelper.generate(t);Array.from(e.querySelectorAll('Operation[name="GetTile"] HTTP Get')).map(e=>({node:e,type:e.querySelector("Value").textContent})).forEach(e=>{if("RESTful"===e.type&&null===u){u=e.node.getAttribute("xlink:href");c&&(u=c.getURL(u))}if("KVP"===e.type&&null===n){n=e.node.getAttribute("xlink:href");c&&(n=c.getURL(n))}});const f=e.querySelectorAll("Contents>Layer>Identifier");let p=null;for(let e=0;e<f.length&&null===p;e++)o===f[e].textContent&&(p=f[e].parentNode);if(null!==p){let e,t;Array.from(p.querySelectorAll("Style")).forEach(i=>{const r=i.querySelector("Identifier").textContent;null!=i.getAttribute("isDefault")&&(e=r);r===a&&(t=r)});a&&a===t||(a=e||"");const r=Array.from(p.querySelectorAll("Format"));for(let e=0;e<i.OGCHelper.FormatImage.length&&null===h;e++){r.filter(t=>t.textContent===i.OGCHelper.FormatImage[e].format&&t.textContent===i.format).length>0&&(h=i.OGCHelper.FormatImage[e])}if(!h)throw new cesium.DeveloperError("image format not valid.");l=Array.from(p.querySelectorAll("TileMatrixSetLink"))}const d=Array.from(e.querySelectorAll("TileMatrixSet>Identifier"));for(let e=0;e<l.length&&!m.ready;e++){const t=l[e],u=t.querySelector("TileMatrixSet").textContent;let c=null,f=null;for(let e=0;e<d.length&&null===c;e++)d[e].textContent===u&&(c=d[e].parentNode);const g=c.querySelector("SupportedCRS").textContent;for(let e=0;e<i.OGCHelper.CRS.length&&null===f;e++)i.OGCHelper.CRS[e].SupportedCRS.includes(g)&&(f=i.OGCHelper.CRS[e]);if(null!==f){const e=Array.from(c.querySelectorAll("TileMatrix")).map(function(e){let t=e.querySelector("Identifier").textContent,i=parseInt(e.querySelector("MatrixWidth").textContent,10),r=parseInt(e.querySelector("MatrixHeight").textContent,10),o=parseInt(e.querySelector("TileWidth").textContent,10),a=parseInt(e.querySelector("TileHeight").textContent,10);return{id:t,maxWidth:i,maxHeight:r,scaleDenominator:parseFloat(e.querySelector("ScaleDenominator").textContent),complete:!1,tileWidth:o,tileHeight:a}}).sort((e,t)=>t.scaleDenominator-e.scaleDenominator),l=Array.from(t.querySelectorAll("TileMatrixSetLimits>TileMatrixLimits")).map(e=>({id:e.querySelector("TileMatrix").textContent,bbox:{minTileRow:parseInt(e.querySelector("MinTileRow").textContent,10),maxTileRow:parseInt(e.querySelector("MaxTileRow").textContent,10),minTileCol:parseInt(e.querySelector("MinTileCol").textContent,10),maxTileCol:parseInt(e.querySelector("MaxTileCol").textContent,10)}}));e.forEach(e=>{l.forEach(t=>{if(e.id===t.id){e.bbox=t.bbox;e.complete=!0}})});if(e.length>0){m.tilingScheme=new f.tilingScheme({ellipsoid:f.ellipsoid});const t=p.querySelector("ResourceURL[format='"+h.format+"']");null!==t?s=t.getAttribute("template").replace("{TileRow}","{y}").replace("{TileCol}","{x}").replace("{style}",a).replace("{Style}",a).replace("{TileMatrixSet}",u).replace("{layer}",o).replace("{infoFormatExtension}",h.extension):null!==n&&(s=n+"service=WMTS&request=GetTile&version=1.0.0&layer="+o+"&style="+a+"&format="+h.format+"&TileMatrixSet="+u+"&TileMatrix={TileMatrix}&TileRow={y}&TileCol={x}");if(null!==s){m.minLevel=e.length;m.maxLevel=0;m.isTileInside=function(e,t,i){return!0};m.getTileDataAvailable=((t,i,o)=>{let a=!1;if(o<r&&o<e.length){const r=e[o],s=r.bbox;a=r.complete?i<=s.maxTileRow&&i>=s.minTileRow&&t<=s.maxTileCol&&t>=s.minTileCol:t<r.maxWidth&&i<r.maxHeight}return a});m.templateToURL=function(t,r,o){let a="";if(i.getTileDataAvailable(t,r,o)){let i=e[o];a=s.replace("{TileMatrix}",i.id).replace("{x}",t).replace("{y}",r)}return a};const t={width:e[0].tileWidth,height:e[0].tileHeight};0===e.filter(e=>e.tileWidth!=t.width||e.tileHeight!=t.height).length&&(m.imageSize=t);m.heightMapWidth=cesium.defaultValue(t.width,256);m.heightMapHeight=cesium.defaultValue(t.widht,256);m.urlGetTile=s;m.ready=!0}}}}return m};this.type="WMTS";e.apply(this,[t,i])};(i.prototype=Object.create(e.prototype)).constructor=i;i._super=e.prototype;i.prototype.getCapabilities=function(){const e=this;var t=e.urlofServer+"?SERVICE=WMTS&request=GetCapabilities";cesium.defined(e.description.proxy)&&(t=e.description.proxy.getURL(t));description=cesium.defaultValue(e.description,cesium.defaultValue.EMPTY_OBJECT);const i=cesium.when.defer();cesium.when(cesium.Resource.fetchXML({url:t}),function(t){this.attributions={};if(t.querySelector("ServiceIdentification")){var r=t.querySelector("ServiceIdentification").querySelector("Title");r&&(this.attributions.name=r.textContent.trim())}if(t.querySelector("ServiceProvider")){var o=t.querySelector("ServiceProvider").querySelector("ProviderSite");o&&(this.attributions.site=o.getAttribute("href"))}i.resolve(this.parse.apply(this,[t,e.description]))}.bind(this));return i};i.prototype.OGCHelper.generate=function(e){var t={};t.heightMapWidth=e.heightMapWidth;t.heightMapHeight=e.heightMapHeight;t.ready=!1;t.maximumLevel=e.maxLevel;t.levelZeroMaximumGeometricError=void 0;t.offset=e.offset;t.highest=e.highest;t.lowest=e.lowest;t.hasStyledImage=e.hasStyledImage||"string"==typeof e.styleName;t.type="WMTS";return t};const r=function(e,t,i,r){const o=cesium.getImagePixels(e,i.width,i.height),a=new Float32Array(o.length/4);for(let e=0;e<o.length;e+=4){const i=o[e];a[e/4]=i/255*(t.highest-t.lowest)+t.offset}return a};function o(e,t,i){var r,o=e.tilingScheme,l=[],n={};for(r=0;r<i.length;++r){var u=o.positionToTileXY(i[r],t),h=u.toString();if(!n.hasOwnProperty(h)){var c={x:u.x,y:u.y,level:t,tilingScheme:o,terrainProvider:e,positions:[]};n[h]=c;l.push(c)}n[h].positions.push(i[r])}var m=[];for(r=0;r<l.length;++r){var f=l[r],p=f.terrainProvider.requestTileGeometry(f.x,f.y,f.level,!1),d=cesium.when(p,a(f),s(f));m.push(d)}return cesium.when.all(m,function(){return i})}function a(e){var t=e.positions,i=e.tilingScheme.tileXYToRectangle(e.x,e.y,e.level);return function(e){for(var r=0;r<t.length;++r){var o=t[r];o.height=e.interpolateHeight(i,o.longitude,o.latitude)}}}function s(e){var t=e.positions;return function(){for(var e=0;e<t.length;++e){t[e].height=void 0}}}t.prototype.sampleTerrainMostDetailed=function(e){var t=this,i=cesium.when.defer();!function r(){t.ready?cesium.when(o(t,16,e),function(e){i.resolve(e)}):setTimeout(r,10)}();return i};i.prototype.sampleTerrainMostDetailed=function(e){var t=this,i=cesium.when.defer();!function r(){t.ready?cesium.when(o(t,16,e),function(e){i.resolve(e)}):setTimeout(r,10)}();return i};cesium.WCSTerrainProvider=t;cesium.WMTSTerrainProvider=i;function l(e){this.database=null;this.objectStoreName=e}l.prototype={createDB:function(){window.indexedDB||(window.indexedDB=window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB);window.IDBTransaction||(window.IDBTransaction=window.webkitIDBTransaction||window.msIDBTransaction);window.IDBKeyRange||(window.IDBKeyRange=window.webkitIDBKeyRange||window.msIDBKeyRange);window.indexedDB||window.alert("Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.");var e=window.indexedDB.open("TileCacheService",1),t=this;e.onsuccess=function(e){t.database=e.target.result};e.onerror=function(e){console.log("IndexedDB--\x3e onerror ")};e.onupgradeneeded=function(e){var t=e.target.result;if(!t.objectStoreNames.contains("WCSTiles")){t.createObjectStore("WCSTiles",{keyPath:"id"}).createIndex("tile",["level","row","column"],{unique:!0})}if(!t.objectStoreNames.contains("WMTSTiles")){t.createObjectStore("WMTSTiles",{keyPath:"id"}).createIndex("tile",["level","row","column"],{unique:!0})}if(!t.objectStoreNames.contains("ImageTiles")){t.createObjectStore("ImageTiles",{keyPath:"id"}).createIndex("tile",["level","row","column"],{unique:!0})}}},info:function(){window.webkitStorageInfo.queryUsageAndQuota(window.TEMPORARY,function(e,t){console.log("Used quota: "+e+", remaining quota: "+t)},function(e){console.log("Error",e)})},isReady:function(){return!!this.database&&this.database.objectStoreNames.contains(this.objectStoreName)},getTileData:function(e,t,i){var r=cesium.when.defer();if(this.database){var o=this.database.transaction(this.objectStoreName).objectStore(this.objectStoreName).index("tile").get([i,t,e]);o.onsuccess=function(e){var t=null;if(e.target.result){t={data:e.target.result.tileData};r.resolve(t)}else r.reject("no tile")};o.onerror=function(e){r.reject("no tile get failed")}}else{console.log("getTileData no database",this.database);r.reject("no IndexedDB")}return r.promise},addTile:function(e,t,i,r){if(this.database){var o=this.database.transaction(this.objectStoreName,"readwrite");try{var a="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)});o.objectStore(this.objectStoreName).add({id:a,level:i,row:t,column:e,tileData:r})}catch(e){console.log(e)}}else console.log("addTile no database")}};function n(){this.tiffDataView=void 0;this.littleEndian=void 0;this.imageWidth=void 0;this.imageLength=void 0;this.bitsPerPixel=void 0;this.samplesPerPixel=void 0;this.photometricInterpretation=void 0;this.compression=void 0;this.fileDirectories=[];this.sampleProperties=[];this.geoKeys=[];this.blocks=[];this.colorMapValues=[];this.colorMapSampleSize=void 0;this.isPixelArea=0;this.planarConfiguration=1;this.extraSamplesValues=[];this.numExtraSamples=0}n.prototype={isLittleEndian:function(){var e=this.getBytes(2,0);if(18761===e)this.littleEndian=!0;else{if(19789!==e){console.log(e);throw TypeError("Invalid byte order value.")}this.littleEndian=!1}return this.littleEndian},hasTowel:function(){if(42!==this.getBytes(2,2))throw RangeError("You forgot your towel!");return!0},getLinearUnitsName:function(e){var t;switch(e){case 0:t="undefined";break;case 9001:t="Linear_Meter";break;case 9002:t="Linear_Foot";break;case 9003:t="Linear_Foot_US_Survey";break;case 9004:t="Linear_Foot_Modified_American";break;case 9005:t="Linear_Foot_Clarke ";break;case 9006:t="Linear_Foot_Indian ";break;case 9007:t="Linear_Link ";break;case 9008:t="Linear_Link_Benoit ";break;case 9009:t="Linear_Link_Sears";break;case 9010:t="Linear_Chain_Benoit";break;case 9011:t="Linear_Chain_Sears";break;case 9012:t="Linear_Yard_Sears";break;case 9013:t="Linear_Yard_Indian";break;case 9014:t="Linear_Fathom";break;case 9015:t="user-Linear_Mile_International_Nautical";break;default:e>=9e3&&e<=9099?t="EPSG Linear Units":e>=9100&&e<=9199?t="EPSG Angular Units":(e=32767)?t="user-defined unit":e>32767&&(t="Private User Implementations")}return t},getAngularUnitsName:function(e){var t;switch(e){case 0:t="undefined";break;case 9001:t="Angular_Radian";break;case 9002:t="Angular_Degree";break;case 9003:t="Angular_Arc_Minute";break;case 9004:t="Angular_Arc_Second";break;case 9005:t="Angular_Grad";break;case 9006:t="Angular_Gon";break;case 9007:t="Angular_DMS";break;case 9008:t="Angular_DMS_Hemisphere";break;default:e>=9e3&&e<=9099?t="EPSG Linear Units":e>=9100&&e<=9199?t="EPSG Angular Units":(e=32767)?t="user-defined unit":e>32767&&(t="Private User Implementations")}return t},getModelTypeName:function(e){var t;switch(e){case 0:t="undefined";break;case 1:t="ModelTypeProjected";break;case 2:t="ModelTypeGeographic";break;case 3:t="ModelTypeGeocentric";break;case 32767:t="user-defined";break;default:e<32767?t="GeoTIFF Reserved Codes":e>32767&&(t="Private User Implementations")}return t},getRasterTypeName:function(e){var t;switch(e){case 0:t="undefined";break;case 1:t="RasterPixelIsArea";break;case 2:t="RasterPixelIsPoint";break;case 32767:t="user-defined";break;default:e<32767?t="GeoTIFF Reserved Codes":e>32767&&(t="Private User Implementations")}return t},getGeoKeyName:function(e){var t,i={1024:"GTModelTypeGeoKey",1025:"GTRasterTypeGeoKey",1026:"GTCitationGeoKey",2048:"GeographicTypeGeoKey",2049:"GeogCitationGeoKey",2050:"GeogGeodeticDatumGeoKey",2051:"GeogPrimeMeridianGeoKey",2052:"GeogLinearUnitsGeoKey",2053:"GeogLinearUnitSizeGeoKey",2054:"GeogAngularUnitsGeoKey",2055:"GeogAngularUnitSizeGeoKey",2056:"GeogEllipsoidGeoKey",2057:"GeogSemiMajorAxisGeoKey",2058:"GeogSemiMinorAxisGeoKey",2059:"GeogInvFlatteningGeoKey",2060:"GeogAzimuthUnitsGeoKey",2061:"GeogPrimeMeridianLongGeoKey",2062:"GeogTOWGS84GeoKey",3072:"ProjectedCSTypeGeoKey",3073:"PCSCitationGeoKey",3074:"ProjectionGeoKey",3075:"ProjCoordTransGeoKey",3076:"ProjLinearUnitsGeoKey",3077:"ProjLinearUnitSizeGeoKey",3078:"ProjStdParallel1GeoKey",3079:"ProjStdParallel2GeoKey",3080:"ProjNatOriginLongGeoKey",3081:"ProjNatOriginLatGeoKey",3082:"ProjFalseEastingGeoKey",3083:"ProjFalseNorthingGeoKey",3084:"ProjFalseOriginLongGeoKey",3085:"ProjFalseOriginLatGeoKey",3086:"ProjFalseOriginEastingGeoKey",3087:"ProjFalseOriginNorthingGeoKey",3088:"ProjCenterLongGeoKey",3089:"ProjCenterLatGeoKey",3090:"ProjCenterEastingGeoKey",3091:"ProjCenterNorthingGeoKey",3092:"ProjScaleAtNatOriginGeoKey",3093:"ProjScaleAtCenterGeoKey",3094:"ProjAzimuthAngleGeoKey",3095:"ProjStraightVertPoleLongGeoKey",3096:"ProjRectifiedGridAngleGeoKey",4096:"VerticalCSTypeGeoKey",4097:"VerticalCitationGeoKey",4098:"VerticalDatumGeoKey",4099:"VerticalUnitsGeoKey"};if(e in i)t=i[e];else{console.log("Unknown geoKey :",e);t=e+"GeoKey"}return t},getFieldTagName:function(e){var t,i={315:"Artist",258:"BitsPerSample",265:"CellLength",264:"CellWidth",320:"ColorMap",259:"Compression",33432:"Copyright",306:"DateTime",338:"ExtraSamples",266:"FillOrder",289:"FreeByteCounts",288:"FreeOffsets",291:"GrayResponseCurve",290:"GrayResponseUnit",316:"HostComputer",270:"ImageDescription",257:"ImageLength",256:"ImageWidth",271:"Make",281:"MaxSampleValue",280:"MinSampleValue",272:"Model",254:"NewSubfileType",274:"Orientation",262:"PhotometricInterpretation",284:"PlanarConfiguration",296:"ResolutionUnit",278:"RowsPerStrip",277:"SamplesPerPixel",305:"Software",279:"StripByteCounts",273:"StripOffsets",255:"SubfileType",263:"Threshholding",282:"XResolution",283:"YResolution",326:"BadFaxLines",327:"CleanFaxData",343:"ClipPath",328:"ConsecutiveBadFaxLines",433:"Decode",434:"DefaultImageColor",269:"DocumentName",336:"DotRange",321:"HalftoneHints",346:"Indexed",347:"JPEGTables",285:"PageName",297:"PageNumber",317:"Predictor",319:"PrimaryChromaticities",532:"ReferenceBlackWhite",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",559:"StripRowCounts",330:"SubIFDs",292:"T4Options",293:"T6Options",325:"TileByteCounts",323:"TileLength",324:"TileOffsets",322:"TileWidth",301:"TransferFunction",318:"WhitePoint",344:"XClipPathUnits",286:"XPosition",529:"YCbCrCoefficients",531:"YCbCrPositioning",530:"YCbCrSubSampling",345:"YClipPathUnits",287:"YPosition",37378:"ApertureValue",40961:"ColorSpace",36868:"DateTimeDigitized",36867:"DateTimeOriginal",34665:"Exif IFD",36864:"ExifVersion",33434:"ExposureTime",41728:"FileSource",37385:"Flash",40960:"FlashpixVersion",33437:"FNumber",42016:"ImageUniqueID",37384:"LightSource",37500:"MakerNote",37377:"ShutterSpeedValue",37510:"UserComment",33723:"IPTC",34675:"ICC Profile",700:"XMP",42112:"GDAL_METADATA",42113:"GDAL_NODATA",34377:"Photoshop",33550:"ModelPixelScale",33922:"ModelTiepoint",34264:"ModelTransformation",34735:"GeoKeyDirectory",34736:"GeoDoubleParams",34737:"GeoAsciiParams"};if(e in i)t=i[e];else{console.log("Unknown Field Tag:",e);t="Tag"+e}return t},getPhotometricName:function(e){var t={0:"PHOTOMETRIC_MINISWHITE",1:"PHOTOMETRIC_MINISBLACK",2:"PHOTOMETRIC_RGB",3:"PHOTOMETRIC_PALETTE",4:"PHOTOMETRIC_MASK",5:"PHOTOMETRIC_SEPARATED",6:"PHOTOMETRIC_YCBCR",8:"PHOTOMETRIC_CIELAB",9:"PHOTOMETRIC_ICCLAB",10:"PHOTOMETRIC_ITULAB",32844:"PHOTOMETRIC_LOGL",32845:"PHOTOMETRIC_LOGLUV"};return e in t?t[e]:"UNKNOWN"},getCompressionTypeName:function(e){var t={1:"COMPRESSION_NONE",2:"COMPRESSION_CCITTRLE",3:"COMPRESSION_CCITTFAX3",4:"COMPRESSION_CCITTFAX4",5:"COMPRESSION_LZW",6:"COMPRESSION_OJPEG",7:"COMPRESSION_JPEG",32766:"COMPRESSION_NEXT",32771:"COMPRESSION_CCITTRLEW",32773:"COMPRESSION_PACKBITS",32809:"COMPRESSION_THUNDERSCAN",32895:"COMPRESSION_IT8CTPAD",32896:"COMPRESSION_IT8LW",32897:"COMPRESSION_IT8MP",32898:"COMPRESSION_IT8BL",32908:"COMPRESSION_PIXARFILM",32909:"COMPRESSION_PIXARLOG",32946:"COMPRESSION_DEFLATE",8:"COMPRESSION_ADOBE_DEFLATE",32947:"COMPRESSION_DCS",34661:"COMPRESSION_JBIG",34676:"COMPRESSION_SGILOG",34677:"COMPRESSION_SGILOG24",34712:"COMPRESSION_JP2000"};return e in t?t[e]:"UNKNOWN"},getFieldTypeName:function(e){var t,i={1:"BYTE",2:"ASCII",3:"SHORT",4:"LONG",5:"RATIONAL",6:"SBYTE",7:"UNDEFINED",8:"SSHORT",9:"SLONG",10:"SRATIONAL",11:"FLOAT",12:"DOUBLE"};e in i&&(t=i[e]);return t},getFieldTypeLength:function(e){var t;-1!==["BYTE","ASCII","SBYTE","UNDEFINED"].indexOf(e)?t=1:-1!==["SHORT","SSHORT"].indexOf(e)?t=2:-1!==["LONG","SLONG","FLOAT"].indexOf(e)?t=4:-1!==["RATIONAL","SRATIONAL","DOUBLE"].indexOf(e)&&(t=8);return t},getBits:function(e,t,i){i=i||0;var r=t+Math.floor(i/8),o=i+e,a=32-e;let s,l;if(o<=0){console.log(e,t,i);throw RangeError("No bits requested")}if(o<=8){l=24+i;s=this.tiffDataView.getUint8(r,this.littleEndian)}else if(o<=16){l=16+i;s=this.tiffDataView.getUint16(r,this.littleEndian)}else{if(!(o<=32)){console.log(e,t,i);throw RangeError("Too many bits requested")}l=i;s=this.tiffDataView.getUint32(r,this.littleEndian)}return{bits:s<<l>>>a,byteOffset:r+Math.floor(o/8),bitOffset:o%8}},getBytes:function(e,t){if(e<=0){console.log(e,t);throw RangeError("No bytes requested")}if(e<=1)return this.tiffDataView.getUint8(t,this.littleEndian);if(e<=2)return this.tiffDataView.getUint16(t,this.littleEndian);if(e<=3)return this.tiffDataView.getUint32(t,this.littleEndian)>>>8;if(e<=4)return this.tiffDataView.getUint32(t,this.littleEndian);if(e<=8)return this.tiffDataView.getFloat64(t,this.littleEndian);throw RangeError("Too many bytes requested")},getSampleBytes:function(e,t,i){switch(e){case 1:case 2:return this.getBytes(t,i);case 3:if(3==t)return this.tiffDataView.getFloat32(i,this.littleEndian)>>>8;if(4==t)return this.tiffDataView.getFloat32(i,this.littleEndian);case 5:case 6:case 4:default:throw Error("Do not attempt to parse the data  not handled  : "+e)}},getFieldValues:function(e,t,i,r){var o=[],a=this.getFieldTypeLength(t),s=a*i;if(s<=4){let e;e=!1===this.littleEndian?r>>>8*(4-a):r;o.push(e)}else for(var l=0;l<i;l++){var n=a*l;if(a>=8)if(-1!==["RATIONAL","SRATIONAL"].indexOf(t)){o.push(this.getBytes(4,r+n));o.push(this.getBytes(4,r+n+4))}else-1!==["DOUBLE"].indexOf(t)?o.push(this.getBytes(8,r+n)):console.log(" fff"+t,i,s);else o.push(this.getBytes(a,r+n))}"ASCII"===t&&o.forEach(function(e,t,i){i[t]=String.fromCharCode(e)});return o},clampColorSample:function(e,t){var i=Math.pow(2,8-t);return Math.floor(e*i+(1-i))},clampAffineColorSample:function(e,t,i,r){var o=Math.pow(2,8)/r;return Math.floor((e-i)*o)},makeRGBAFillValue:function(e,t,i,r){void 0===r&&(r=1);return"rgba("+e+", "+t+", "+i+", "+r+")"},parseFileDirectory:function(e){for(var t=this.getBytes(2,e),i=[],r=e+2,o=0;o<t;r+=12,o++){var a=this.getBytes(2,r),s=this.getBytes(2,r+2),l=this.getBytes(4,r+4),n=this.getBytes(4,r+8),u=this.getFieldTagName(a),h=this.getFieldTypeName(s),c=this.getFieldValues(u,h,l,n);i[u]={type:h,values:c}}this.fileDirectories.push(i);var m=this.getBytes(4,r);return 0===m?this.fileDirectories:this.parseFileDirectory(m)},isGeotiff:function(){var e=this.fileDirectories[0];return void 0!==e.GeoKeyDirectory&&null!=e.GeoKeyDirectory&&void 0!==e.GeoKeyDirectory.values&&null!=e.GeoKeyDirectory.values&&!(e.GeoKeyDirectory.values.length<4)},getPlanarConfiguration:function(){var e=this.fileDirectories[0];return 0==e.hasOwnProperty("PlanarConfiguration")||0==e.PlanarConfiguration.hasOwnProperty("values")||null==e.PlanarConfiguration.values?1:e.PlanarConfiguration.values[0]},getSampleFormat:function(){var e=this.fileDirectories[0];return 0==e.hasOwnProperty("SampleFormat")||0==e.SampleFormat.hasOwnProperty("values")||null==e.SampleFormat.values?1:e.SampleFormat.values[0]},getSampleMinMax:function(){var e=this.fileDirectories[0];return 0==e.hasOwnProperty("SMaxSampleValue")||0==e.SMaxSampleValue.hasOwnProperty("values")||null==e.SMaxSampleValue.values?-1:0==e.hasOwnProperty("SMinSampleValue")||0==e.SMinSampleValue.hasOwnProperty("values")||null==e.SMinSampleValue.values?-1:[e.SMinSampleValue.values,e.SMaxSampleValue.values]},isBlockLoaded:function(e){for(var t=this.blocks,i=0;i<t.length;i++)if(null!=this.blocks[i]&&this.blocks[i].offset==e)return i;return-1},getBlock:function(e){for(var t=this.blocks,i=0;i<t.length;i++)if(null!=this.blocks[i]&&this.blocks[i].offset==e)return this.blocks[i];return null},addBlock:function(e,t){this.blocks[e]=t},hasStripOffset:function(){var e=this.fileDirectories[0];return void 0!==e.StripOffsets&&null!=e.StripOffsets&&void 0!==e.StripOffsets.values&&null!=e.StripOffsets.values},hasTileOffset:function(){var e=this.fileDirectories[0];return 0!=e.hasOwnProperty("TileOffsets")&&0!=e.TileOffsets.hasOwnProperty("values")&&null!=e.TileOffsets.values},parseGeoKeyDirectory:function(){var e=this.fileDirectories[0];if(0!=this.isGeotiff()){for(var t=e.GeoKeyDirectory.values[3],i=[],r=0;r<t;r++){var o=e.GeoKeyDirectory.values[4+4*r],a=e.GeoKeyDirectory.values[5+4*r],s=e.GeoKeyDirectory.values[6+4*r],l=e.GeoKeyDirectory.values[7+4*r],n="undefined";if(0==a)n=l;else if("GeoKeyDirectory"==this.getFieldTagName(a)){console.log("ent_key ="+this.getGeoKeyName(o));console.log("ent_count ="+s);console.log("ent_val_offset ="+l);console.log("GeoKeyDirectory =")}else if("GeoDoubleParams"==this.getFieldTagName(a)){n=e.GeoDoubleParams.values[l]}else if("GeoAsciiParams"==this.getFieldTagName(a)){var u="",h=e.GeoAsciiParams.values;if("undefined"!=l&&"undefined"!=s&&s>0&&l<=s-1){for(var c=l;c<s-1;c++)u+=h[c];"|"!=h[s-1]&&(u+=h[s-1])}n=u}i[this.getGeoKeyName(o)]={value:n}}this.geoKeys=i;0==this.geoKeys.hasOwnProperty("GTRasterTypeGeoKey")&&(this.isPixelArea=0);"RasterPixelIsArea"==this.getRasterTypeName(this.geoKeys.GTRasterTypeGeoKey.value)&&(this.isPixelArea=1)}},consoleTiffProperty:function(){console.log("--------------- Tiff property -------------------");console.log("Image : w="+this.imageWidth+" h="+this.imageLength);console.log("BitsPerPixel="+this.bitsPerPixel);console.log("SamplesPerPixel="+this.samplesPerPixel);console.log("PlanarConfiruration="+this.planarConfiguration);console.log("Photometric ="+this.getPhotometricName(this.photometricInterpretation));console.log("Compression ="+this.getCompressionTypeName(this.compression));console.log("SampleFormat : ",this.getSampleFormat());console.log("getSampleMinMax : ",this.getSampleMinMax());var e=this.fileDirectories[0];if(this.hasStripOffset()){var t=e.StripOffsets.values.length;console.log("Has Strips nb offsetvalues count:"+t)}if(this.hasTileOffset()){t=e.TileOffsets.values.length;console.log("Has Tiles  offsetvalues count:"+t)}},consoleGeotiffProperty:function(){console.log("--------------- GeoTiff property -------------------");var e=this.fileDirectories[0],t=e.GeoKeyDirectory.values[0],i=e.GeoKeyDirectory.values[1],r=e.GeoKeyDirectory.values[2],o=e.GeoKeyDirectory.values[3];console.log("hdr_version ="+e.GeoKeyDirectory+" "+t);console.log("hdr_rev_major ="+e.GeoKeyDirectory+" "+i);console.log("hdr_rev_minor ="+e.GeoKeyDirectory+" "+r);console.log("hdr_num_keys ="+e.GeoKeyDirectory+" "+o);this.consoleCRSProperty();console.log("pixelSize ="+this.getPixelSize())},consoleTestGeorefImage:function(){var e=this.ImageToPCS(2,2);1==e[0]?console.log(" ImageToPCS "+e[1]+" "+e[2]):console.log(" ImageToPCS failure");var t=this.PCSToImage(e[1],e[2]);1==t[0]?console.log(" PCSToImage "+t[1]+" "+t[2]):console.log(" PCSToImage failure")},parseHeader:function(e){this.tiffDataView=new DataView(e);this.littleEndian=this.isLittleEndian(this.tiffDataView);if(this.hasTowel(this.tiffDataView,this.littleEndian)){var t=this.getBytes(4,4);this.fileDirectories=this.parseFileDirectory(t);var i=this.fileDirectories[0];this.imageWidth=i.ImageWidth.values[0];this.imageLength=i.ImageLength.values[0];this.photometricInterpretation=i.PhotometricInterpretation.values[0];this.samplesPerPixel=i.SamplesPerPixel.values[0];this.bitsPerPixel=0;i.BitsPerSample.values.forEach(function(e,t,i){this.sampleProperties[t]={bitsPerSample:e,hasBytesPerSample:!1,bytesPerSample:void 0};if(e%8==0){this.sampleProperties[t].hasBytesPerSample=!0;this.sampleProperties[t].bytesPerSample=e/8}this.bitsPerPixel+=e},this);this.compression=i.Compression?i.Compression.values[0]:1;if(i.ColorMap){this.colorMapValues=i.ColorMap.values;this.colorMapSampleSize=Math.pow(2,this.sampleProperties[0].bitsPerSample)}if(i.ExtraSamples){this.extraSamplesValues=i.ExtraSamples.values;this.numExtraSamples=this.extraSamplesValues.length}i.hasOwnProperty("PlanarConfiguration")&&1==i.PlanarConfiguration.hasOwnProperty("values")&&(this.planarConfiguration=i.PlanarConfiguration.values[0]);this.parseGeoKeyDirectory()}},decodeBlock:function(e,t,i){var r=[],o=1,a=[],s=this.getSampleFormat();switch(this.compression){case 1:var l=0,n=!1;if(this.bitsPerPixel%8==0){n=!0;var u=this.bitsPerPixel/8}if(!n){o=0;throw RangeError("Cannot handle sub-byte bits per pixel")}o=u;for(var h=0;h<t;h+=o){var c=0;for(a=[];c<this.samplesPerPixel;c++){if(!this.sampleProperties[c].hasBytesPerSample){var m=this.getBits(this.sampleProperties[c].bitsPerSample,e+h,l);a.push(m.bits);h=m.byteOffset-e;l=m.bitOffset;throw RangeError("Cannot handle sub-byte bits per sample")}var f=this.sampleProperties[c].bytesPerSample*c;a.push(this.getSampleBytes(s,this.sampleProperties[c].bytesPerSample,e+h+f))}r.push(a)}break;case 5:LZString.decompressFromUint8Array(r);break;case 32946:var p=new i.Inflate;l=0,n=!1;if(this.bitsPerPixel%8==0){n=!0;u=this.bitsPerPixel/8}if(!n){o=0;throw RangeError("Cannot handle sub-byte bits per pixel")}o=u;var d=!1;for(h=0;h<t;h+=o){for(c=0,a=[];c<this.samplesPerPixel;c++){if(!this.sampleProperties[c].hasBytesPerSample){m=this.getBits(this.sampleProperties[c].bitsPerSample,e+h,l);a.push(m.bits);h=m.byteOffset-e;l=m.bitOffset;throw RangeError("Cannot handle sub-byte bits per sample")}f=this.sampleProperties[c].bytesPerSample*c;a.push(this.getBytes(this.sampleProperties[c].bytesPerSample,e+h+f))}h+o>=t&&(d=!0);p.push(a,d)}p.err&&console.log(p.msg);r.push(p.result);break;case 32773:var g=0,v=0,S=0,y=!0;for(h=0;h<t;h+=o){var P,T;if(y){y=!1;P=1;T=1;var x=this.tiffDataView.getInt8(e+h,this.littleEndian);x>=0&&x<=127?P=x+1:x>=-127&&x<=-1?T=1-x:y=!0}else{var C=this.getBytes(1,e+h);for(c=0;c<T;c++){if(!this.sampleProperties[v].hasBytesPerSample)throw RangeError("Cannot handle sub-byte bits per sample");g=g<<8*S|C;if(++S===this.sampleProperties[v].bytesPerSample){a.push(g);g=S=0;v++}if(v===this.samplesPerPixel){r.push(a);a=[];v=0}}0===--P&&(y=!0)}o=1}break;default:throw Error("Do not attempt to parse the data Compression not handled  : "+this.getCompressionTypeName(this.compression))}return{offset:e,value:r}},getDecompressionModule:function(e,t,i){i=void 0;32946==this.compression&&define(function(e){i=e("pako_inflate")});return i},loadPixels:function(){for(var e=[],t=0,i=0;i<this.imageLength;i++)for(var r=0;r<this.imageWidth;r++)for(var o=this.getPixelValueOnDemand(r,i),a=0;a<this.samplesPerPixel;a++){e[t]=o[a];t++}return e},getRGBAPixelValue:function(e){var t=0,i=0,r=0,o=1;if(this.numExtraSamples>0)for(var a=0;a<this.numExtraSamples;a++)if(1===this.extraSamplesValues[a]||2===this.extraSamplesValues[a]){o=e[3+a]/256;break}switch(this.photometricInterpretation){case 0:if(this.sampleProperties[0].hasBytesPerSample)var s=Math.pow(16,2*this.sampleProperties[0].bytesPerSample);e.forEach(function(e,t,i){i[t]=s-e});case 1:t=i=r=this.clampColorSample(e[0],this.sampleProperties[0].bitsPerSample);break;case 2:if(1==this.samplesPerPixel)t=i=r=this.clampColorSample(e[0],this.sampleProperties[0].bitsPerSample);else if(this.samplesPerPixel>2){t=this.clampColorSample(e[0],this.sampleProperties[0].bitsPerSample);i=this.clampColorSample(e[1],this.sampleProperties[1].bitsPerSample);r=this.clampColorSample(e[2],this.sampleProperties[2].bitsPerSample)}if(4==this.samplesPerPixel){var l=Math.pow(2,this.sampleProperties[0].bitsPerSample);o=e[3]/l}break;case 3:if(void 0===this.colorMapValues)throw Error("Palette image missing color map");var n=e[0];t=this.clampColorSample(this.colorMapValues[n],16);i=this.clampColorSample(this.colorMapValues[this.colorMapSampleSize+n],16);r=this.clampColorSample(this.colorMapValues[2*this.colorMapSampleSize+n],16);break;default:throw RangeError(" Photometric Interpretation Not Yet Implemented::",this.getPhotometricName(this.photometricInterpretation))}return[t,i,r,o]},getMinMaxPixelValue:function(e,t,i){var r=0,o=0,a=0,s=1;if(this.numExtraSamples>0)for(var l=0;l<this.numExtraSamples;l++)if(1===this.extraSamplesValues[l]||2===this.extraSamplesValues[l]){s=e[3+l]/256;break}switch(this.photometricInterpretation){case 0:if(this.sampleProperties[0].hasBytesPerSample)var n=Math.pow(16,2*this.sampleProperties[0].bytesPerSample);e.forEach(function(e,t,i){i[t]=n-e});case 1:r=o=a=this.clampAffineColorSample(e[0],this.sampleProperties[0].bitsPerSample,t,i);break;case 2:if(1==this.samplesPerPixel)r=o=a=this.clampAffineColorSample(e[0],this.sampleProperties[0].bitsPerSample,t,i);else if(this.samplesPerPixel>2){r=this.clampAffineColorSample(e[0],this.sampleProperties[0].bitsPerSample,t,i);o=this.clampAffineColorSample(e[1],this.sampleProperties[1].bitsPerSample,t,i);a=this.clampAffineColorSample(e[2],this.sampleProperties[2].bitsPerSample,t,i)}if(4==this.samplesPerPixel){var u=Math.pow(2,this.sampleProperties[0].bitsPerSample);s=e[3]/u}break;case 3:if(void 0===this.colorMapValues)throw Error("Palette image missing color map");var h=e[0];r=this.clampAffineColorSample(this.colorMapValues[h],16,t,i);o=this.clampAffineColorSample(this.colorMapValues[this.colorMapSampleSize+h],16,t,i);a=this.clampAffineColorSample(this.colorMapValues[2*this.colorMapSampleSize+h],16,t,i);break;default:throw RangeError(" Photometric Interpretation Not Yet Implemented::",this.getPhotometricName(this.photometricInterpretation))}return[r,o,a,s]},getClosestPixelValue:function(e,t){e=Math.floor(e);t=Math.floor(t);var i=this.fileDirectories[0],r=0,o=[],a=[],s=0,l=this.getDecompressionModule(),n=e,u=t,h=0,c=[];if(this.hasStripOffset()){if(i.RowsPerStrip){s=i.RowsPerStrip.values[0];r=Math.floor(t/s)}else s=this.imageLength;o=i.StripOffsets.values;h=this.imageWidth;if(-1==(m=this.isBlockLoaded(o[r]))){if(!i.StripByteCounts){console.log("Missing StripByteCounts!");throw Error("Cannot recover from missing StripByteCounts")}a=i.StripByteCounts.values;c=this.decodeBlock(o[r],a[r],l);this.addBlock(r,c)}else c=this.blocks[m];u=t%s}else if(this.hasTileOffset()){o=i.TileOffsets.values;var m,f=i.TileLength.values[0],p=i.TileWidth.values[0],d=Math.floor(e/p);r=Math.floor(t/f)*Math.ceil(this.imageWidth/p)+d;h=p;if(-1==(m=this.isBlockLoaded(o[r]))){a=i.TileByteCounts.values;c=this.decodeBlock(o[r],a[r],l);this.addBlock(r,c)}else c=this.blocks[m];n=e%p;u=t%f}var g=u*h+n;return c.value[g]},getPixelValueOnDemand:function(e,t){if(1!=this.planarConfiguration)throw"Other Planar Configuration is not yet implemented";if(this.isPixelArea)return this.getClosestPixelValue(e,t);var i=Math.floor(e+.5),r=Math.floor(t+.5);return this.getClosestPixelValue(i,r)},getCRSCode:function(){var e=0;if(0==this.geoKeys.hasOwnProperty("GTModelTypeGeoKey"))return 0;"ModelTypeGeographic"==this.getModelTypeName(this.geoKeys.GTModelTypeGeoKey.value)&&this.geoKeys.hasOwnProperty("GeographicTypeGeoKey")?e=this.geoKeys.GeographicTypeGeoKey.value:"ModelTypeProjected"==this.getModelTypeName(this.geoKeys.GTModelTypeGeoKey.value)&&this.geoKeys.hasOwnProperty("ProjectedCSTypeGeoKey")?e=this.geoKeys.ProjectedCSTypeGeoKey.value:"user-defined"==this.getModelTypeName(this.geoKeys.GTModelTypeGeoKey.value)&&(this.geoKeys.hasOwnProperty("ProjectedCSTypeGeoKey")?e=this.geoKeys.ProjectedCSTypeGeoKey.value:this.geoKeys.hasOwnProperty("GeographicTypeGeoKey")?e=this.geoKeys.GeographicTypeGeoKey.value:this.geoKeys.hasOwnProperty("GTCitationGeoKey")&&-1!=this.geoKeys.GTCitationGeoKey.value.search("WGS_1984_Web_Mercator_Auxiliary_Sphere")?e=3857:this.consoleCRSProperty());return e},consoleCRSProperty:function(){this.test_consoleGeoKeys("GeoTIFF Configuration GeoKeys",[1024,1026]);this.test_consoleGeoKeys("Geographic CS Parameter GeoKeys",[2048,2061]);this.test_consoleGeoKeys("Projected CS Parameter GeoKeys",[3072,3073]);this.test_consoleGeoKeys("Projection Definition GeoKeys",[3074,3094]);this.test_consoleGeoKeys("Vertical CS Parameter Keys",[4096,4099])},test_consoleGeoKeys:function(e,t){console.log(e);for(var i=t[0];i<=t[1];i++){var r=this.getGeoKeyName(i);this.geoKeys.hasOwnProperty(r)&&console.log(r+" "+this.geoKeys[r].value)}},isPixelArea:function(){return 0==this.geoKeys.hasOwnProperty("GTRasterTypeGeoKey")||"RasterPixelIsArea"==this.getRasterTypeName(this.geoKeys.GTRasterTypeGeoKey.value)},getPixelValue:function(e,t,i){if(1!=this.getPlanarConfiguration())throw"Other Planar Configuration is not yet implemented";var r=[];if(t<0||t>=this.imageWidth||i<0||i>=this.imageLength)return r;for(var o=this.samplesPerPixel*(i*this.imageWidth+t),a=0;a<this.samplesPerPixel;a++)r[a]=e[o+a];return r},getLowResPixelValue:function(e,t,i){if(1!=this.getPlanarConfiguration())throw"Other Planar Configuration is not yet implemented";var r=[];if(t<0||t>=this.imageWidth||i<0||i>=this.imageLength)return r;for(var o=this.samplesPerPixel*(i*this.imageWidth+t),a=t<this.imageWidth?t+1:t,s=this.samplesPerPixel*(i*this.imageWidth+a),l=this.samplesPerPixel*(i*this.imageWidth+t),n=this.samplesPerPixel*((i<this.imageLength?i+1:i)*this.imageWidth+a),u=0;u<this.samplesPerPixel;u++){var h=(e[o+u]+e[s+u]+e[l+u]+e[n+u])/4;r[u]=Math.round(h)}return r},toCanvas:function(e,t,i,r,o,a,s){var l=e||document.createElement("canvas");if(null==l.getContext)throw RangeError("No Context for canvas");var n=l.getContext("2d");l.width=r-t;l.height=o-t;var u=[];n.fillStyle=this.makeRGBAFillValue(255,255,255,0);for(var h=i;h<o;h++)for(var c=t;c<r;c++){var m=this.getPixelValueOnDemand(c,h);u="undefined"!=m?"undefined"!=a&&"undefined"!=s?this.getMinMaxPixelValue(m,a,s):this.getRGBAPixelValue(m):[255,0,0,1];n.fillStyle=this.makeRGBAFillValue(u[0],u[1],u[2],u[3]);n.fillRect(c-t,h-i,1,1)}return l},getPixelSize:function(){var e=this.fileDirectories[0];if(void 0!==e.ModelPixelScale&&null!=e.ModelPixelScale&&void 0!==e.ModelPixelScale.values&&null!=e.ModelPixelScale.values)return e.ModelPixelScale.values;var t=this.ImageToPCS(0,0),i=this.ImageToPCS(1,0),r=this.ImageToPCS(0,1);return 0==t[0]||0==i[0]||0==r[0]?["undefined","undefined"]:[i[1]-t[1],r[2]-t[2]]},GTIFTiepointTranslate:function(e,t,i,r){this.fileDirectories[0].ModelTiepoint.values;return[0,t,i]},GetBBox:function(){var e=this.getCRSCode(),t=this.ImageToPCS(0,0),i=this.ImageToPCS(this.imageWidth,0),r=this.ImageToPCS(0,this.imageLength),o=this.ImageToPCS(this.imageWidth,this.imageLength);if(1!=t[0]||1!=i[0]||1!=r[0]||1!=o[0])throw TypeError("BBox error");var a=[];a.push(t.splice(1,2));a.push(r.splice(1,2));a.push(o.splice(1,2));a.push(i.splice(1,2));var s="EPSG:"+e.toString();return{WKID:e.toString(),EPSG:s,coord:a,ulidx:0,llidx:1,lridx:2,uridx:3}},ImageToPCS:function(e,t){var i,r,o,a=[0,e,t],s=this.fileDirectories[0];if(void 0===s.ModelTiepoint||null==s.ModelTiepoint||void 0===s.ModelTiepoint.values||null==s.ModelTiepoint.values)i=0;else{i=s.ModelTiepoint.values.length}if(void 0===s.ModelPixelScale||null==s.ModelPixelScale||void 0===s.ModelPixelScale.values||null==s.ModelPixelScale.values)r=0;else{r=s.ModelPixelScale.values.length}if(void 0===s.ModelTransformation||null==s.ModelTransformation||void 0===s.ModelTransformation.values||null==s.ModelTransformation.values)o=0;else{o=s.ModelTransformation.values.length}if(i>6&&0==r){console.log(" tiepoint_count ",i);a=this.GTIFTiepointTranslate(i/6,e,t,!0)}else if(16==o){var l=s.ModelTransformation.values,n=e,u=t;a=[1,e=n*l[0]+u*l[1]+l[3],t=n*l[4]+u*l[5]+l[7]]}else if(r<3||i<6)a=[0,e,t];else{var h=s.ModelPixelScale.values,c=s.ModelTiepoint.values;a=[1,e=(e-c[0])*h[0]+c[3],t=(t-c[1])*(-1*h[1])+c[4]]}return a},inv_geotransform:function(e){var t,i,r=[0,0,0,0,0,0];t=e[0]*e[4]-e[1]*e[3];if(Math.abs(t)<1e-15)return[0,r];i=1/t;r[0]=e[4]*i;r[3]=-e[3]*i;r[1]=-e[1]*i;r[4]=e[0]*i;r[2]=(e[1]*e[5]-e[2]*e[4])*i;r[5]=(-e[0]*e[5]+e[2]*e[3])*i;return[1,r]},PCSToImage:function(e,t){var i,r,o=[0,e,t],a=0,s=this.fileDirectories[0];if(void 0===s.ModelTiepoint||null==s.ModelTiepoint||void 0===s.ModelTiepoint.values||null==s.ModelTiepoint.values)i=0;else{i=s.ModelTiepoint.values.length}if(void 0===s.ModelPixelScale||null==s.ModelPixelScale||void 0===s.ModelPixelScale.values||null==s.ModelPixelScale.values)r=0;else{r=s.ModelPixelScale.values.length}if(void 0===s.ModelTransformation||null==s.ModelTransformation||void 0===s.ModelTransformation.values||null==s.ModelTransformation.values)a=0;else{a=s.ModelTransformation.values.length}if(i>6&&0==r)o=this.GTIFTiepointTranslate(i/6,e,t,!1);else if(16==a){var l=s.ModelTransformation.values,n=e,u=t,h=[0,0,0,0,0,0];h[0]=l[0];h[1]=l[1];h[2]=l[3];h[3]=l[4];h[4]=l[5];h[5]=l[7];var c=this.inv_geotransform(h);if(c[0]){var m=c[1];o=[1,e=n*m[0]+u*m[1]+m[2],t=n*m[3]+u*m[4]+m[5]]}else o=[0,e,t]}else if(r>=3&&i>=6){var f=s.ModelPixelScale.values,p=s.ModelTiepoint.values;o=[1,e=(e-p[3])/f[0]+p[0],t=(t-p[4])/(-1*f[1])+p[1]]}return o}};function u(e){for(var t=0;t<e.length;t++){var i=parseFloat(e[t]);isNaN(i)||(e[t]=i)}return e}}();export default MergeTerrainProvider;