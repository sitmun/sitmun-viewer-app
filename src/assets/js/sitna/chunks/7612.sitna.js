"use strict";(self.webpackChunkSITNA=self.webpackChunkSITNA||[]).push([[7612,2026],{2026:(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var o=t(688),n=t(268);const r=class{constructor(e){const s=this;s.options=e||{},s.url=s.options.url,s.process=s.options.process,s.minimumElevation=s.options.minimumElevation,n.Z.isFunction(s.options.request)&&(s.request=s.options.request),n.Z.isFunction(s.options.parseResponse)&&(s.parseResponse=s.options.parseResponse)}async getElevation(e){const s=this;void 0===(e=e||{}).resolution&&(e.resolution=s.options.resolution),void 0===e.sampleNumber&&(e.sampleNumber=s.options.sampleNumber);const t=await s.request(e);return(e.responseCallback||s.parseResponse).call(s,t,e)}async request(e){const s=this;if((e=e||{}).dataInputs||e.body){const n=await t.e(2688).then(t.t.bind(t,2688,23)),r={process:e.process||s.process,dataInputs:e.dataInputs,responseType:SITNA.Consts.mimeType.JSON,version:e.serviceVersion||s.serviceVersion||"1.0.0",output:e.output},a="boolean"==typeof e.contentType?e.contentType:e.contentType||SITNA.Consts.mimeType.XML;return(await o.Z.ajax({url:s.url,method:"POST",contentType:a,responseType:SITNA.Consts.mimeType.JSON,data:e.body||n.buildExecuteQuery(r)})).data}throw Error("Request is not valid for elevation service")}parseResponse(e,s){var t=this;if(e.coordinates){e.coordinates.forEach((function(e){e[2]<t.minimumElevation&&(e[2]=null)}))}return e.coordinates||[]}cancelRequest(e){}}},7612:(e,s,t)=>{t.r(s),t.d(s,{default:()=>i});var o=t(688),n=t(2026),r=t(330);class a extends n.default{constructor(){super(...arguments);const e=this;e.url=e.options.url||"//idena.navarra.es/ogc/wps",e.process=e.options.process||"gs:ExtractRasterPoints",e.coverageClass=e.options.coverageClass||"MDT_maxima_actualidad,Alturas_maxima_actualidad",e.minimumElevation=e.options.minimumElevation||-9998}request(e){const s={coordinates:(e=e||{}).coordinates,type:r.Z.geom.POLYLINE};1===e.coordinates.length&&(s.coordinates=e.coordinates[0],s.type=r.Z.geom.POINT);let t=e.coverageClass||this.coverageClass;const n=t.indexOf(",");t&&n>=0&&!e.includeHeights&&(t=t.substr(0,n));const a={coverageClass:t,geometry:{mimeType:r.Z.mimeType.JSON,value:o.Z.wrap.Geometry.toGeoJSON(s)}};if(e.crs){var i=e.crs.lastIndexOf(":");i<0&&(i=e.crs.lastIndexOf("#")),a.srid=e.crs.substr(i+1)}return super.request.call(this,{dataInputs:a},e)}parseResponse(e,s){const t=this,o=s.coverageClass||t.coverageClass,n=s.includeHeights&&o?o.split(",").length:1;if(n<=1)return super.parseResponse.call(t,e,s);if(e.coordinates){const s=e.coordinates,o=s.length/n,i=s.slice(0,o);var r;for(r=0;r<o;r++){const e=i[r];e[2]<t.minimumElevation&&(e[2]=null)}for(r=1;r<n;r++){const e=r*o;for(var a=0;a<o;a++){const o=s[a+e][2];i[a].push(o<t.minimumElevation?null:o)}}return i}return[]}}const i=a}}]);
//# sourceMappingURL=../maps/chunks/7612.sitna.js.map