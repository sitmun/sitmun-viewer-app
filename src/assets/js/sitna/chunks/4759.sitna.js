(self.webpackChunkSITNA=self.webpackChunkSITNA||[]).push([[4759],{800:(e,t,n)=>{var o={"./Elevation":[2331],"./Elevation.js":[2331],"./ElevationService":[2026,2026],"./ElevationService.js":[2026,2026],"./ElevationServiceGoogle":[4736,4736],"./ElevationServiceGoogle.js":[4736,4736],"./ElevationServiceIDENA":[7612,7612],"./ElevationServiceIDENA.js":[7612,7612],"./ElevationServiceIGNEs":[3688,3688],"./ElevationServiceIGNEs.js":[3688,3688],"./ElevationServiceIGNFr":[6468,6468],"./ElevationServiceIGNFr.js":[6468,6468],"./ExcelExport":[1446],"./ExcelExport.js":[1446],"./Proxification":[4676],"./Proxification.js":[4676]};function r(e){if(!n.o(o,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],r=t[0];return Promise.all(t.slice(1).map(n.e)).then((()=>n(r)))}r.keys=()=>Object.keys(o),r.id=800,e.exports=r},2331:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});var o=n(688),r=n(330),i=n(268),a=n(1399);r.Z.elevationService={GOOGLE:"elevationServiceGoogle",IDENA:"elevationServiceIDENA",IGN_ES:"elevationServiceIGNEs",IGN_FR:"elevationServiceIGNFr"},o.Z.tool=o.Z.tool||{};const l=function(e){const t=this;t.options=e||{},t._servicePromises=[];(t.options.services||[r.Z.elevationService.IDENA,r.Z.elevationService.IGN_FR,r.Z.elevationService.IGN_ES]).forEach((function(e,r){t._servicePromises[r]=new Promise((function(t,r){const i="string"==typeof e?e:e.name,a=i.substr(0,1).toUpperCase()+i.substr(1),l="string"==typeof e?{}:e;n(800)("./"+a).then((function(e){const n=e.default;o.Z.tool[a]=n,t(new n(l))}))}))}))};!function(){const e=l.prototype;let t=1;e.getService=function(e){return this._servicePromises[e]},e.getServices=function(){return Promise.all(this._servicePromises)},e.getElevation=async function(e){const n=this,o=Object.assign({},e);o.id=function(){const e=t.toString();return t++,e}(),void 0===o.resolution&&(o.resolution=n.options.resolution),void 0===o.sampleNumber&&(o.sampleNumber=n.options.sampleNumber);let r,l,s=!1;i.Z.isFunction(o.partialCallback)&&(l=o.partialCallback);const c=1===o.coordinates.length;o.coordinates=a.Z.interpolate(o.coordinates,o),o.resolution=0,o.sampleNumber=0,r=o.coordinates.map((e=>[e[0],e[1],null])),Object.prototype.hasOwnProperty.call(o,"includeHeights")||(o.includeHeights=c);const u=await n.getServices(),f=new Array(u.length);f.fill(!1);for(var v=0,E=u.length;v<E;v++){const t=v,i=u[v],a=async function(){if(navigator.onLine)try{const e=await i.request(o);return s?null:i.parseResponse(e,o)}catch(e){return null}return null};let c;try{c=await a()}catch(e){console.error(e)}if(!s){if(f[t]=c,null===c){if(f.every((e=>null===e)))throw Error("No services available")}else n._updatePartialResult(r,f)&&(s=!0),l&&l(r);if(s)return f.forEach(((t,n)=>!1===t&&u[n].cancelRequest(e.id))),r.some((e=>null!==e[2]))?r:[]}}},e.setGeometry=async function(e){const t=this,n=(e=e||{}).features||[];if(n.length){const r=function(e,t,n){Promise.all(e).then((function(e){t(e)}),(function(e){n(e)}))};if(e.maxCoordQuantity&&e.resolution){if(n.reduce((function(t,n){if(n)switch(t+=n.getCoords({pointArray:!0}).length,!0){case SITNA.feature.Polyline&&n instanceof SITNA.feature.Polyline:case SITNA.feature.Polygon&&n instanceof SITNA.feature.Polygon:case SITNA.feature.MultiPolyline&&n instanceof SITNA.feature.MultiPolyline:case SITNA.feature.MultiPolygon&&n instanceof SITNA.feature.MultiPolygon:t+=Math.floor(n.getLength()/e.resolution)}return t}),0)>e.maxCoordQuantity)throw Error(l.errors.MAX_COORD_QUANTITY_EXCEEDED)}const i=e.resolution||0,s=function(t){return{crs:e.crs,coordinates:t,resolution:i,sampleNumber:0}},c=function(e){return t.getElevation(s(e))},u=n.map((function(e){return new Promise((function(n,o){switch(!0){case!e:n(null);break;case SITNA.feature&&SITNA.feature.MultiPolygon&&e instanceof SITNA.feature.MultiPolygon:{const t=e.getCoords().map((function(e){return new Promise((function(t,n){r(e.map(c),t,n)}))}));r(t,n,o);break}case SITNA.feature&&SITNA.feature.Polygon&&e instanceof SITNA.feature.Polygon:case SITNA.feature&&SITNA.feature.MultiPolyline&&e instanceof SITNA.feature.MultiPolyline:{const t=e.getCoords().map(c);r(t,n,o);break}case SITNA.feature&&SITNA.feature.Polyline&&e instanceof SITNA.feature.Polyline:t.getElevation(s(e.getCoords())).then((function(e){n(e)}),(function(e){o(Error(e))}));break;case SITNA.feature&&SITNA.feature.Point&&e instanceof SITNA.feature.Point:t.getElevation(s([e.getCoords()])).then((function(e){n(e[0])}),(function(e){o(Error(e))}));break;default:o(Error("Geometry not supported"))}}))})),f=await Promise.all(u),v=function(e,t){a.Z.isPoint(e)?(t[2]=e[2],e.length>3&&(t[3]=e[3])):Array.isArray(e)&&e.forEach((function(e,n){v(e,t[n])}))},E=function(e){return a.Z.isPoint(e)?1:Array.isArray(e)?e.reduce(((e,t)=>e+E(t)),0):0};return f.forEach((function(e,t){const r=n[t];if(r){o.Z.isDebug&&console.log("Estableciendo elevaciones a entidad:",r);const t=r.getCoords();E(t)===E(e)?(v(e,t),r.setCoordinates(t)):e&&r.setCoordinates(e)}})),n}return[]},e._updatePartialResult=function(e,t){let n=!1,o=!1;for(var r=0,i=e.length;r<i;r++){const n=e[r];let i=null,s=null;const c=t.filter((e=>null!==e));for(var a=0,l=c.length;a<l;a++){const e=c[a];if(!1===e&&(o=!0),Array.isArray(e)){const t=e[r];null===i&&t&&(i=t[2],t.length>3&&null===s&&(s=t[3]))}if(null!==i){n[2]=i,null!==s&&(n[3]=s);break}}}return n=!o&&e.every((e=>null!==e[2]))||t.every((e=>!1!==e)),n}}(),l.errors={MAX_COORD_QUANTITY_EXCEEDED:"max_coord_quantity_exceeded",UNDEFINED:"undefined"},l.getElevationGain=function(e){return i.Z.getElevationGain(e)},o.Z.tool.Elevation=l;const s=l}}]);
//# sourceMappingURL=../maps/chunks/4759.sitna.js.map