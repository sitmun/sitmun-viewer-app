"use strict";(self.webpackChunkSITNA=self.webpackChunkSITNA||[]).push([[4736,2026],{2026:(e,t,o)=>{o.r(t),o.d(t,{default:()=>r});var n=o(688),s=o(268);const r=class{constructor(e){const t=this;t.options=e||{},t.url=t.options.url,t.process=t.options.process,t.minimumElevation=t.options.minimumElevation,s.Z.isFunction(t.options.request)&&(t.request=t.options.request),s.Z.isFunction(t.options.parseResponse)&&(t.parseResponse=t.options.parseResponse)}async getElevation(e){const t=this;void 0===(e=e||{}).resolution&&(e.resolution=t.options.resolution),void 0===e.sampleNumber&&(e.sampleNumber=t.options.sampleNumber);const o=await t.request(e);return(e.responseCallback||t.parseResponse).call(t,o,e)}async request(e){const t=this;if((e=e||{}).dataInputs||e.body){const s=await o.e(2688).then(o.t.bind(o,2688,23)),r={process:e.process||t.process,dataInputs:e.dataInputs,responseType:SITNA.Consts.mimeType.JSON,version:e.serviceVersion||t.serviceVersion||"1.0.0",output:e.output},i="boolean"==typeof e.contentType?e.contentType:e.contentType||SITNA.Consts.mimeType.XML;return(await n.Z.ajax({url:t.url,method:"POST",contentType:i,responseType:SITNA.Consts.mimeType.JSON,data:e.body||s.buildExecuteQuery(r)})).data}throw Error("Request is not valid for elevation service")}parseResponse(e,t){var o=this;if(e.coordinates){e.coordinates.forEach((function(e){e[2]<o.minimumElevation&&(e[2]=null)}))}return e.coordinates||[]}cancelRequest(e){}}},4736:(e,t,o)=>{o.r(t),o.d(t,{default:()=>p});var n=o(688),s=o(2026),r=o(268),i=o(330);let a;const c=new Map,l=function(e){let t=c.get(e);return!!t&&(t-=1,t<=0&&c.delete(e),!0)};class u extends s.default{constructor(){super(...arguments);const e=this;e.url=e.options.url||"//maps.googleapis.com/maps/api/js?v=3";const t=e.url.lastIndexOf("?");t<0?e.url+="?":t<e.url.length-1&&(e.url+="&");let o="SV_"+(Math.random()+1).toString(36).substring(7);window[o]=function(){delete window[o]},e.url+="key="+e.options.googleMapsKey+"&callback="+o,e.minimumElevation=e.options.minimumElevation||-9998,e.nativeCRS="EPSG:4326",e.maxCoordinateCountPerRequest=512,e.minRetryInterval=5100,e.maxRetries=Number.isInteger(e.options.maxRetries)?e.options.maxRetries:0}request(e){const t=this;if(e=e||{},!t.options.googleMapsKey)return Promise.reject(Error("Missing Google Maps key"));const o=e.id,s={status:"CANCELLED"};let u,p=e.coordinates;return u=1===p.length?i.Z.geom.POINT:i.Z.geom.POLYLINE,t.options.allowedGeometryTypes&&!t.options.allowedGeometryTypes.includes(u)?Promise.reject(Error(u+" geometry type not allowed by configuration")):p.length>t.maxCoordinateCountPerRequest?new Promise((function(n,i){const a=[];for(var u=0,m=p.length;u<m;u+=t.maxCoordinateCountPerRequest)a.push(p.slice(u,u+t.maxCoordinateCountPerRequest));!function(e,t){let o=c.get(e)||0;o+=t,c.set(e,o)}(o,a.length);let d=0;const g=a.map((function n(i){const a=r.Z.extend({},e,{coordinates:i,id:o});return new Promise((function(e,r){c.has(o)?t.request(a).then((function(a){"OVER_QUERY_LIMIT"===a.status?(console.log("OVER_QUERY_LIMIT status reached for request "+o),c.has(o)?!t.maxRetries||d<t.maxRetries?(d+=1,setTimeout((function(){n(i).then((t=>e(t))).catch((e=>r(e)))}),t.minRetryInterval)):e(a):e(s)):e(a)})).catch((e=>r(e))):e(s)}))}));Promise.all(g).then((function(e){const t=Array.prototype.concat.apply([],e.filter((e=>"OK"===e.status)).map((e=>e.elevations)));l(o),n({status:"OK",elevations:t})}))})):(e.crs&&e.crs!==t.nativeCRS&&(p=r.Z.reproject(p,e.crs,t.nativeCRS)),new Promise((function(e,s){const r=window.google&&window.google.maps;r||(n.Z.Cfg.proxyExceptions=n.Z.Cfg.proxyExceptions||[],n.Z.Cfg.proxyExceptions.push(t.url)),n.Z.loadJS(!r,t.url,(function(){a=a||new google.maps.ElevationService;const t=p.map((e=>({lat:e[1],lng:e[0]})));a.getElevationForLocations({locations:t},(function(t,n){l(o),e({elevations:t,status:n})}))}),!1,!0)})))}parseResponse(e,t){const o=this;return"OK"===e.status?e.elevations.map((function(e){return t.crs&&t.crs!==o.nativeCRS?r.Z.reproject([e.location.lng(),e.location.lat()],o.nativeCRS,t.crs).concat(e.elevation):[e.location.lng(),e.location.lat(),e.elevation]})):[]}cancelRequest(e){c.delete(e)}}const p=u}}]);
//# sourceMappingURL=../maps/chunks/4736.sitna.js.map