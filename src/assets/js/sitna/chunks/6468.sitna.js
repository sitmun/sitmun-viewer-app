"use strict";(self.webpackChunkSITNA=self.webpackChunkSITNA||[]).push([[6468,2026],{2026:(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var o=t(688),n=t(268);const r=class{constructor(e){const s=this;s.options=e||{},s.url=s.options.url,s.process=s.options.process,s.minimumElevation=s.options.minimumElevation,n.Z.isFunction(s.options.request)&&(s.request=s.options.request),n.Z.isFunction(s.options.parseResponse)&&(s.parseResponse=s.options.parseResponse)}async getElevation(e){const s=this;void 0===(e=e||{}).resolution&&(e.resolution=s.options.resolution),void 0===e.sampleNumber&&(e.sampleNumber=s.options.sampleNumber);const t=await s.request(e);return(e.responseCallback||s.parseResponse).call(s,t,e)}async request(e){const s=this;if((e=e||{}).dataInputs||e.body){const n=await t.e(2688).then(t.t.bind(t,2688,23)),r={process:e.process||s.process,dataInputs:e.dataInputs,responseType:SITNA.Consts.mimeType.JSON,version:e.serviceVersion||s.serviceVersion||"1.0.0",output:e.output},i="boolean"==typeof e.contentType?e.contentType:e.contentType||SITNA.Consts.mimeType.XML;return(await o.Z.ajax({url:s.url,method:"POST",contentType:i,responseType:SITNA.Consts.mimeType.JSON,data:e.body||n.buildExecuteQuery(r)})).data}throw Error("Request is not valid for elevation service")}parseResponse(e,s){var t=this;if(e.coordinates){e.coordinates.forEach((function(e){e[2]<t.minimumElevation&&(e[2]=null)}))}return e.coordinates||[]}cancelRequest(e){}}},6468:(e,s,t)=>{t.r(s),t.d(s,{default:()=>i});var o=t(2026),n=t(268);class r extends o.default{constructor(){super(...arguments);const e=this;e.url=e.options.url||"//wxs.ign.fr/essentiels/alti/wps",e.process=e.options.process||"gs:WPSElevation",e.profileProcess=e.options.profileProcess||"gs:WPSLineElevation",e.minimumElevation=e.options.minimumElevation||-99998,e.nativeCRS="EPSG:4326"}request(e){const s=this;let t=(e=e||{}).coordinates;e.crs&&e.crs!==s.nativeCRS&&(t=n.Z.reproject(t,e.crs,s.nativeCRS));const o={lon:t.map((function(e){return e[0]})).join("|"),lat:t.map((function(e){return e[1]})).join("|"),crs:"crs:84",format:"json"};return super.request.call(s,{dataInputs:o,process:s.process})}parseResponse(e,s){const t=this;if(e.elevations){var o=e.elevations.map((function(e){return[e.lon,e.lat,e.z]}));return s.crs&&s.crs!==t.nativeCRS&&(o=n.Z.reproject(o,t.nativeCRS,s.crs)),super.parseResponse.call(t,{coordinates:o},s)}return[]}}const i=r}}]);
//# sourceMappingURL=../maps/chunks/6468.sitna.js.map