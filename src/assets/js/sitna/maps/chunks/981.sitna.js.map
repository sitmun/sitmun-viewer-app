{"version":3,"file":"chunks/981.sitna.js","mappings":"iGAEA,SAASA,EAAaC,EAAQC,GAC1BC,KAAKF,OAASA,EACdE,KAAKC,SAAW,EAChBD,KAAKD,YAAcA,IAAe,EAGtC,SAASG,EAAMC,EAAQC,EAAQC,GAC3B,OAAO,WACH,IAAIC,EASJ,OANIA,EADAN,KAAKD,YACGK,EAAOG,KAAKP,KAAKF,OAAQE,KAAKC,UAE9BE,EAAOI,KAAKP,KAAKF,OAAQE,KAAKC,UAE1CD,KAAKC,UAAYI,EAEVC,GAnBfE,EAAOC,QAAUZ,EAuBjBA,EAAaa,UAAUC,UAAYT,EAAMU,EAAOF,UAAUC,UAAWC,EAAOF,UAAUC,UAAW,GACjGd,EAAaa,UAAUG,WAAaX,EAAMU,EAAOF,UAAUI,aAAcF,EAAOF,UAAUK,aAAc,GACxGlB,EAAaa,UAAUM,WAAad,EAAMU,EAAOF,UAAUO,aAAcL,EAAOF,UAAUQ,aAAc,GACxGrB,EAAaa,UAAUS,SAAWjB,EAAMU,EAAOF,UAAUS,SAAUP,EAAOF,UAAUS,SAAU,GAC9FtB,EAAaa,UAAUU,UAAYlB,EAAMU,EAAOF,UAAUW,YAAaT,EAAOF,UAAUY,YAAa,GACrGzB,EAAaa,UAAUa,UAAYrB,EAAMU,EAAOF,UAAUc,YAAaZ,EAAOF,UAAUe,YAAa,GACrG5B,EAAaa,UAAUgB,UAAYxB,EAAMU,EAAOF,UAAUiB,YAAaf,EAAOF,UAAUkB,YAAa,GACrG/B,EAAaa,UAAUmB,WAAa3B,EAAMU,EAAOF,UAAUoB,aAAclB,EAAOF,UAAUqB,aAAc,GAExGlC,EAAaa,UAAUsB,WAAa,WAChC,IAAIC,EACAC,EAAS,EACTC,EAAY,EAEhB,GAEID,IAAsB,KADtBD,EAAWjC,KAAKF,OAAOE,KAAKC,SAAWkC,MACP,EAAIA,EACpCA,UACKF,GAAY,KAIrB,OAFAjC,KAAKC,UAAYkC,EAEVD,I,gCC3CX,SAASE,EAAa/B,EAAMgC,GACxBrC,KAAKF,OAAS,IAAIc,EAAOP,GACzBL,KAAKC,SAAW,EAChBD,KAAKqC,YAAcA,EAGvB,SAASC,EAAOC,EAAOlC,GACnB,OAAO,SAAUC,EAAOkC,GACpBxC,KAAKyC,WAAWpC,GAEhBkC,EAAMhC,KAAKP,KAAKF,OAAQQ,EAAON,KAAKC,SAAUuC,GAC9CxC,KAAKC,UAAYI,GAbzBG,EAAOC,QAAU2B,EAiBjBA,EAAa1B,UAAUgC,WAAaJ,EAAO1B,EAAOF,UAAUgC,WAAY,GACxEN,EAAa1B,UAAUiC,cAAgBL,EAAO1B,EAAOF,UAAUiC,cAAe,GAC9EP,EAAa1B,UAAUkC,cAAgBN,EAAO1B,EAAOF,UAAUkC,cAAe,GAC9ER,EAAa1B,UAAUmC,cAAgBP,EAAO1B,EAAOF,UAAUmC,cAAe,GAC9ET,EAAa1B,UAAUoC,cAAgBR,EAAO1B,EAAOF,UAAUoC,cAAe,GAC9EV,EAAa1B,UAAUqC,UAAYT,EAAO1B,EAAOF,UAAUqC,UAAW,GACtEX,EAAa1B,UAAUsC,aAAeV,EAAO1B,EAAOF,UAAUsC,aAAc,GAC5EZ,EAAa1B,UAAUuC,aAAeX,EAAO1B,EAAOF,UAAUuC,aAAc,GAC5Eb,EAAa1B,UAAUwC,aAAeZ,EAAO1B,EAAOF,UAAUwC,aAAc,GAC5Ed,EAAa1B,UAAUyC,aAAeb,EAAO1B,EAAOF,UAAUyC,aAAc,GAC5Ef,EAAa1B,UAAU0C,aAAed,EAAO1B,EAAOF,UAAU0C,aAAc,GAC5EhB,EAAa1B,UAAU2C,aAAef,EAAO1B,EAAOF,UAAU2C,aAAc,GAC5EjB,EAAa1B,UAAU4C,cAAgBhB,EAAO1B,EAAOF,UAAU4C,cAAe,GAC9ElB,EAAa1B,UAAU6C,cAAgBjB,EAAO1B,EAAOF,UAAU6C,cAAe,GAE9EnB,EAAa1B,UAAU8C,YAAc,SAAU1D,GAC3CE,KAAKyC,WAAW3C,EAAO2D,QAEvB3D,EAAO4D,KAAK1D,KAAKF,OAAQE,KAAKC,SAAU,EAAGH,EAAO2D,QAClDzD,KAAKC,UAAYH,EAAO2D,QAG5BrB,EAAa1B,UAAUiD,YAAc,SAAUrD,GAG3C,IAFA,IAAImD,EAAS,EAEmB,IAAhB,WAARnD,IACJN,KAAK0C,WAAoB,IAARpC,EAAgB,KACjCA,KAAW,EACXmD,IAKJ,OAFAzD,KAAK0C,WAAmB,IAARpC,GAETmD,GAGXrB,EAAa1B,UAAU+B,WAAa,SAAUpC,GAC1C,GAAIL,KAAKF,OAAO2D,OAASzD,KAAKC,SAAWI,EAAM,CAC3C,IAAIL,KAAKqC,YAML,MAAM,IAAIuB,WAAW,sBALrB,IAAIC,EAAa,IAAIjD,EAAOZ,KAAKC,SAAWI,GAC5CL,KAAKF,OAAO4D,KAAKG,EAAY,EAAG,EAAG7D,KAAKF,OAAO2D,QAC/CzD,KAAKF,OAAS+D,K,8BC1D1BrD,EAAOC,QAAUqD,EAEjB,IAAIC,EAAQ,EAAQ,MAChBC,EAAQ,EAAQ,IAChBC,EAAa,EAAQ,MACrBC,EAAU,EAAQ,MAClBC,EAAa,EAAQ,MACrBC,EAAkB,EAAQ,MAC1BC,EAAe,EAAQ,MACvBC,EAAqB,EAAQ,MAC7BzE,EAAe,EAAQ,MACvBuC,EAAe,EAAQ,MACvBmC,EAAY,EAAQ,MACpBC,EAAS,EAAQ,MAErB,SAASV,IACL9D,KAAKyE,UAAOC,EACZ1E,KAAK2E,MAAO,EACZ3E,KAAK4E,MAAO,EAGhBd,EAASe,MAAQ,SAAUvE,EAAOwE,GAG9B,GAAkB,kBAFKxE,GAEOA,aAAiBiE,EAC3C,OAAOT,EAASiB,UAAUzE,GACzB,GAAIM,EAAOoE,SAAS1E,IAAUA,aAAiBT,EAChD,OAAOiE,EAASmB,UAAU3E,EAAOwE,GAEjC,MAAM,IAAII,MAAM,8CAGxBpB,EAASiB,UAAY,SAAUzE,GAC3B,IAAI6E,EACAV,EAOAW,GAJAD,EADA7E,aAAiBiE,EACLjE,EAEA,IAAIiE,EAAUjE,IAER+E,WAAW,CAAC,iBAC9BD,IACAX,EAAOa,SAASF,EAAM,GAAI,KAE9B,IAAIG,EAAeJ,EAAUK,YACzBC,EAAYN,EAAUO,iBAEtBZ,EAAU,CACVL,KAAMA,EACNE,KAAMc,EAAUd,KAChBC,KAAMa,EAAUb,MAGpB,OAAQW,GACJ,KAAKxB,EAAM4B,IAAI3B,MACX,OAAOA,EAAMe,UAAUI,EAAWL,GACtC,KAAKf,EAAM4B,IAAI1B,WACX,OAAOA,EAAWc,UAAUI,EAAWL,GAC3C,KAAKf,EAAM4B,IAAIzB,QACX,OAAOA,EAAQa,UAAUI,EAAWL,GACxC,KAAKf,EAAM4B,IAAIxB,WACX,OAAOA,EAAWY,UAAUI,EAAWL,GAC3C,KAAKf,EAAM4B,IAAIvB,gBACX,OAAOA,EAAgBW,UAAUI,EAAWL,GAChD,KAAKf,EAAM4B,IAAItB,aACX,OAAOA,EAAaU,UAAUI,EAAWL,GAC7C,KAAKf,EAAM4B,IAAIrB,mBACX,OAAOA,EAAmBS,UAAUI,EAAWL,KAI3DhB,EAASmB,UAAY,SAAU3E,EAAOsF,GAClC,IAAIC,EACAC,EACAP,EACAT,EAAU,GA+Cd,QA5CIe,EADAvF,aAAiBT,EACFS,EAEA,IAAIT,EAAaS,IAEvBP,aAAe8F,EAAa1E,WAEzC2E,EAAUD,EAAa7E,aAEvB8D,EAAQiB,QAAqC,YAAhB,UAAVD,GACnBhB,EAAQkB,OAAoB,UAAVF,GAAoC,WAAVA,GAAoC,WAAVA,EAElEhB,EAAQiB,UACRjB,EAAQL,KAAOoB,EAAa7E,cAEhC8D,EAAQH,MAAO,EACfG,EAAQF,MAAO,EAEVE,EAAQkB,QAAYJ,GAAkBA,EAAcI,QAmBvC,WAAVF,IACAhB,EAAQH,MAAO,GACL,WAAVmB,IACAhB,EAAQF,MAAO,GAEnBW,EAAyB,GAAVO,GAvBXA,GAAW,KAAQA,EAAU,KAC7BhB,EAAQH,MAAO,EACfY,EAAeO,EAAU,KAEpBA,GAAW,KAAQA,EAAU,KAClChB,EAAQF,MAAO,EACfW,EAAeO,EAAU,KAEpBA,GAAW,KAAQA,EAAU,KAClChB,EAAQH,MAAO,EACfG,EAAQF,MAAO,EACfW,EAAeO,EAAU,KAGzBP,EAAeO,EAYfP,GACJ,KAAKxB,EAAMkC,IAAIjC,MACX,OAAOA,EAAMiB,UAAUY,EAAcf,GACzC,KAAKf,EAAMkC,IAAIhC,WACX,OAAOA,EAAWgB,UAAUY,EAAcf,GAC9C,KAAKf,EAAMkC,IAAI/B,QACX,OAAOA,EAAQe,UAAUY,EAAcf,GAC3C,KAAKf,EAAMkC,IAAI9B,WACX,OAAOA,EAAWc,UAAUY,EAAcf,GAC9C,KAAKf,EAAMkC,IAAI7B,gBACX,OAAOA,EAAgBa,UAAUY,EAAcf,GACnD,KAAKf,EAAMkC,IAAI5B,aACX,OAAOA,EAAaY,UAAUY,EAAcf,GAChD,KAAKf,EAAMkC,IAAI3B,mBACX,OAAOA,EAAmBW,UAAUY,EAAcf,GACtD,QACI,MAAM,IAAII,MAAM,gBAAkBK,EAAe,oBAI7DzB,EAASoC,UAAY,SAAU5F,GAC3B,IAAIuF,EACAf,EAAU,GAOVqB,GAJAN,EADAvF,aAAiBT,EACFS,EAEA,IAAIT,EAAaS,IAEZK,YACpByF,EAAiBP,EAAalF,YAE9B4E,EAAsB,GAAPY,EAUnB,GATArB,EAAQuB,UAAY7B,EAAO8B,OAAOH,GAAQ,GAC1CrB,EAAQyB,gBAAkBC,KAAKC,IAAI,GAAI3B,EAAQuB,WAE/CvB,EAAQ4B,eAAiBN,GAAkB,EAAI,EAC/CtB,EAAQ6B,iBAAmBP,GAAkB,EAAI,EACjDtB,EAAQ8B,UAAYR,GAAkB,EAAI,EAC1CtB,EAAQ+B,qBAAuBT,GAAkB,EAAI,EACrDtB,EAAQgC,QAAUV,GAAkB,EAAI,EAEpCtB,EAAQ+B,qBAAsB,CAC9B,IAAIE,EAAoBlB,EAAalF,YACrCmE,EAAQH,KAAsC,IAAV,EAApBoC,GAChBjC,EAAQF,KAAsC,IAAV,EAApBmC,GAEhBjC,EAAQkC,WAAaxC,EAAO8B,QAA4B,GAApBS,IAA6B,GACjEjC,EAAQmC,iBAAmBT,KAAKC,IAAI,GAAI3B,EAAQkC,YAEhDlC,EAAQoC,WAAa1C,EAAO8B,QAA4B,IAApBS,IAA6B,GACjEjC,EAAQqC,iBAAmBX,KAAKC,IAAI,GAAI3B,EAAQoC,iBAGhDpC,EAAQH,MAAO,EACfG,EAAQF,MAAO,EAKnB,GAFIE,EAAQ6B,kBACRd,EAAa7D,aACb8C,EAAQ4B,eAAgB,CACxB,IAAIU,EAAa,EAEbtC,EAAQH,MACRyC,IACAtC,EAAQF,MACRwC,IAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAYC,IAC5BxB,EAAa7D,aACb6D,EAAa7D,aAIrB,OAAQuD,GACJ,KAAKxB,EAAMkC,IAAIjC,MACX,OAAOA,EAAMsD,WAAWzB,EAAcf,GAC1C,KAAKf,EAAMkC,IAAIhC,WACX,OAAOA,EAAWqD,WAAWzB,EAAcf,GAC/C,KAAKf,EAAMkC,IAAI/B,QACX,OAAOA,EAAQoD,WAAWzB,EAAcf,GAC5C,KAAKf,EAAMkC,IAAI9B,WACX,OAAOA,EAAWmD,WAAWzB,EAAcf,GAC/C,KAAKf,EAAMkC,IAAI7B,gBACX,OAAOA,EAAgBkD,WAAWzB,EAAcf,GACpD,KAAKf,EAAMkC,IAAI5B,aACX,OAAOA,EAAaiD,WAAWzB,EAAcf,GACjD,KAAKf,EAAMkC,IAAI3B,mBACX,OAAOA,EAAmBgD,WAAWzB,EAAcf,GACvD,QACI,MAAM,IAAII,MAAM,gBAAkBK,EAAe,oBAI7DzB,EAASyD,aAAe,SAAUjH,GAC9B,OAAOwD,EAAS0D,cAAclH,IAGlCwD,EAAS0D,cAAgB,SAAUlH,EAAOmH,GACtC,IAAIC,EAEJ,OAAQpH,EAAM6F,MACV,KAAKpC,EAAM4D,QAAQ3D,MACf0D,EAAW1D,EAAMwD,cAAclH,GAAQ,MAC3C,KAAKyD,EAAM4D,QAAQ1D,WACfyD,EAAWzD,EAAWuD,cAAclH,GAAQ,MAChD,KAAKyD,EAAM4D,QAAQzD,QACfwD,EAAWxD,EAAQsD,cAAclH,GAAQ,MAC7C,KAAKyD,EAAM4D,QAAQxD,WACfuD,EAAWvD,EAAWqD,cAAclH,GAAQ,MAChD,KAAKyD,EAAM4D,QAAQvD,gBACfsD,EAAWtD,EAAgBoD,cAAclH,GAAQ,MACrD,KAAKyD,EAAM4D,QAAQtD,aACfqD,EAAWrD,EAAamD,cAAclH,GAAQ,MAClD,KAAKyD,EAAM4D,QAAQrD,mBACfoD,EAAWpD,EAAmBkD,cAAclH,GAAQ,MACxD,QACI,MAAM,IAAI4E,MAAM,gBAAkB5E,EAAM6F,KAAO,kBAGvD,GAAI7F,EAAMsH,KAAOtH,EAAMsH,IAAIzB,MAA2B,SAAnB7F,EAAMsH,IAAIzB,MAAmB7F,EAAMsH,IAAIC,YAAcvH,EAAMsH,IAAIC,WAAWC,KAAM,CAC/G,IAAIF,EAAMtH,EAAMsH,IAAIC,WAAWC,KAE/B,GAA6B,IAAzBF,EAAIG,QAAQ,SACZL,EAASjD,KAAOa,SAASsC,EAAII,UAAU,QACtC,IAA8C,IAA1CJ,EAAIG,QAAQ,0BAGjB,MAAM,IAAI7C,MAAM,oBAAsB0C,GAFtCF,EAASjD,KAAOa,SAASsC,EAAII,UAAU,WAIrCP,IACNC,EAASjD,KAAO,MAGpB,OAAOiD,GAGX5D,EAASpD,UAAUuH,OAAS,WACxB,MAAO,QAAUjI,KAAKyE,KAAO,IAAMzE,KAAKkI,SAG5CpE,EAASpD,UAAUyH,OAAS,WACxB,IAAIC,EAAO,IAAIhG,EAAapC,KAAKqI,cAAgB,GAC7CpC,EAAMjG,KAAKsI,QAQf,OANAF,EAAKrF,UAAU,GACfqF,EAAKvF,eAAiD,UAAlCoD,EAAIsC,MAAM,EAAG,GAAGtH,aAAa,MAAqB,GAAG,GACzEmH,EAAKvF,cAAc7C,KAAKyE,MAExB2D,EAAK5E,YAAYyC,EAAIsC,MAAM,IAEpBH,EAAKtI,QAGhBgE,EAASpD,UAAU8H,YAAc,SAAUC,EAAS3B,GAChD,IAAInB,EAAM8C,EAeV,OAbIzI,KAAK2E,MAAQ3E,KAAK4E,KAClBe,GAAO,OACF3F,KAAK2E,KACVgB,GAAO,MACF3F,KAAK4E,OACVe,GAAO,QAEPmB,GAAY9G,KAAK2E,MAAS3E,KAAK4E,OAC/Be,GAAO,KAEPmB,IACAnB,GAAO,SAEJA,GAGX7B,EAASpD,UAAUgI,kBAAoB,SAAUC,GAC7C,IAAIC,EAAcD,EAAME,EAAI,IAAMF,EAAMG,EAOxC,OALI9I,KAAK2E,OACLiE,GAAe,IAAMD,EAAMI,GAC3B/I,KAAK4E,OACLgE,GAAe,IAAMD,EAAMK,GAExBJ,GAGX9E,EAASpD,UAAUuI,cAAgB,SAAUhD,EAAKV,EAAcK,GAC5D,IAAIsD,EAAgB,OAEK,IAAdlJ,KAAKyE,MAA0BmB,QAA+C,IAAvBA,EAAcnB,MASxEzE,KAAK2E,OACLuE,GAAiB,YACjBlJ,KAAK4E,OACLsE,GAAiB,aAXjBlJ,KAAK2E,MAAQ3E,KAAK4E,KAClBsE,GAAiB,IACZlJ,KAAK2E,KACVuE,GAAiB,IACZlJ,KAAK4E,OACVsE,GAAiB,KASzBjD,EAAIpD,cAAeqG,EAAgB3D,IAAkB,GAAG,IAG5DzB,EAASqF,iBAAmB,SAAUC,EAAapC,EAAYE,GAC3D,MAAO,CACHmC,GAAID,EACJL,EAAG/B,EACHgC,EAAG9B,EACHoC,SAAU9C,KAAKC,IAAI,GAAI2C,GACvBG,QAAS/C,KAAKC,IAAI,GAAIO,GACtBwC,QAAShD,KAAKC,IAAI,GAAIS,KAI9BpD,EAASpD,UAAU+I,iBAAmB,SAAUC,EAAMnE,EAAcc,EAAWS,GAC3E,IAAIX,GAAQ3B,EAAOmF,OAAOtD,EAAUgD,KAAO,GAAK9D,EAC5Ca,GAAkBpG,KAAK2E,MAAQ3E,KAAK4E,OAAS,EAMjD,GALAwB,GAAkBU,GAAW,EAE7B4C,EAAKhH,WAAWyD,GAChBuD,EAAKhH,WAAW0D,GAEZpG,KAAK2E,MAAQ3E,KAAK4E,KAAM,CACxB,IAAImC,EAAoB,EACpB/G,KAAK2E,OACLoC,GAAqB,GACrB/G,KAAK4E,OACLmC,GAAqB,GAEzB2C,EAAKhH,WAAWqE,KAIxBjD,EAASpD,UAAUkJ,UAAY,SAAU9E,GACrC,IAAI6C,EAAU,GAuBd,OArBI3H,KAAKyE,MACDK,IACIA,EAAQ+E,SACRlC,EAAQC,IAAM,CACVzB,KAAM,OACN0B,WAAY,CACRC,KAAM,QAAU9H,KAAKyE,OAIxBK,EAAQgF,UACbnC,EAAQC,IAAM,CACVzB,KAAM,OACN0B,WAAY,CACRC,KAAM,yBAA2B9H,KAAKyE,SAOnDkD,I,eC9XXnH,EAAOC,QAAU6D,EAEjB,IAAIyF,EAAO,EAAQ,MAEfhG,EAAQ,EAAQ,MAChBD,EAAW,EAAQ,IACnB1B,EAAe,EAAQ,MAE3B,SAASkC,EAAmB0F,EAAYvF,GACpCX,EAASvD,KAAKP,MAEdA,KAAKgK,WAAaA,GAAc,GACnChK,KAAKyE,KAAOA,EAELzE,KAAKgK,WAAWvG,OAAS,IACzBzD,KAAK2E,KAAO3E,KAAKgK,WAAW,GAAGrF,KAC/B3E,KAAK4E,KAAO5E,KAAKgK,WAAW,GAAGpF,MAIvCmF,EAAKE,SAAS3F,EAAoBR,GAElCQ,EAAmB4F,EAAI,SAAUF,EAAYvF,GACzC,IAAI0F,EAAqB,IAAI7F,EAAmB0F,EAAYvF,GAE5D,OADA0F,EAAmBxF,MAAO,EACnBwF,GAGX7F,EAAmB8F,EAAI,SAAUJ,EAAYvF,GACzC,IAAI0F,EAAqB,IAAI7F,EAAmB0F,EAAYvF,GAE5D,OADA0F,EAAmBvF,MAAO,EACnBuF,GAGX7F,EAAmB+F,GAAK,SAAUL,EAAYvF,GAC1C,IAAI0F,EAAqB,IAAI7F,EAAmB0F,EAAYvF,GAG5D,OAFA0F,EAAmBxF,MAAO,EAC1BwF,EAAmBvF,MAAO,EACnBuF,GAGX7F,EAAmBS,UAAY,SAAUzE,EAAOwE,GAC5C,IAAIqF,EAAqB,IAAI7F,EAK7B,GAJA6F,EAAmB1F,KAAOK,EAAQL,KAClC0F,EAAmBxF,KAAOG,EAAQH,KAClCwF,EAAmBvF,KAAOE,EAAQF,KAE9BtE,EAAMgK,QAAQ,CAAC,UACf,OAAOH,EAEX7J,EAAMiK,mBAEN,GACIJ,EAAmBH,WAAWQ,KAAK1G,EAASe,MAAMvE,UAC7CA,EAAMgK,QAAQ,CAAC,OAIxB,OAFAhK,EAAMmK,iBAECN,GAGX7F,EAAmBW,UAAY,SAAU3E,EAAOwE,GAC5C,IAAIqF,EAAqB,IAAI7F,EAC7B6F,EAAmB1F,KAAOK,EAAQL,KAClC0F,EAAmBxF,KAAOG,EAAQH,KAClCwF,EAAmBvF,KAAOE,EAAQF,KAIlC,IAFA,IAAI8F,EAAgBpK,EAAMU,aAEjBqG,EAAI,EAAGA,EAAIqD,EAAerD,IAC/B8C,EAAmBH,WAAWQ,KAAK1G,EAASe,MAAMvE,EAAOwE,IAE7D,OAAOqF,GAGX7F,EAAmBgD,WAAa,SAAUhH,EAAOwE,GAC7C,IAAIqF,EAAqB,IAAI7F,EAI7B,GAHA6F,EAAmBxF,KAAOG,EAAQH,KAClCwF,EAAmBvF,KAAOE,EAAQF,KAE9BE,EAAQgC,QACR,OAAOqD,EAIX,IAFA,IAAIO,EAAgBpK,EAAM0B,aAEjBqF,EAAI,EAAGA,EAAIqD,EAAerD,IAC/B8C,EAAmBH,WAAWQ,KAAK1G,EAASoC,UAAU5F,IAE1D,OAAO6J,GAGX7F,EAAmBkD,cAAgB,SAAUlH,GAGzC,IAFA,IAAI6J,EAAqB,IAAI7F,EAEpB+C,EAAI,EAAGA,EAAI/G,EAAM0J,WAAWvG,OAAQ4D,IACzC8C,EAAmBH,WAAWQ,KAAK1G,EAAS0D,cAAclH,EAAM0J,WAAW3C,IAAI,IAKnF,OAHI8C,EAAmBH,WAAWvG,OAAS,IACvC0G,EAAmBxF,KAAOwF,EAAmBH,WAAW,GAAGrF,MAExDwF,GAGX7F,EAAmB5D,UAAUwH,MAAQ,WACjC,GAA+B,IAA3BlI,KAAKgK,WAAWvG,OAChB,OAAOzD,KAAKwI,YAAYzE,EAAM4B,IAAIrB,oBAAoB,GAI1D,IAFA,IAAIqB,EAAM3F,KAAKwI,YAAYzE,EAAM4B,IAAIrB,oBAAoB,GAAS,IAEzD+C,EAAI,EAAGA,EAAIrH,KAAKgK,WAAWvG,OAAQ4D,IACxC1B,GAAO3F,KAAKgK,WAAW3C,GAAGa,QAAU,IAKxC,OAHAvC,EAAMA,EAAI4C,MAAM,GAAI,GACpB5C,GAAO,KAKXrB,EAAmB5D,UAAU4H,MAAQ,WACjC,IAAIrC,EAAM,IAAI7D,EAAapC,KAAKqI,eAEhCpC,EAAIlD,UAAU,GAEd/C,KAAKiJ,cAAchD,EAAKlC,EAAMkC,IAAI3B,oBAClC2B,EAAIpD,cAAc7C,KAAKgK,WAAWvG,QAElC,IAAK,IAAI4D,EAAI,EAAGA,EAAIrH,KAAKgK,WAAWvG,OAAQ4D,IACxCpB,EAAIzC,YAAYxD,KAAKgK,WAAW3C,GAAGiB,MAAM,CAAE7D,KAAMzE,KAAKyE,QAE1D,OAAOwB,EAAInG,QAGfwE,EAAmB5D,UAAUiK,OAAS,WAClC,IAAIjB,EAAO,IAAItH,EAAa,GAAG,GAE3BiE,EAAYvC,EAASqF,iBAAiB,EAAG,EAAG,GAC5CrC,EAAqC,IAA3B9G,KAAKgK,WAAWvG,OAI9B,GAFAzD,KAAKyJ,iBAAiBC,EAAM3F,EAAMkC,IAAI3B,mBAAoB+B,EAAWS,GAEjE9G,KAAKgK,WAAWvG,OAAS,EAAG,CAC5BiG,EAAK/F,YAAY3D,KAAKgK,WAAWvG,QAEjC,IAAK,IAAI4D,EAAI,EAAGA,EAAIrH,KAAKgK,WAAWvG,OAAQ4D,IACxCqC,EAAKlG,YAAYxD,KAAKgK,WAAW3C,GAAGsD,UAG5C,OAAOjB,EAAK5J,QAGhBwE,EAAmB5D,UAAU2H,YAAc,WAGvC,IAFA,IAAIhI,EAAO,EAEFgH,EAAI,EAAGA,EAAIrH,KAAKgK,WAAWvG,OAAQ4D,IACxChH,GAAQL,KAAKgK,WAAW3C,GAAGgB,cAE/B,OAAOhI,GAGXiE,EAAmB5D,UAAUkJ,UAAY,SAAU9E,GAC/C,IAAI6C,EAAU7D,EAASpD,UAAUkJ,UAAUrJ,KAAKP,KAAM8E,GACtD6C,EAAQxB,KAAOpC,EAAM4D,QAAQrD,mBAC7BqD,EAAQqC,WAAa,GAErB,IAAK,IAAI3C,EAAI,EAAGA,EAAIrH,KAAKgK,WAAWvG,OAAQ4D,IACxCM,EAAQqC,WAAWQ,KAAKxK,KAAKgK,WAAW3C,GAAGuC,aAE/C,OAAOjC,I,eCvKXnH,EAAOC,QAAUwD,EAEjB,IAAI8F,EAAO,EAAQ,MAEfjG,EAAW,EAAQ,IACnBC,EAAQ,EAAQ,MAChBC,EAAQ,EAAQ,IAChB5B,EAAe,EAAQ,MAE3B,SAAS6B,EAAW2G,EAAQnG,GACxBX,EAASvD,KAAKP,MAEdA,KAAK4K,OAASA,GAAU,GAC3B5K,KAAKyE,KAAOA,EAELzE,KAAK4K,OAAOnH,OAAS,IACrBzD,KAAK2E,KAAO3E,KAAK4K,OAAO,GAAGjG,KAC3B3E,KAAK4E,KAAO5E,KAAK4K,OAAO,GAAGhG,MAInCmF,EAAKE,SAAShG,EAAYH,GAE1BG,EAAWiG,EAAI,SAAUU,EAAQnG,GAC7B,IAAIoG,EAAa,IAAI5G,EAAW2G,EAAQnG,GAExC,OADAoG,EAAWlG,MAAO,EACXkG,GAGX5G,EAAWmG,EAAI,SAAUQ,EAAQnG,GAC7B,IAAIoG,EAAa,IAAI5G,EAAW2G,EAAQnG,GAExC,OADAoG,EAAWjG,MAAO,EACXiG,GAGX5G,EAAWoG,GAAK,SAAUO,EAAQnG,GAC9B,IAAIoG,EAAa,IAAI5G,EAAW2G,EAAQnG,GAGxC,OAFAoG,EAAWlG,MAAO,EAClBkG,EAAWjG,MAAO,EACXiG,GAGX5G,EAAWc,UAAY,SAAUzE,EAAOwE,GACpC,IAAI+F,EAAa,IAAI5G,EAKrB,OAJA4G,EAAWpG,KAAOK,EAAQL,KAC1BoG,EAAWlG,KAAOG,EAAQH,KAC1BkG,EAAWjG,KAAOE,EAAQF,KAEtBtE,EAAMgK,QAAQ,CAAC,YAGnBhK,EAAMiK,mBACNM,EAAWD,OAAOJ,KAAKM,MAAMD,EAAWD,OAAQtK,EAAMyK,iBAAiBjG,IACvExE,EAAMmK,kBAJKI,GASf5G,EAAWgB,UAAY,SAAU3E,EAAOwE,GACpC,IAAI+F,EAAa,IAAI5G,EACrB4G,EAAWpG,KAAOK,EAAQL,KAC1BoG,EAAWlG,KAAOG,EAAQH,KAC1BkG,EAAWjG,KAAOE,EAAQF,KAI1B,IAFA,IAAIoG,EAAa1K,EAAMU,aAEdqG,EAAI,EAAGA,EAAI2D,EAAY3D,IAC5BwD,EAAWD,OAAOJ,KAAKxG,EAAMiH,cAAc3K,EAAOwE,IAEtD,OAAO+F,GAGX5G,EAAWqD,WAAa,SAAUhH,EAAOwE,GACrC,IAAI+F,EAAa,IAAI5G,EAIrB,GAHA4G,EAAWlG,KAAOG,EAAQH,KAC1BkG,EAAWjG,KAAOE,EAAQF,KAEtBE,EAAQgC,QACR,OAAO+D,EAKX,IAHA,IAAIK,EAAgB,IAAIlH,EAAM,EAAG,EAAGc,EAAQH,KAAO,OAAID,EAAWI,EAAQF,KAAO,OAAIF,GACjFsG,EAAa1K,EAAM0B,aAEdqF,EAAI,EAAGA,EAAI2D,EAAY3D,IAC5BwD,EAAWD,OAAOJ,KAAKxG,EAAMmH,eAAe7K,EAAOwE,EAASoG,IAEhE,OAAOL,GAGX5G,EAAWuD,cAAgB,SAAUlH,GACjC,IAAIuK,EAAa,IAAI5G,EAEjB3D,EAAMsI,YAAYnF,OAAS,IAC3BoH,EAAWlG,KAAOrE,EAAMsI,YAAY,GAAGnF,OAAS,GAEpD,IAAK,IAAI4D,EAAI,EAAGA,EAAI/G,EAAMsI,YAAYnF,OAAQ4D,IAC1CwD,EAAWD,OAAOJ,KAAKxG,EAAMoH,kBAAkB9K,EAAMsI,YAAYvB,KAErE,OAAOwD,GAGX5G,EAAWvD,UAAUwH,MAAQ,WACzB,OAA2B,IAAvBlI,KAAK4K,OAAOnH,OACLzD,KAAKwI,YAAYzE,EAAM4B,IAAI1B,YAAY,GAE3CjE,KAAKwI,YAAYzE,EAAM4B,IAAI1B,YAAY,GAASjE,KAAKqL,eAGhEpH,EAAWvD,UAAU2K,YAAc,WAG/B,IAFA,IAAIC,EAAW,IAENjE,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IACpCiE,GAAYtL,KAAK0I,kBAAkB1I,KAAK4K,OAAOvD,IAAM,IAKzD,OAHAiE,EAAWA,EAAS/C,MAAM,GAAI,GAC9B+C,GAAY,KAKhBrH,EAAWvD,UAAU4H,MAAQ,SAAU1C,GACnC,IAAIK,EAAM,IAAI7D,EAAapC,KAAKqI,eAEhCpC,EAAIlD,UAAU,GAEd/C,KAAKiJ,cAAchD,EAAKlC,EAAMkC,IAAIhC,WAAY2B,GAC9CK,EAAIpD,cAAc7C,KAAK4K,OAAOnH,QAE9B,IAAK,IAAI4D,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IACpCrH,KAAK4K,OAAOvD,GAAGkE,eAAetF,GAElC,OAAOA,EAAInG,QAGfmE,EAAWvD,UAAUiK,OAAS,WAC1B,IAAIjB,EAAO,IAAItH,EAAa,GAAG,GAE3BiE,EAAYvC,EAASqF,iBAAiB,EAAG,EAAG,GAC5CrC,EAAiC,IAAvB9G,KAAK4K,OAAOnH,OAI1B,GAFAzD,KAAKyJ,iBAAiBC,EAAM3F,EAAMkC,IAAIhC,WAAYoC,EAAWS,GAEzD9G,KAAK4K,OAAOnH,OAAS,EAAG,CACxBiG,EAAK/F,YAAY3D,KAAK4K,OAAOnH,QAG7B,IADA,IAAIyH,EAAgB,IAAIlH,EAAM,EAAG,EAAG,EAAG,GAC9BqD,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IACpCrH,KAAK4K,OAAOvD,GAAGmE,gBAAgB9B,EAAMrD,EAAW6E,GAGxD,OAAOxB,EAAK5J,QAGhBmE,EAAWvD,UAAU2H,YAAc,WAC/B,IAAIoD,EAAiB,GAOrB,OALIzL,KAAK2E,OACL8G,GAAkB,GAClBzL,KAAK4E,OACL6G,GAAkB,GAEf,EAAazL,KAAK4K,OAAOnH,OAASgI,GAG7CxH,EAAWvD,UAAUkJ,UAAY,SAAU9E,GACvC,IAAI6C,EAAU7D,EAASpD,UAAUkJ,UAAUrJ,KAAKP,KAAM8E,GACtD6C,EAAQxB,KAAOpC,EAAM4D,QAAQ1D,WAC7B0D,EAAQiB,YAAc,GAEtB,IAAK,IAAIvB,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IAChCrH,KAAK2E,KACLgD,EAAQiB,YAAY4B,KAAK,CAACxK,KAAK4K,OAAOvD,GAAGwB,EAAG7I,KAAK4K,OAAOvD,GAAGyB,EAAG9I,KAAK4K,OAAOvD,GAAG0B,IAE7EpB,EAAQiB,YAAY4B,KAAK,CAACxK,KAAK4K,OAAOvD,GAAGwB,EAAG7I,KAAK4K,OAAOvD,GAAGyB,IAGnE,OAAOnB,I,eChLXnH,EAAOC,QAAU2D,EAEjB,IAAI2F,EAAO,EAAQ,MAEfhG,EAAQ,EAAQ,MAChBD,EAAW,EAAQ,IACnBE,EAAQ,EAAQ,IAChBC,EAAa,EAAQ,MACrB7B,EAAe,EAAQ,MAE3B,SAASgC,EAAgBsH,EAAajH,GAClCX,EAASvD,KAAKP,MAEdA,KAAK0L,YAAcA,GAAe,GACrC1L,KAAKyE,KAAOA,EAELzE,KAAK0L,YAAYjI,OAAS,IAC1BzD,KAAK2E,KAAO3E,KAAK0L,YAAY,GAAG/G,KAChC3E,KAAK4E,KAAO5E,KAAK0L,YAAY,GAAG9G,MAIxCmF,EAAKE,SAAS7F,EAAiBN,GAE/BM,EAAgB8F,EAAI,SAAUwB,EAAajH,GACvC,IAAIkH,EAAkB,IAAIvH,EAAgBsH,EAAajH,GAEvD,OADAkH,EAAgBhH,MAAO,EAChBgH,GAGXvH,EAAgBgG,EAAI,SAAUsB,EAAajH,GACvC,IAAIkH,EAAkB,IAAIvH,EAAgBsH,EAAajH,GAEvD,OADAkH,EAAgB/G,MAAO,EAChB+G,GAGXvH,EAAgBiG,GAAK,SAAUqB,EAAajH,GACxC,IAAIkH,EAAkB,IAAIvH,EAAgBsH,EAAajH,GAGvD,OAFAkH,EAAgBhH,MAAO,EACvBgH,EAAgB/G,MAAO,EAChB+G,GAGXvH,EAAgBW,UAAY,SAAUzE,EAAOwE,GACzC,IAAI6G,EAAkB,IAAIvH,EAK1B,GAJAuH,EAAgBlH,KAAOK,EAAQL,KAC/BkH,EAAgBhH,KAAOG,EAAQH,KAC/BgH,EAAgB/G,KAAOE,EAAQF,KAE3BtE,EAAMgK,QAAQ,CAAC,UACf,OAAOqB,EAEXrL,EAAMiK,mBAEN,GACIjK,EAAMiK,mBACNoB,EAAgBD,YAAYlB,KAAK,IAAIvG,EAAW3D,EAAMyK,iBAAiBjG,KACvExE,EAAMmK,uBACDnK,EAAMgK,QAAQ,CAAC,OAIxB,OAFAhK,EAAMmK,iBAECkB,GAGXvH,EAAgBa,UAAY,SAAU3E,EAAOwE,GACzC,IAAI6G,EAAkB,IAAIvH,EAC1BuH,EAAgBlH,KAAOK,EAAQL,KAC/BkH,EAAgBhH,KAAOG,EAAQH,KAC/BgH,EAAgB/G,KAAOE,EAAQF,KAI/B,IAFA,IAAIgH,EAAkBtL,EAAMU,aAEnBqG,EAAI,EAAGA,EAAIuE,EAAiBvE,IACjCsE,EAAgBD,YAAYlB,KAAK1G,EAASe,MAAMvE,EAAOwE,IAE3D,OAAO6G,GAGXvH,EAAgBkD,WAAa,SAAUhH,EAAOwE,GAC1C,IAAI6G,EAAkB,IAAIvH,EAI1B,GAHAuH,EAAgBhH,KAAOG,EAAQH,KAC/BgH,EAAgB/G,KAAOE,EAAQF,KAE3BE,EAAQgC,QACR,OAAO6E,EAKX,IAHA,IAAIT,EAAgB,IAAIlH,EAAM,EAAG,EAAGc,EAAQH,KAAO,OAAID,EAAWI,EAAQF,KAAO,OAAIF,GACjFkH,EAAkBtL,EAAM0B,aAEnBqF,EAAI,EAAGA,EAAIuE,EAAiBvE,IAAK,CACtC,IAAIwD,EAAa,IAAI5G,EACrB4G,EAAWlG,KAAOG,EAAQH,KAC1BkG,EAAWjG,KAAOE,EAAQF,KAI1B,IAFA,IAAIoG,EAAa1K,EAAM0B,aAEd6J,EAAI,EAAGA,EAAIb,EAAYa,IAC5BhB,EAAWD,OAAOJ,KAAKxG,EAAMmH,eAAe7K,EAAOwE,EAASoG,IAEhES,EAAgBD,YAAYlB,KAAKK,GAGrC,OAAOc,GAGXvH,EAAgBoD,cAAgB,SAAUlH,GACtC,IAAIqL,EAAkB,IAAIvH,EAEtB9D,EAAMsI,YAAYnF,OAAS,GAAKnD,EAAMsI,YAAY,GAAGnF,OAAS,IAC9DkI,EAAgBhH,KAAOrE,EAAMsI,YAAY,GAAG,GAAGnF,OAAS,GAE5D,IAAK,IAAI4D,EAAI,EAAGA,EAAI/G,EAAMsI,YAAYnF,OAAQ4D,IAC1CsE,EAAgBD,YAAYlB,KAAKvG,EAAWuD,cAAc,CAAEoB,YAAatI,EAAMsI,YAAYvB,MAE/F,OAAOsE,GAGXvH,EAAgB1D,UAAUwH,MAAQ,WAC9B,GAAgC,IAA5BlI,KAAK0L,YAAYjI,OACjB,OAAOzD,KAAKwI,YAAYzE,EAAM4B,IAAIvB,iBAAiB,GAIvD,IAFA,IAAIuB,EAAM3F,KAAKwI,YAAYzE,EAAM4B,IAAIvB,iBAAiB,GAAS,IAEtDiD,EAAI,EAAGA,EAAIrH,KAAK0L,YAAYjI,OAAQ4D,IACzC1B,GAAO3F,KAAK0L,YAAYrE,GAAGgE,cAAgB,IAK/C,OAHA1F,EAAMA,EAAI4C,MAAM,GAAI,GACpB5C,GAAO,KAKXvB,EAAgB1D,UAAU4H,MAAQ,WAC9B,IAAIrC,EAAM,IAAI7D,EAAapC,KAAKqI,eAEhCpC,EAAIlD,UAAU,GAEd/C,KAAKiJ,cAAchD,EAAKlC,EAAMkC,IAAI7B,iBAClC6B,EAAIpD,cAAc7C,KAAK0L,YAAYjI,QAEnC,IAAK,IAAI4D,EAAI,EAAGA,EAAIrH,KAAK0L,YAAYjI,OAAQ4D,IACzCpB,EAAIzC,YAAYxD,KAAK0L,YAAYrE,GAAGiB,MAAM,CAAE7D,KAAMzE,KAAKyE,QAE3D,OAAOwB,EAAInG,QAGfsE,EAAgB1D,UAAUiK,OAAS,WAC/B,IAAIjB,EAAO,IAAItH,EAAa,GAAG,GAE3BiE,EAAYvC,EAASqF,iBAAiB,EAAG,EAAG,GAC5CrC,EAAsC,IAA5B9G,KAAK0L,YAAYjI,OAI/B,GAFAzD,KAAKyJ,iBAAiBC,EAAM3F,EAAMkC,IAAI7B,gBAAiBiC,EAAWS,GAE9D9G,KAAK0L,YAAYjI,OAAS,EAAG,CAC7BiG,EAAK/F,YAAY3D,KAAK0L,YAAYjI,QAGlC,IADA,IAAIyH,EAAgB,IAAIlH,EAAM,EAAG,EAAG,EAAG,GAC9BqD,EAAI,EAAGA,EAAIrH,KAAK0L,YAAYjI,OAAQ4D,IAAK,CAC9CqC,EAAK/F,YAAY3D,KAAK0L,YAAYrE,GAAGuD,OAAOnH,QAE5C,IAAK,IAAIoI,EAAI,EAAGA,EAAI7L,KAAK0L,YAAYrE,GAAGuD,OAAOnH,OAAQoI,IACnD7L,KAAK0L,YAAYrE,GAAGuD,OAAOiB,GAAGL,gBAAgB9B,EAAMrD,EAAW6E,IAI3E,OAAOxB,EAAK5J,QAGhBsE,EAAgB1D,UAAU2H,YAAc,WAGpC,IAFA,IAAIhI,EAAO,EAEFgH,EAAI,EAAGA,EAAIrH,KAAK0L,YAAYjI,OAAQ4D,IACzChH,GAAQL,KAAK0L,YAAYrE,GAAGgB,cAEhC,OAAOhI,GAGX+D,EAAgB1D,UAAUkJ,UAAY,SAAU9E,GAC5C,IAAI6C,EAAU7D,EAASpD,UAAUkJ,UAAUrJ,KAAKP,KAAM8E,GACtD6C,EAAQxB,KAAOpC,EAAM4D,QAAQvD,gBAC7BuD,EAAQiB,YAAc,GAEtB,IAAK,IAAIvB,EAAI,EAAGA,EAAIrH,KAAK0L,YAAYjI,OAAQ4D,IACzCM,EAAQiB,YAAY4B,KAAKxK,KAAK0L,YAAYrE,GAAGuC,YAAYhB,aAE7D,OAAOjB,I,eC3LXnH,EAAOC,QAAU0D,EAEjB,IAAI4F,EAAO,EAAQ,MAEfhG,EAAQ,EAAQ,MAChBD,EAAW,EAAQ,IACnBE,EAAQ,EAAQ,IAChB5B,EAAe,EAAQ,MAE3B,SAAS+B,EAAWyG,EAAQnG,GACxBX,EAASvD,KAAKP,MAEdA,KAAK4K,OAASA,GAAU,GAC3B5K,KAAKyE,KAAOA,EAELzE,KAAK4K,OAAOnH,OAAS,IACrBzD,KAAK2E,KAAO3E,KAAK4K,OAAO,GAAGjG,KAC3B3E,KAAK4E,KAAO5E,KAAK4K,OAAO,GAAGhG,MAInCmF,EAAKE,SAAS9F,EAAYL,GAE1BK,EAAW+F,EAAI,SAAUU,EAAQnG,GAC7B,IAAIqH,EAAa,IAAI3H,EAAWyG,EAAQnG,GAExC,OADAqH,EAAWnH,MAAO,EACXmH,GAGX3H,EAAWiG,EAAI,SAAUQ,EAAQnG,GAC7B,IAAIqH,EAAa,IAAI3H,EAAWyG,EAAQnG,GAExC,OADAqH,EAAWlH,MAAO,EACXkH,GAGX3H,EAAWkG,GAAK,SAAUO,EAAQnG,GAC9B,IAAIqH,EAAa,IAAI3H,EAAWyG,EAAQnG,GAGxC,OAFAqH,EAAWnH,MAAO,EAClBmH,EAAWlH,MAAO,EACXkH,GAGX3H,EAAWY,UAAY,SAAUzE,EAAOwE,GACpC,IAAIgH,EAAa,IAAI3H,EAKrB,OAJA2H,EAAWrH,KAAOK,EAAQL,KAC1BqH,EAAWnH,KAAOG,EAAQH,KAC1BmH,EAAWlH,KAAOE,EAAQF,KAEtBtE,EAAMgK,QAAQ,CAAC,YAGnBhK,EAAMiK,mBACNuB,EAAWlB,OAAOJ,KAAKM,MAAMgB,EAAWlB,OAAQtK,EAAMyK,iBAAiBjG,IACvExE,EAAMmK,kBAJKqB,GASf3H,EAAWc,UAAY,SAAU3E,EAAOwE,GACpC,IAAIgH,EAAa,IAAI3H,EACrB2H,EAAWrH,KAAOK,EAAQL,KAC1BqH,EAAWnH,KAAOG,EAAQH,KAC1BmH,EAAWlH,KAAOE,EAAQF,KAI1B,IAFA,IAAIoG,EAAa1K,EAAMU,aAEdqG,EAAI,EAAGA,EAAI2D,EAAY3D,IAC5ByE,EAAWlB,OAAOJ,KAAK1G,EAASe,MAAMvE,EAAOwE,IAEjD,OAAOgH,GAGX3H,EAAWmD,WAAa,SAAUhH,EAAOwE,GACrC,IAAIgH,EAAa,IAAI3H,EAIrB,GAHA2H,EAAWnH,KAAOG,EAAQH,KAC1BmH,EAAWlH,KAAOE,EAAQF,KAEtBE,EAAQgC,QACR,OAAOgF,EAKX,IAHA,IAAIZ,EAAgB,IAAIlH,EAAM,EAAG,EAAGc,EAAQH,KAAO,OAAID,EAAWI,EAAQF,KAAO,OAAIF,GACjFsG,EAAa1K,EAAM0B,aAEdqF,EAAI,EAAGA,EAAI2D,EAAY3D,IAC5ByE,EAAWlB,OAAOJ,KAAKxG,EAAMmH,eAAe7K,EAAOwE,EAASoG,IAEhE,OAAOY,GAGX3H,EAAWqD,cAAgB,SAAUlH,GACjC,IAAIwL,EAAa,IAAI3H,EAEjB7D,EAAMsI,YAAYnF,OAAS,IAC3BqI,EAAWnH,KAAOrE,EAAMsI,YAAY,GAAGnF,OAAS,GAEpD,IAAK,IAAI4D,EAAI,EAAGA,EAAI/G,EAAMsI,YAAYnF,OAAQ4D,IAC1CyE,EAAWlB,OAAOJ,KAAKxG,EAAMwD,cAAc,CAAEoB,YAAatI,EAAMsI,YAAYvB,MAEhF,OAAOyE,GAGX3H,EAAWzD,UAAUwH,MAAQ,WACzB,GAA2B,IAAvBlI,KAAK4K,OAAOnH,OACZ,OAAOzD,KAAKwI,YAAYzE,EAAM4B,IAAIxB,YAAY,GAIlD,IAFA,IAAIwB,EAAM3F,KAAKwI,YAAYzE,EAAM4B,IAAIxB,YAAY,GAAS,IAEjDkD,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IACpC1B,GAAO3F,KAAK0I,kBAAkB1I,KAAK4K,OAAOvD,IAAM,IAKpD,OAHA1B,EAAMA,EAAI4C,MAAM,GAAI,GACpB5C,GAAO,KAKXxB,EAAWzD,UAAU4H,MAAQ,WACzB,IAAIrC,EAAM,IAAI7D,EAAapC,KAAKqI,eAEhCpC,EAAIlD,UAAU,GAEd/C,KAAKiJ,cAAchD,EAAKlC,EAAMkC,IAAI9B,YAClC8B,EAAIpD,cAAc7C,KAAK4K,OAAOnH,QAE9B,IAAK,IAAI4D,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IACpCpB,EAAIzC,YAAYxD,KAAK4K,OAAOvD,GAAGiB,MAAM,CAAE7D,KAAMzE,KAAKyE,QAEtD,OAAOwB,EAAInG,QAGfqE,EAAWzD,UAAUiK,OAAS,WAC1B,IAAIjB,EAAO,IAAItH,EAAa,GAAG,GAE3BiE,EAAYvC,EAASqF,iBAAiB,EAAG,EAAG,GAC5CrC,EAAiC,IAAvB9G,KAAK4K,OAAOnH,OAI1B,GAFAzD,KAAKyJ,iBAAiBC,EAAM3F,EAAMkC,IAAI9B,WAAYkC,EAAWS,GAEzD9G,KAAK4K,OAAOnH,OAAS,EAAG,CACxBiG,EAAK/F,YAAY3D,KAAK4K,OAAOnH,QAG7B,IADA,IAAIyH,EAAgB,IAAIlH,EAAM,EAAG,EAAG,EAAG,GAC9BqD,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IACpCrH,KAAK4K,OAAOvD,GAAGmE,gBAAgB9B,EAAMrD,EAAW6E,GAGxD,OAAOxB,EAAK5J,QAGhBqE,EAAWzD,UAAU2H,YAAc,WAC/B,IAAIoD,EAAiB,GASrB,OAPIzL,KAAK2E,OACL8G,GAAkB,GAClBzL,KAAK4E,OACL6G,GAAkB,GAEtBA,GAAkB,EAEX,EAAazL,KAAK4K,OAAOnH,OAASgI,GAG7CtH,EAAWzD,UAAUkJ,UAAY,SAAU9E,GACvC,IAAI6C,EAAU7D,EAASpD,UAAUkJ,UAAUrJ,KAAKP,KAAM8E,GACtD6C,EAAQxB,KAAOpC,EAAM4D,QAAQxD,WAC7BwD,EAAQiB,YAAc,GAEtB,IAAK,IAAIvB,EAAI,EAAGA,EAAIrH,KAAK4K,OAAOnH,OAAQ4D,IACpCM,EAAQiB,YAAY4B,KAAKxK,KAAK4K,OAAOvD,GAAGuC,YAAYhB,aAExD,OAAOjB,I,eC1KXnH,EAAOC,QAAU4D,EAEjB,IAAI0F,EAAO,EAAQ,MAEfhG,EAAQ,EAAQ,MAChBD,EAAW,EAAQ,IACnBE,EAAQ,EAAQ,IAChBE,EAAU,EAAQ,MAClB9B,EAAe,EAAQ,MAE3B,SAASiC,EAAa0H,EAAUtH,GAC5BX,EAASvD,KAAKP,MAEdA,KAAK+L,SAAWA,GAAY,GAC/B/L,KAAKyE,KAAOA,EAELzE,KAAK+L,SAAStI,OAAS,IACvBzD,KAAK2E,KAAO3E,KAAK+L,SAAS,GAAGpH,KAC7B3E,KAAK4E,KAAO5E,KAAK+L,SAAS,GAAGnH,MAIrCmF,EAAKE,SAAS5F,EAAcP,GAE5BO,EAAa6F,EAAI,SAAU6B,EAAUtH,GACjC,IAAIuH,EAAe,IAAI3H,EAAa0H,EAAUtH,GAE9C,OADAuH,EAAarH,MAAO,EACbqH,GAGX3H,EAAa+F,EAAI,SAAU2B,EAAUtH,GACjC,IAAIuH,EAAe,IAAI3H,EAAa0H,EAAUtH,GAE9C,OADAuH,EAAapH,MAAO,EACboH,GAGX3H,EAAagG,GAAK,SAAU0B,EAAUtH,GAClC,IAAIuH,EAAe,IAAI3H,EAAa0H,EAAUtH,GAG9C,OAFAuH,EAAarH,MAAO,EACpBqH,EAAapH,MAAO,EACboH,GAGX3H,EAAaU,UAAY,SAAUzE,EAAOwE,GACtC,IAAIkH,EAAe,IAAI3H,EAKvB,GAJA2H,EAAavH,KAAOK,EAAQL,KAC5BuH,EAAarH,KAAOG,EAAQH,KAC5BqH,EAAapH,KAAOE,EAAQF,KAExBtE,EAAMgK,QAAQ,CAAC,UACf,OAAO0B,EAEX1L,EAAMiK,mBAEN,EAAG,CACCjK,EAAMiK,mBAEN,IAAI0B,EAAe,GACfC,EAAgB,GAMpB,IAJA5L,EAAMiK,mBACN0B,EAAazB,KAAKM,MAAMmB,EAAc3L,EAAMyK,iBAAiBjG,IAC7DxE,EAAMmK,iBAECnK,EAAMgK,QAAQ,CAAC,OAClBhK,EAAMiK,mBACN2B,EAAc1B,KAAKlK,EAAMyK,iBAAiBjG,IAC1CxE,EAAMmK,iBAGVuB,EAAaD,SAASvB,KAAK,IAAItG,EAAQ+H,EAAcC,IAErD5L,EAAMmK,uBAEDnK,EAAMgK,QAAQ,CAAC,OAIxB,OAFAhK,EAAMmK,iBAECuB,GAGX3H,EAAaY,UAAY,SAAU3E,EAAOwE,GACtC,IAAIkH,EAAe,IAAI3H,EACvB2H,EAAavH,KAAOK,EAAQL,KAC5BuH,EAAarH,KAAOG,EAAQH,KAC5BqH,EAAapH,KAAOE,EAAQF,KAI5B,IAFA,IAAIuH,EAAe7L,EAAMU,aAEhBqG,EAAI,EAAGA,EAAI8E,EAAc9E,IAC9B2E,EAAaD,SAASvB,KAAK1G,EAASe,MAAMvE,EAAOwE,IAErD,OAAOkH,GAGX3H,EAAaiD,WAAa,SAAUhH,EAAOwE,GACvC,IAAIkH,EAAe,IAAI3H,EAIvB,GAHA2H,EAAarH,KAAOG,EAAQH,KAC5BqH,EAAapH,KAAOE,EAAQF,KAExBE,EAAQgC,QACR,OAAOkF,EAKX,IAHA,IAAId,EAAgB,IAAIlH,EAAM,EAAG,EAAGc,EAAQH,KAAO,OAAID,EAAWI,EAAQF,KAAO,OAAIF,GACjFyH,EAAe7L,EAAM0B,aAEhBqF,EAAI,EAAGA,EAAI8E,EAAc9E,IAAK,CACnC,IAAI+E,EAAU,IAAIlI,EAClBkI,EAAQzH,KAAOG,EAAQH,KACvByH,EAAQxH,KAAOE,EAAQF,KAKvB,IAHA,IAAIyH,EAAY/L,EAAM0B,aAClBsK,EAAoBhM,EAAM0B,aAErB6J,EAAI,EAAGA,EAAIS,EAAmBT,IACnCO,EAAQH,aAAazB,KAAKxG,EAAMmH,eAAe7K,EAAOwE,EAASoG,IAEnE,IAAKW,EAAI,EAAGA,EAAIQ,EAAWR,IAAK,CAK5B,IAJA,IAAIU,EAAe,GAEfC,EAAoBlM,EAAM0B,aAErByK,EAAI,EAAGA,EAAID,EAAmBC,IACnCF,EAAa/B,KAAKxG,EAAMmH,eAAe7K,EAAOwE,EAASoG,IAE3DkB,EAAQF,cAAc1B,KAAK+B,GAG/BP,EAAaD,SAASvB,KAAK4B,GAG/B,OAAOJ,GAGX3H,EAAamD,cAAgB,SAAUlH,GACnC,IAAI0L,EAAe,IAAI3H,EAEnB/D,EAAMsI,YAAYnF,OAAS,GAAKnD,EAAMsI,YAAY,GAAGnF,OAAS,GAAKnD,EAAMsI,YAAY,GAAG,GAAGnF,OAAS,IACpGuI,EAAarH,KAAOrE,EAAMsI,YAAY,GAAG,GAAG,GAAGnF,OAAS,GAE5D,IAAK,IAAI4D,EAAI,EAAGA,EAAI/G,EAAMsI,YAAYnF,OAAQ4D,IAC1C2E,EAAaD,SAASvB,KAAKtG,EAAQsD,cAAc,CAAEoB,YAAatI,EAAMsI,YAAYvB,MAEtF,OAAO2E,GAGX3H,EAAa3D,UAAUwH,MAAQ,WAC3B,GAA6B,IAAzBlI,KAAK+L,SAAStI,OACd,OAAOzD,KAAKwI,YAAYzE,EAAM4B,IAAItB,cAAc,GAIpD,IAFA,IAAIsB,EAAM3F,KAAKwI,YAAYzE,EAAM4B,IAAItB,cAAc,GAAS,IAEnDgD,EAAI,EAAGA,EAAIrH,KAAK+L,SAAStI,OAAQ4D,IACtC1B,GAAO3F,KAAK+L,SAAS1E,GAAGgE,cAAgB,IAK5C,OAHA1F,EAAMA,EAAI4C,MAAM,GAAI,GACpB5C,GAAO,KAKXtB,EAAa3D,UAAU4H,MAAQ,WAC3B,IAAIrC,EAAM,IAAI7D,EAAapC,KAAKqI,eAEhCpC,EAAIlD,UAAU,GAEd/C,KAAKiJ,cAAchD,EAAKlC,EAAMkC,IAAI5B,cAClC4B,EAAIpD,cAAc7C,KAAK+L,SAAStI,QAEhC,IAAK,IAAI4D,EAAI,EAAGA,EAAIrH,KAAK+L,SAAStI,OAAQ4D,IACtCpB,EAAIzC,YAAYxD,KAAK+L,SAAS1E,GAAGiB,MAAM,CAAE7D,KAAMzE,KAAKyE,QAExD,OAAOwB,EAAInG,QAGfuE,EAAa3D,UAAUiK,OAAS,WAC5B,IAAIjB,EAAO,IAAItH,EAAa,GAAG,GAE3BiE,EAAYvC,EAASqF,iBAAiB,EAAG,EAAG,GAC5CrC,EAAmC,IAAzB9G,KAAK+L,SAAStI,OAI5B,GAFAzD,KAAKyJ,iBAAiBC,EAAM3F,EAAMkC,IAAI5B,aAAcgC,EAAWS,GAE3D9G,KAAK+L,SAAStI,OAAS,EAAG,CAC1BiG,EAAK/F,YAAY3D,KAAK+L,SAAStI,QAG/B,IADA,IAAIyH,EAAgB,IAAIlH,EAAM,EAAG,EAAG,EAAG,GAC9BqD,EAAI,EAAGA,EAAIrH,KAAK+L,SAAStI,OAAQ4D,IAAK,CAC3CqC,EAAK/F,YAAY,EAAI3D,KAAK+L,SAAS1E,GAAG6E,cAAczI,QAEpDiG,EAAK/F,YAAY3D,KAAK+L,SAAS1E,GAAG4E,aAAaxI,QAE/C,IAAK,IAAIoI,EAAI,EAAGA,EAAI7L,KAAK+L,SAAS1E,GAAG4E,aAAaxI,OAAQoI,IACtD7L,KAAK+L,SAAS1E,GAAG4E,aAAaJ,GAAGL,gBAAgB9B,EAAMrD,EAAW6E,GAEtE,IAAKW,EAAI,EAAGA,EAAI7L,KAAK+L,SAAS1E,GAAG6E,cAAczI,OAAQoI,IAAK,CACxDnC,EAAK/F,YAAY3D,KAAK+L,SAAS1E,GAAG6E,cAAcL,GAAGpI,QAEnD,IAAK,IAAIgJ,EAAI,EAAGA,EAAIzM,KAAK+L,SAAS1E,GAAG6E,cAAcL,GAAGpI,OAAQgJ,IAC1DzM,KAAK+L,SAAS1E,GAAG6E,cAAcL,GAAGY,GAAGjB,gBAAgB9B,EAAMrD,EAAW6E,KAKtF,OAAOxB,EAAK5J,QAGhBuE,EAAa3D,UAAU2H,YAAc,WAGjC,IAFA,IAAIhI,EAAO,EAEFgH,EAAI,EAAGA,EAAIrH,KAAK+L,SAAStI,OAAQ4D,IACtChH,GAAQL,KAAK+L,SAAS1E,GAAGgB,cAE7B,OAAOhI,GAGXgE,EAAa3D,UAAUkJ,UAAY,SAAU9E,GACzC,IAAI6C,EAAU7D,EAASpD,UAAUkJ,UAAUrJ,KAAKP,KAAM8E,GACtD6C,EAAQxB,KAAOpC,EAAM4D,QAAQtD,aAC7BsD,EAAQiB,YAAc,GAEtB,IAAK,IAAIvB,EAAI,EAAGA,EAAIrH,KAAK+L,SAAStI,OAAQ4D,IACtCM,EAAQiB,YAAY4B,KAAKxK,KAAK+L,SAAS1E,GAAGuC,YAAYhB,aAE1D,OAAOjB,I,aChOXnH,EAAOC,QAAUuD,EAEjB,IAAI+F,EAAO,EAAQ,MAEfjG,EAAW,EAAQ,IACnBC,EAAQ,EAAQ,MAChB3B,EAAe,EAAQ,MACvBoC,EAAS,EAAQ,MAErB,SAASR,EAAM6E,EAAGC,EAAGC,EAAGC,EAAGvE,GACvBX,EAASvD,KAAKP,MAEdA,KAAK6I,EAAIA,EACT7I,KAAK8I,EAAIA,EACT9I,KAAK+I,EAAIA,EACT/I,KAAKgJ,EAAIA,EACZhJ,KAAKyE,KAAOA,EAETzE,KAAK2E,UAAyB,IAAX3E,KAAK+I,EACxB/I,KAAK4E,UAAyB,IAAX5E,KAAKgJ,EAG5Be,EAAKE,SAASjG,EAAOF,GAErBE,EAAMkG,EAAI,SAAUrB,EAAGC,EAAGC,EAAGtE,GACzB,IAAIkE,EAAQ,IAAI3E,EAAM6E,EAAGC,EAAGC,OAAGrE,EAAWD,GAE1C,OADAkE,EAAMhE,MAAO,EACNgE,GAGX3E,EAAMoG,EAAI,SAAUvB,EAAGC,EAAGE,EAAGvE,GACzB,IAAIkE,EAAQ,IAAI3E,EAAM6E,EAAGC,OAAGpE,EAAWsE,EAAGvE,GAE1C,OADAkE,EAAM/D,MAAO,EACN+D,GAGX3E,EAAMqG,GAAK,SAAUxB,EAAGC,EAAGC,EAAGC,EAAGvE,GAC7B,IAAIkE,EAAQ,IAAI3E,EAAM6E,EAAGC,EAAGC,EAAGC,EAAGvE,GAGlC,OAFAkE,EAAMhE,MAAO,EACbgE,EAAM/D,MAAO,EACN+D,GAGX3E,EAAMe,UAAY,SAAUzE,EAAOwE,GAC/B,IAAI6D,EAAQ,IAAI3E,EAKhB,GAJA2E,EAAMlE,KAAOK,EAAQL,KACrBkE,EAAMhE,KAAOG,EAAQH,KACrBgE,EAAM/D,KAAOE,EAAQF,KAEjBtE,EAAMgK,QAAQ,CAAC,UACf,OAAO3B,EAEXrI,EAAMiK,mBAEN,IAAImC,EAAapM,EAAMqM,gBAAgB7H,GASvC,OAPA6D,EAAME,EAAI6D,EAAW7D,EACrBF,EAAMG,EAAI4D,EAAW5D,EACrBH,EAAMI,EAAI2D,EAAW3D,EACrBJ,EAAMK,EAAI0D,EAAW1D,EAErB1I,EAAMmK,iBAEC9B,GAGX3E,EAAMiB,UAAY,SAAU3E,EAAOwE,GAC/B,IAAI6D,EAAQ3E,EAAMiH,cAAc3K,EAAOwE,GAEvC,OADA6D,EAAMlE,KAAOK,EAAQL,KACdkE,GAGX3E,EAAMiH,cAAgB,SAAU3K,EAAOwE,GACnC,OAAO,IAAId,EAAM1D,EAAMuB,aAAcvB,EAAMuB,aACvCiD,EAAQH,KAAOrE,EAAMuB,kBAAe6C,EACpCI,EAAQF,KAAOtE,EAAMuB,kBAAe6C,IAG5CV,EAAMsD,WAAa,SAAUhH,EAAOwE,GAChC,IAAI6D,EAAQ,IAAI3E,EAIhB,OAHA2E,EAAMhE,KAAOG,EAAQH,KACrBgE,EAAM/D,KAAOE,EAAQF,KAEjBE,EAAQgC,UAGZ6B,EAAME,EAAIrE,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQyB,gBACtDoC,EAAMG,EAAItE,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQyB,gBACtDoC,EAAMI,EAAIjE,EAAQH,KAAOH,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQmC,sBAAmBvC,EACxFiE,EAAMK,EAAIlE,EAAQF,KAAOJ,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQqC,sBAAmBzC,GAL7EiE,GAUf3E,EAAMmH,eAAiB,SAAU7K,EAAOwE,EAASoG,GAS7C,OARAA,EAAcrC,GAAKrE,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQyB,gBAC/D2E,EAAcpC,GAAKtE,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQyB,gBAE3DzB,EAAQH,OACRuG,EAAcnC,GAAKvE,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQmC,kBAC/DnC,EAAQF,OACRsG,EAAclC,GAAKxE,EAAO8B,OAAOhG,EAAM0B,cAAgB8C,EAAQqC,kBAE5D,IAAInD,EAAMkH,EAAcrC,EAAGqC,EAAcpC,EAAGoC,EAAcnC,EAAGmC,EAAclC,IAGtFhF,EAAMwD,cAAgB,SAAUlH,GAC5B,OAAO0D,EAAMoH,kBAAkB9K,EAAMsI,cAGzC5E,EAAMoH,kBAAoB,SAAUxC,GAChC,OAA2B,IAAvBA,EAAYnF,OACL,IAAIO,EAEX4E,EAAYnF,OAAS,EACd,IAAIO,EAAM4E,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAE1D,IAAI5E,EAAM4E,EAAY,GAAIA,EAAY,KAGjD5E,EAAMtD,UAAUwH,MAAQ,WACpB,YAAsB,IAAXlI,KAAK6I,QAAuC,IAAX7I,KAAK8I,QAC3B,IAAX9I,KAAK+I,QAAuC,IAAX/I,KAAKgJ,EACtChJ,KAAKwI,YAAYzE,EAAM4B,IAAI3B,OAAO,GAEtChE,KAAKwI,YAAYzE,EAAM4B,IAAI3B,OAAO,GAAS,IAAMhE,KAAK0I,kBAAkB1I,MAAQ,KAG3FgE,EAAMtD,UAAU4H,MAAQ,SAAU1C,GAC9B,IAAIK,EAAM,IAAI7D,EAAapC,KAAKqI,eAkBhC,OAhBApC,EAAIlD,UAAU,GACd/C,KAAKiJ,cAAchD,EAAKlC,EAAMkC,IAAIjC,MAAO4B,QAEnB,IAAX5F,KAAK6I,QAAuC,IAAX7I,KAAK8I,GAC7C7C,EAAI3C,cAAcsJ,KAClB3G,EAAI3C,cAAcsJ,KAEd5M,KAAK2E,MACLsB,EAAI3C,cAAcsJ,KAClB5M,KAAK4E,MACLqB,EAAI3C,cAAcsJ,MAGtB5M,KAAKuL,eAAetF,GAGjBA,EAAInG,QAGfkE,EAAMtD,UAAU6K,eAAiB,SAAUtF,GACvCA,EAAI3C,cAActD,KAAK6I,GACvB5C,EAAI3C,cAActD,KAAK8I,GAEnB9I,KAAK2E,MACLsB,EAAI3C,cAActD,KAAK+I,GACvB/I,KAAK4E,MACLqB,EAAI3C,cAActD,KAAKgJ,IAG/BhF,EAAMtD,UAAUiK,OAAS,WACrB,IAAIjB,EAAO,IAAItH,EAAa,GAAG,GAE3BiE,EAAYvC,EAASqF,iBAAiB,EAAG,EAAG,GAC5CrC,OAA4B,IAAX9G,KAAK6I,QAAuC,IAAX7I,KAAK8I,EAO3D,OALA9I,KAAKyJ,iBAAiBC,EAAM3F,EAAMkC,IAAIjC,MAAOqC,EAAWS,GAEnDA,GACD9G,KAAKwL,gBAAgB9B,EAAMrD,EAAW,IAAIrC,EAAM,EAAG,EAAG,EAAG,IAEtD0F,EAAK5J,QAGhBkE,EAAMtD,UAAU8K,gBAAkB,SAAU9B,EAAMrD,EAAW6E,GACzD,IAAIrC,EAAI7I,KAAK6I,EAAIxC,EAAUiD,SACvBR,EAAI9I,KAAK8I,EAAIzC,EAAUiD,SACvBP,EAAI/I,KAAK+I,EAAI1C,EAAUkD,QACvBP,EAAIhJ,KAAKgJ,EAAI3C,EAAUmD,QAE3BE,EAAK/F,YAAYa,EAAOmF,OAAOd,EAAIqC,EAAcrC,IACjDa,EAAK/F,YAAYa,EAAOmF,OAAOb,EAAIoC,EAAcpC,IAC7C9I,KAAK2E,MACL+E,EAAK/F,YAAYa,EAAOmF,OAAOZ,EAAImC,EAAcnC,IACjD/I,KAAK4E,MACL8E,EAAK/F,YAAYa,EAAOmF,OAAOX,EAAIkC,EAAclC,IAErDkC,EAAcrC,EAAIA,EAClBqC,EAAcpC,EAAIA,EAClBoC,EAAcnC,EAAIA,EAClBmC,EAAclC,EAAIA,GAGtBhF,EAAMtD,UAAU2H,YAAc,WAC1B,IAAIhI,EAAO,GAOX,OALIL,KAAK2E,OACLtE,GAAQ,GACRL,KAAK4E,OACLvE,GAAQ,GAELA,GAGX2D,EAAMtD,UAAUkJ,UAAY,SAAU9E,GAClC,IAAI6C,EAAU7D,EAASpD,UAAUkJ,UAAUrJ,KAAKP,KAAM8E,GAUtD,OATA6C,EAAQxB,KAAOpC,EAAM4D,QAAQ3D,WAEP,IAAXhE,KAAK6I,QAAuC,IAAX7I,KAAK8I,EAC7CnB,EAAQiB,YAAc,QACC,IAAX5I,KAAK+I,EACjBpB,EAAQiB,YAAc,CAAC5I,KAAK6I,EAAG7I,KAAK8I,EAAG9I,KAAK+I,GAE5CpB,EAAQiB,YAAc,CAAC5I,KAAK6I,EAAG7I,KAAK8I,GAEjCnB,I,eCvNXnH,EAAOC,QAAUyD,EAEjB,IAAI6F,EAAO,EAAQ,MAEfjG,EAAW,EAAQ,IACnBC,EAAQ,EAAQ,MAChBC,EAAQ,EAAQ,IAChB5B,EAAe,EAAQ,MAE3B,SAAS8B,EAAQ+H,EAAcC,EAAezH,GAC1CX,EAASvD,KAAKP,MAEdA,KAAKiM,aAAeA,GAAgB,GACpCjM,KAAKkM,cAAgBA,GAAiB,GACzClM,KAAKyE,KAAOA,EAELzE,KAAKiM,aAAaxI,OAAS,IAC3BzD,KAAK2E,KAAO3E,KAAKiM,aAAa,GAAGtH,KACjC3E,KAAK4E,KAAO5E,KAAKiM,aAAa,GAAGrH,MAIzCmF,EAAKE,SAAS/F,EAASJ,GAEvBI,EAAQgG,EAAI,SAAU+B,EAAcC,EAAezH,GAC/C,IAAI2H,EAAU,IAAIlI,EAAQ+H,EAAcC,EAAezH,GAEvD,OADA2H,EAAQzH,MAAO,EACRyH,GAGXlI,EAAQkG,EAAI,SAAU6B,EAAcC,EAAezH,GAC/C,IAAI2H,EAAU,IAAIlI,EAAQ+H,EAAcC,EAAezH,GAEvD,OADA2H,EAAQxH,MAAO,EACRwH,GAGXlI,EAAQmG,GAAK,SAAU4B,EAAcC,EAAezH,GAChD,IAAI2H,EAAU,IAAIlI,EAAQ+H,EAAcC,EAAezH,GAGvD,OAFA2H,EAAQzH,MAAO,EACfyH,EAAQxH,MAAO,EACRwH,GAGXlI,EAAQa,UAAY,SAAUzE,EAAOwE,GACjC,IAAIsH,EAAU,IAAIlI,EAKlB,GAJAkI,EAAQ3H,KAAOK,EAAQL,KACvB2H,EAAQzH,KAAOG,EAAQH,KACvByH,EAAQxH,KAAOE,EAAQF,KAEnBtE,EAAMgK,QAAQ,CAAC,UACf,OAAO8B,EAQX,IANA9L,EAAMiK,mBAENjK,EAAMiK,mBACN6B,EAAQH,aAAazB,KAAKM,MAAMsB,EAAQH,aAAc3L,EAAMyK,iBAAiBjG,IAC7ExE,EAAMmK,iBAECnK,EAAMgK,QAAQ,CAAC,OAClBhK,EAAMiK,mBACN6B,EAAQF,cAAc1B,KAAKlK,EAAMyK,iBAAiBjG,IAClDxE,EAAMmK,iBAKV,OAFAnK,EAAMmK,iBAEC2B,GAGXlI,EAAQe,UAAY,SAAU3E,EAAOwE,GACjC,IAAIsH,EAAU,IAAIlI,EAClBkI,EAAQ3H,KAAOK,EAAQL,KACvB2H,EAAQzH,KAAOG,EAAQH,KACvByH,EAAQxH,KAAOE,EAAQF,KAEvB,IAAIyH,EAAY/L,EAAMU,aAEtB,GAAIqL,EAAY,EAAG,CAGf,IAFA,IAAIC,EAAoBhM,EAAMU,aAErBqG,EAAI,EAAGA,EAAIiF,EAAmBjF,IACnC+E,EAAQH,aAAazB,KAAKxG,EAAMiH,cAAc3K,EAAOwE,IAEzD,IAAKuC,EAAI,EAAGA,EAAIgF,EAAWhF,IAAK,CAK5B,IAJA,IAAIkF,EAAe,GAEfC,EAAoBlM,EAAMU,aAErB6K,EAAI,EAAGA,EAAIW,EAAmBX,IACnCU,EAAa/B,KAAKxG,EAAMiH,cAAc3K,EAAOwE,IAEjDsH,EAAQF,cAAc1B,KAAK+B,IAInC,OAAOH,GAGXlI,EAAQoD,WAAa,SAAUhH,EAAOwE,GAClC,IAAIsH,EAAU,IAAIlI,EAIlB,GAHAkI,EAAQzH,KAAOG,EAAQH,KACvByH,EAAQxH,KAAOE,EAAQF,KAEnBE,EAAQgC,QACR,OAAOsF,EAMX,IAJA,IAAIlB,EAAgB,IAAIlH,EAAM,EAAG,EAAGc,EAAQH,KAAO,OAAID,EAAWI,EAAQF,KAAO,OAAIF,GACjF2H,EAAY/L,EAAM0B,aAClBsK,EAAoBhM,EAAM0B,aAErBqF,EAAI,EAAGA,EAAIiF,EAAmBjF,IACnC+E,EAAQH,aAAazB,KAAKxG,EAAMmH,eAAe7K,EAAOwE,EAASoG,IAEnE,IAAK7D,EAAI,EAAGA,EAAIgF,EAAWhF,IAAK,CAK5B,IAJA,IAAIkF,EAAe,GAEfC,EAAoBlM,EAAM0B,aAErB6J,EAAI,EAAGA,EAAIW,EAAmBX,IACnCU,EAAa/B,KAAKxG,EAAMmH,eAAe7K,EAAOwE,EAASoG,IAE3DkB,EAAQF,cAAc1B,KAAK+B,GAG/B,OAAOH,GAGXlI,EAAQsD,cAAgB,SAAUlH,GAC9B,IAAI8L,EAAU,IAAIlI,EAEd5D,EAAMsI,YAAYnF,OAAS,GAAKnD,EAAMsI,YAAY,GAAGnF,OAAS,IAC9D2I,EAAQzH,KAAOrE,EAAMsI,YAAY,GAAG,GAAGnF,OAAS,GAEpD,IAAK,IAAI4D,EAAI,EAAGA,EAAI/G,EAAMsI,YAAYnF,OAAQ4D,IAAK,CAC3CA,EAAI,GACJ+E,EAAQF,cAAc1B,KAAK,IAE/B,IAAK,IAAIqB,EAAI,EAAGA,EAAKvL,EAAMsI,YAAYvB,GAAG5D,OAAQoI,IACpC,IAANxE,EACA+E,EAAQH,aAAazB,KAAKxG,EAAMoH,kBAAkB9K,EAAMsI,YAAYvB,GAAGwE,KAEvEO,EAAQF,cAAc7E,EAAI,GAAGmD,KAAKxG,EAAMoH,kBAAkB9K,EAAMsI,YAAYvB,GAAGwE,KAI3F,OAAOO,GAGXlI,EAAQxD,UAAUwH,MAAQ,WACtB,OAAiC,IAA7BlI,KAAKiM,aAAaxI,OACXzD,KAAKwI,YAAYzE,EAAM4B,IAAIzB,SAAS,GAExClE,KAAKwI,YAAYzE,EAAM4B,IAAIzB,SAAS,GAASlE,KAAKqL,eAG7DnH,EAAQxD,UAAU2K,YAAc,WAG5B,IAFA,IAAIC,EAAW,KAENjE,EAAI,EAAGA,EAAIrH,KAAKiM,aAAaxI,OAAQ4D,IAC1CiE,GAAYtL,KAAK0I,kBAAkB1I,KAAKiM,aAAa5E,IAAM,IAK/D,IAHAiE,EAAWA,EAAS/C,MAAM,GAAI,GAC9B+C,GAAY,IAEPjE,EAAI,EAAGA,EAAIrH,KAAKkM,cAAczI,OAAQ4D,IAAK,CAC5CiE,GAAY,KAEZ,IAAK,IAAIO,EAAI,EAAGA,EAAI7L,KAAKkM,cAAc7E,GAAG5D,OAAQoI,IAC9CP,GAAYtL,KAAK0I,kBAAkB1I,KAAKkM,cAAc7E,GAAGwE,IAAM,IAGnEP,EAAWA,EAAS/C,MAAM,GAAI,GAC9B+C,GAAY,IAKhB,OAFAA,GAAY,KAKhBpH,EAAQxD,UAAU4H,MAAQ,SAAU1C,GAChC,IAAIK,EAAM,IAAI7D,EAAapC,KAAKqI,eAEhCpC,EAAIlD,UAAU,GAEd/C,KAAKiJ,cAAchD,EAAKlC,EAAMkC,IAAI/B,QAAS0B,GAEvC5F,KAAKiM,aAAaxI,OAAS,GAC3BwC,EAAIpD,cAAc,EAAI7C,KAAKkM,cAAczI,QACzCwC,EAAIpD,cAAc7C,KAAKiM,aAAaxI,SAGpCwC,EAAIpD,cAAc,GAGtB,IAAK,IAAIwE,EAAI,EAAGA,EAAIrH,KAAKiM,aAAaxI,OAAQ4D,IAC1CrH,KAAKiM,aAAa5E,GAAGkE,eAAetF,GAExC,IAAKoB,EAAI,EAAGA,EAAIrH,KAAKkM,cAAczI,OAAQ4D,IAAK,CAC5CpB,EAAIpD,cAAc7C,KAAKkM,cAAc7E,GAAG5D,QAExC,IAAK,IAAIoI,EAAI,EAAGA,EAAI7L,KAAKkM,cAAc7E,GAAG5D,OAAQoI,IAC9C7L,KAAKkM,cAAc7E,GAAGwE,GAAGN,eAAetF,GAGhD,OAAOA,EAAInG,QAGfoE,EAAQxD,UAAUiK,OAAS,WACvB,IAAIjB,EAAO,IAAItH,EAAa,GAAG,GAE3BiE,EAAYvC,EAASqF,iBAAiB,EAAG,EAAG,GAC5CrC,EAAuC,IAA7B9G,KAAKiM,aAAaxI,OAIhC,GAFAzD,KAAKyJ,iBAAiBC,EAAM3F,EAAMkC,IAAI/B,QAASmC,EAAWS,GAEtD9G,KAAKiM,aAAaxI,OAAS,EAAG,CAC9BiG,EAAK/F,YAAY,EAAI3D,KAAKkM,cAAczI,QAExCiG,EAAK/F,YAAY3D,KAAKiM,aAAaxI,QAGnC,IADA,IAAIyH,EAAgB,IAAIlH,EAAM,EAAG,EAAG,EAAG,GAC9BqD,EAAI,EAAGA,EAAIrH,KAAKiM,aAAaxI,OAAQ4D,IAC1CrH,KAAKiM,aAAa5E,GAAGmE,gBAAgB9B,EAAMrD,EAAW6E,GAE1D,IAAK7D,EAAI,EAAGA,EAAIrH,KAAKkM,cAAczI,OAAQ4D,IAAK,CAC5CqC,EAAK/F,YAAY3D,KAAKkM,cAAc7E,GAAG5D,QAEvC,IAAK,IAAIoI,EAAI,EAAGA,EAAI7L,KAAKkM,cAAc7E,GAAG5D,OAAQoI,IAC9C7L,KAAKkM,cAAc7E,GAAGwE,GAAGL,gBAAgB9B,EAAMrD,EAAW6E,IAItE,OAAOxB,EAAK5J,QAGhBoE,EAAQxD,UAAU2H,YAAc,WAC5B,IAAIoD,EAAiB,GAEjBzL,KAAK2E,OACL8G,GAAkB,GAClBzL,KAAK4E,OACL6G,GAAkB,GAEtB,IAAIpL,EAAO,EAEPL,KAAKiM,aAAaxI,OAAS,IAC3BpD,GAAQ,EAAKL,KAAKiM,aAAaxI,OAASgI,GAE5C,IAAK,IAAIpE,EAAI,EAAGA,EAAIrH,KAAKkM,cAAczI,OAAQ4D,IAC3ChH,GAAQ,EAAKL,KAAKkM,cAAc7E,GAAG5D,OAASgI,EAEhD,OAAOpL,GAGX6D,EAAQxD,UAAUkJ,UAAY,SAAU9E,GACpC,IAAI6C,EAAU7D,EAASpD,UAAUkJ,UAAUrJ,KAAKP,KAAM8E,GAItD,GAHA6C,EAAQxB,KAAOpC,EAAM4D,QAAQzD,QAC7ByD,EAAQiB,YAAc,GAElB5I,KAAKiM,aAAaxI,OAAS,EAAG,CAG9B,IAFA,IAAIwI,EAAe,GAEV5E,EAAI,EAAGA,EAAIrH,KAAKiM,aAAaxI,OAAQ4D,IACtCrH,KAAK2E,KACLsH,EAAazB,KAAK,CAACxK,KAAKiM,aAAa5E,GAAGwB,EAAG7I,KAAKiM,aAAa5E,GAAGyB,EAAG9I,KAAKiM,aAAa5E,GAAG0B,IAExFkD,EAAazB,KAAK,CAACxK,KAAKiM,aAAa5E,GAAGwB,EAAG7I,KAAKiM,aAAa5E,GAAGyB,IAGxEnB,EAAQiB,YAAY4B,KAAKyB,GAG7B,IAAK,IAAIJ,EAAI,EAAGA,EAAI7L,KAAKkM,cAAczI,OAAQoI,IAAK,CAGhD,IAFA,IAAIU,EAAe,GAEVE,EAAI,EAAGA,EAAIzM,KAAKkM,cAAcL,GAAGpI,OAAQgJ,IAC1CzM,KAAK2E,KACL4H,EAAa/B,KAAK,CAACxK,KAAKkM,cAAcL,GAAGY,GAAG5D,EAAG7I,KAAKkM,cAAcL,GAAGY,GAAG3D,EAAG9I,KAAKkM,cAAcL,GAAGY,GAAG1D,IAEpGwD,EAAa/B,KAAK,CAACxK,KAAKkM,cAAcL,GAAGY,GAAG5D,EAAG7I,KAAKkM,cAAcL,GAAGY,GAAG3D,IAGhFnB,EAAQiB,YAAY4B,KAAK+B,GAG7B,OAAO5E,I,SC9RXnH,EAAOC,QAAU,CACbkF,IAAK,CACD3B,MAAO,QACPC,WAAY,aACZC,QAAS,UACTC,WAAY,aACZC,gBAAiB,kBACjBC,aAAc,eACdC,mBAAoB,sBAExB2B,IAAK,CACDjC,MAAO,EACPC,WAAY,EACZC,QAAS,EACTC,WAAY,EACZC,gBAAiB,EACjBC,aAAc,EACdC,mBAAoB,GAExBqD,QAAS,CACL3D,MAAO,QACPC,WAAY,aACZC,QAAS,UACTC,WAAY,aACZC,gBAAiB,kBACjBC,aAAc,eACdC,mBAAoB,wB,eC1B5B9D,EAAOC,QAAU8D,EAEjB,IAAIR,EAAQ,EAAQ,MAChBC,EAAQ,EAAQ,IAEpB,SAASO,EAAUjE,GACfN,KAAKM,MAAQA,EACbN,KAAKC,SAAW,EAGpBsE,EAAU7D,UAAU0E,MAAQ,SAAUyH,GAClC7M,KAAK8M,kBAEL,IAAK,IAAIzF,EAAI,EAAGA,EAAIwF,EAAOpJ,OAAQ4D,IAC/B,GAA+D,IAA3DrH,KAAKM,MAAM0H,UAAUhI,KAAKC,UAAU8H,QAAQ8E,EAAOxF,IAEnD,OADArH,KAAKC,UAAY4M,EAAOxF,GAAG5D,OACpBoJ,EAAOxF,GAItB,OAAO,MAGX9C,EAAU7D,UAAU2E,WAAa,SAAUwH,GACvC7M,KAAK8M,kBAEL,IAAK,IAAIzF,EAAI,EAAGA,EAAIwF,EAAOpJ,OAAQ4D,IAAK,CACpC,IAAIjC,EAAQpF,KAAKM,MAAM0H,UAAUhI,KAAKC,UAAUmF,MAAMyH,EAAOxF,IAE7D,GAAIjC,EAEA,OADApF,KAAKC,UAAYmF,EAAM,GAAG3B,OACnB2B,EAIf,OAAO,MAGXb,EAAU7D,UAAU4J,QAAU,SAAUuC,GACpC7M,KAAK8M,kBAEL,IAAK,IAAIzF,EAAI,EAAGA,EAAIwF,EAAOpJ,OAAQ4D,IAC/B,GAA+D,IAA3DrH,KAAKM,MAAM0H,UAAUhI,KAAKC,UAAU8H,QAAQ8E,EAAOxF,IAEnD,OADArH,KAAKC,UAAY4M,EAAOxF,GAAG5D,QACpB,EAIf,OAAO,GAGXc,EAAU7D,UAAU8E,UAAY,WAC5B,IAAID,EAAevF,KAAKoF,MAAM,CAACrB,EAAM4B,IAAI3B,MAAOD,EAAM4B,IAAI1B,WAAYF,EAAM4B,IAAIzB,QAASH,EAAM4B,IAAIxB,WACnGJ,EAAM4B,IAAIvB,gBAAiBL,EAAM4B,IAAItB,aAAcN,EAAM4B,IAAIrB,qBAE7D,IAAKiB,EACD,MAAM,IAAIL,MAAM,0BAEpB,OAAOK,GAGXhB,EAAU7D,UAAUgF,eAAiB,WAGjC,OAFgB1F,KAAKoF,MAAM,CAAC,KAAM,IAAK,OAGnC,IAAK,KAAM,MAAO,CAAET,MAAM,EAAMC,MAAM,GACtC,IAAK,IAAK,MAAO,CAAED,MAAM,EAAMC,MAAM,GACrC,IAAK,IAAK,MAAO,CAAED,MAAM,EAAOC,MAAM,GACtC,QAAS,MAAO,CAAED,MAAM,EAAOC,MAAM,KAI7CL,EAAU7D,UAAU6J,iBAAmB,WACnC,IAAKvK,KAAKsK,QAAQ,CAAC,MACf,MAAM,IAAIpF,MAAM,yBAGxBX,EAAU7D,UAAU+J,eAAiB,WACjC,IAAKzK,KAAKsK,QAAQ,CAAC,MACf,MAAM,IAAIpF,MAAM,uBAGxBX,EAAU7D,UAAUiM,gBAAkB,SAAU7H,GAC5C,IAAIM,EASJ,KANIA,EADAN,EAAQH,MAAQG,EAAQF,KAChB5E,KAAKqF,WAAW,CAAC,wCACpBP,EAAQH,MAAQG,EAAQF,KACrB5E,KAAKqF,WAAW,CAAC,gCAEjBrF,KAAKqF,WAAW,CAAC,yBAGzB,MAAM,IAAIH,MAAM,wBAEpB,OAAIJ,EAAQH,MAAQG,EAAQF,KACjB,IAAIZ,EAAM+I,WAAW3H,EAAM,IAAK2H,WAAW3H,EAAM,IAAK2H,WAAW3H,EAAM,IAAK2H,WAAW3H,EAAM,KAC/FN,EAAQH,KACN,IAAIX,EAAM+I,WAAW3H,EAAM,IAAK2H,WAAW3H,EAAM,IAAK2H,WAAW3H,EAAM,KACzEN,EAAQF,KACN,IAAIZ,EAAM+I,WAAW3H,EAAM,IAAK2H,WAAW3H,EAAM,SAAKV,EAAWqI,WAAW3H,EAAM,KAElF,IAAIpB,EAAM+I,WAAW3H,EAAM,IAAK2H,WAAW3H,EAAM,MAGhEb,EAAU7D,UAAUqK,iBAAmB,SAAUjG,GAC7C,IAAI8D,EAAc,GAElB,EAAG,CACC,IAAIoE,EAAoBhN,KAAKsK,QAAQ,CAAC,MAEtC1B,EAAY4B,KAAKxK,KAAK2M,gBAAgB7H,IAElCkI,GACAhN,KAAKyK,uBACJzK,KAAKsK,QAAQ,CAAC,OAEvB,OAAO1B,GAGXrE,EAAU7D,UAAUoM,gBAAkB,WAClC,KAAO9M,KAAKC,SAAWD,KAAKM,MAAMmD,QAAwC,MAA9BzD,KAAKM,MAAMN,KAAKC,WACxDD,KAAKC,a,cC1HbQ,EAAQsD,MAAQ,EAAhB,MACAtD,EAAQqD,SAAW,EAAnB,IACArD,EAAQuD,MAAQ,EAAhB,IACAvD,EAAQwD,WAAa,EAArB,MACAxD,EAAQyD,QAAU,EAAlB,MACAzD,EAAQ0D,WAAa,EAArB,MACA1D,EAAQ2D,gBAAkB,EAA1B,MACA3D,EAAQ4D,aAAe,EAAvB,MACA5D,EAAQ6D,mBAAqB,EAA7B,O,SCRA9D,EAAOC,QAAU,CACbkJ,OAAQ,SAAUrJ,GACd,OAAQA,GAAS,EAAMA,GAAS,IAEpCgG,OAAQ,SAAUhG,GACd,OAAQA,GAAS,IAAgB,EAARA","sources":["webpack://SITNA/./node_modules/wkx/lib/binaryreader.js","webpack://SITNA/./node_modules/wkx/lib/binarywriter.js","webpack://SITNA/./node_modules/wkx/lib/geometry.js","webpack://SITNA/./node_modules/wkx/lib/geometrycollection.js","webpack://SITNA/./node_modules/wkx/lib/linestring.js","webpack://SITNA/./node_modules/wkx/lib/multilinestring.js","webpack://SITNA/./node_modules/wkx/lib/multipoint.js","webpack://SITNA/./node_modules/wkx/lib/multipolygon.js","webpack://SITNA/./node_modules/wkx/lib/point.js","webpack://SITNA/./node_modules/wkx/lib/polygon.js","webpack://SITNA/./node_modules/wkx/lib/types.js","webpack://SITNA/./node_modules/wkx/lib/wktparser.js","webpack://SITNA/./node_modules/wkx/lib/wkx.js","webpack://SITNA/./node_modules/wkx/lib/zigzag.js"],"sourcesContent":["module.exports = BinaryReader;\r\n\r\nfunction BinaryReader(buffer, isBigEndian) {\r\n    this.buffer = buffer;\r\n    this.position = 0;\r\n    this.isBigEndian = isBigEndian || false;\r\n}\r\n\r\nfunction _read(readLE, readBE, size) {\r\n    return function () {\r\n        var value;\r\n\r\n        if (this.isBigEndian)\r\n            value = readBE.call(this.buffer, this.position);\r\n        else\r\n            value = readLE.call(this.buffer, this.position);\r\n\r\n        this.position += size;\r\n\r\n        return value;\r\n    };\r\n}\r\n\r\nBinaryReader.prototype.readUInt8 = _read(Buffer.prototype.readUInt8, Buffer.prototype.readUInt8, 1);\r\nBinaryReader.prototype.readUInt16 = _read(Buffer.prototype.readUInt16LE, Buffer.prototype.readUInt16BE, 2);\r\nBinaryReader.prototype.readUInt32 = _read(Buffer.prototype.readUInt32LE, Buffer.prototype.readUInt32BE, 4);\r\nBinaryReader.prototype.readInt8 = _read(Buffer.prototype.readInt8, Buffer.prototype.readInt8, 1);\r\nBinaryReader.prototype.readInt16 = _read(Buffer.prototype.readInt16LE, Buffer.prototype.readInt16BE, 2);\r\nBinaryReader.prototype.readInt32 = _read(Buffer.prototype.readInt32LE, Buffer.prototype.readInt32BE, 4);\r\nBinaryReader.prototype.readFloat = _read(Buffer.prototype.readFloatLE, Buffer.prototype.readFloatBE, 4);\r\nBinaryReader.prototype.readDouble = _read(Buffer.prototype.readDoubleLE, Buffer.prototype.readDoubleBE, 8);\r\n\r\nBinaryReader.prototype.readVarInt = function () {\r\n    var nextByte,\r\n        result = 0,\r\n        bytesRead = 0;\r\n\r\n    do {\r\n        nextByte = this.buffer[this.position + bytesRead];\r\n        result += (nextByte & 0x7F) << (7 * bytesRead);\r\n        bytesRead++;\r\n    } while (nextByte >= 0x80);\r\n\r\n    this.position += bytesRead;\r\n\r\n    return result;\r\n};\r\n","module.exports = BinaryWriter;\r\n\r\nfunction BinaryWriter(size, allowResize) {\r\n    this.buffer = new Buffer(size);\r\n    this.position = 0;\r\n    this.allowResize = allowResize;\r\n}\r\n\r\nfunction _write(write, size) {\r\n    return function (value, noAssert) {\r\n        this.ensureSize(size);\r\n\r\n        write.call(this.buffer, value, this.position, noAssert);\r\n        this.position += size;\r\n    };\r\n}\r\n\r\nBinaryWriter.prototype.writeUInt8 = _write(Buffer.prototype.writeUInt8, 1);\r\nBinaryWriter.prototype.writeUInt16LE = _write(Buffer.prototype.writeUInt16LE, 2);\r\nBinaryWriter.prototype.writeUInt16BE = _write(Buffer.prototype.writeUInt16BE, 2);\r\nBinaryWriter.prototype.writeUInt32LE = _write(Buffer.prototype.writeUInt32LE, 4);\r\nBinaryWriter.prototype.writeUInt32BE = _write(Buffer.prototype.writeUInt32BE, 4);\r\nBinaryWriter.prototype.writeInt8 = _write(Buffer.prototype.writeInt8, 1);\r\nBinaryWriter.prototype.writeInt16LE = _write(Buffer.prototype.writeInt16LE, 2);\r\nBinaryWriter.prototype.writeInt16BE = _write(Buffer.prototype.writeInt16BE, 2);\r\nBinaryWriter.prototype.writeInt32LE = _write(Buffer.prototype.writeInt32LE, 4);\r\nBinaryWriter.prototype.writeInt32BE = _write(Buffer.prototype.writeInt32BE, 4);\r\nBinaryWriter.prototype.writeFloatLE = _write(Buffer.prototype.writeFloatLE, 4);\r\nBinaryWriter.prototype.writeFloatBE = _write(Buffer.prototype.writeFloatBE, 4);\r\nBinaryWriter.prototype.writeDoubleLE = _write(Buffer.prototype.writeDoubleLE, 8);\r\nBinaryWriter.prototype.writeDoubleBE = _write(Buffer.prototype.writeDoubleBE, 8);\r\n\r\nBinaryWriter.prototype.writeBuffer = function (buffer) {\r\n    this.ensureSize(buffer.length);\r\n\r\n    buffer.copy(this.buffer, this.position, 0, buffer.length);\r\n    this.position += buffer.length;\r\n};\r\n\r\nBinaryWriter.prototype.writeVarInt = function (value) {\r\n    var length = 1;\r\n\r\n    while ((value & 0xFFFFFF80) !== 0) {\r\n        this.writeUInt8((value & 0x7F) | 0x80);\r\n        value >>>= 7;\r\n        length++;\r\n    }\r\n\r\n    this.writeUInt8(value & 0x7F);\r\n\r\n    return length;\r\n};\r\n\r\nBinaryWriter.prototype.ensureSize = function (size) {\r\n    if (this.buffer.length < this.position + size) {\r\n        if (this.allowResize) {\r\n            var tempBuffer = new Buffer(this.position + size);\r\n            this.buffer.copy(tempBuffer, 0, 0, this.buffer.length);\r\n            this.buffer = tempBuffer;\r\n        }\r\n        else {\r\n            throw new RangeError('index out of range');\r\n        }\r\n    }\r\n};\r\n","module.exports = Geometry;\r\n\r\nvar Types = require('./types');\r\nvar Point = require('./point');\r\nvar LineString = require('./linestring');\r\nvar Polygon = require('./polygon');\r\nvar MultiPoint = require('./multipoint');\r\nvar MultiLineString = require('./multilinestring');\r\nvar MultiPolygon = require('./multipolygon');\r\nvar GeometryCollection = require('./geometrycollection');\r\nvar BinaryReader = require('./binaryreader');\r\nvar BinaryWriter = require('./binarywriter');\r\nvar WktParser = require('./wktparser');\r\nvar ZigZag = require('./zigzag.js');\r\n\r\nfunction Geometry() {\r\n    this.srid = undefined;\r\n    this.hasZ = false;\r\n    this.hasM = false;\r\n}\r\n\r\nGeometry.parse = function (value, options) {\r\n    var valueType = typeof value;\r\n\r\n    if (valueType === 'string' || value instanceof WktParser)\r\n        return Geometry._parseWkt(value);\r\n    else if (Buffer.isBuffer(value) || value instanceof BinaryReader)\r\n        return Geometry._parseWkb(value, options);\r\n    else\r\n        throw new Error('first argument must be a string or Buffer');\r\n};\r\n\r\nGeometry._parseWkt = function (value) {\r\n    var wktParser,\r\n        srid;\r\n\r\n    if (value instanceof WktParser)\r\n        wktParser = value;\r\n    else\r\n        wktParser = new WktParser(value);\r\n\r\n    var match = wktParser.matchRegex([/^SRID=(\\d+);/]);\r\n    if (match)\r\n        srid = parseInt(match[1], 10);\r\n\r\n    var geometryType = wktParser.matchType();\r\n    var dimension = wktParser.matchDimension();\r\n\r\n    var options = {\r\n        srid: srid,\r\n        hasZ: dimension.hasZ,\r\n        hasM: dimension.hasM\r\n    };\r\n\r\n    switch (geometryType) {\r\n        case Types.wkt.Point:\r\n            return Point._parseWkt(wktParser, options);\r\n        case Types.wkt.LineString:\r\n            return LineString._parseWkt(wktParser, options);\r\n        case Types.wkt.Polygon:\r\n            return Polygon._parseWkt(wktParser, options);\r\n        case Types.wkt.MultiPoint:\r\n            return MultiPoint._parseWkt(wktParser, options);\r\n        case Types.wkt.MultiLineString:\r\n            return MultiLineString._parseWkt(wktParser, options);\r\n        case Types.wkt.MultiPolygon:\r\n            return MultiPolygon._parseWkt(wktParser, options);\r\n        case Types.wkt.GeometryCollection:\r\n            return GeometryCollection._parseWkt(wktParser, options);\r\n    }\r\n};\r\n\r\nGeometry._parseWkb = function (value, parentOptions) {\r\n    var binaryReader,\r\n        wkbType,\r\n        geometryType,\r\n        options = {};\r\n\r\n    if (value instanceof BinaryReader)\r\n        binaryReader = value;\r\n    else\r\n        binaryReader = new BinaryReader(value);\r\n\r\n    binaryReader.isBigEndian = !binaryReader.readInt8();\r\n\r\n    wkbType = binaryReader.readUInt32();\r\n\r\n    options.hasSrid = (wkbType & 0x20000000) === 0x20000000;\r\n    options.isEwkb = (wkbType & 0x20000000) || (wkbType & 0x40000000) || (wkbType & 0x80000000);\r\n\r\n    if (options.hasSrid)\r\n        options.srid = binaryReader.readUInt32();\r\n\r\n    options.hasZ = false;\r\n    options.hasM = false;\r\n\r\n    if (!options.isEwkb && (!parentOptions || !parentOptions.isEwkb)) {\r\n        if (wkbType >= 1000 && wkbType < 2000) {\r\n            options.hasZ = true;\r\n            geometryType = wkbType - 1000;\r\n        }\r\n        else if (wkbType >= 2000 && wkbType < 3000) {\r\n            options.hasM = true;\r\n            geometryType = wkbType - 2000;\r\n        }\r\n        else if (wkbType >= 3000 && wkbType < 4000) {\r\n            options.hasZ = true;\r\n            options.hasM = true;\r\n            geometryType = wkbType - 3000;\r\n        }\r\n        else {\r\n            geometryType = wkbType;\r\n        }\r\n    }\r\n    else {\r\n        if (wkbType & 0x80000000)\r\n            options.hasZ = true;\r\n        if (wkbType & 0x40000000)\r\n            options.hasM = true;\r\n\r\n        geometryType = wkbType & 0xF;\r\n    }\r\n\r\n    switch (geometryType) {\r\n        case Types.wkb.Point:\r\n            return Point._parseWkb(binaryReader, options);\r\n        case Types.wkb.LineString:\r\n            return LineString._parseWkb(binaryReader, options);\r\n        case Types.wkb.Polygon:\r\n            return Polygon._parseWkb(binaryReader, options);\r\n        case Types.wkb.MultiPoint:\r\n            return MultiPoint._parseWkb(binaryReader, options);\r\n        case Types.wkb.MultiLineString:\r\n            return MultiLineString._parseWkb(binaryReader, options);\r\n        case Types.wkb.MultiPolygon:\r\n            return MultiPolygon._parseWkb(binaryReader, options);\r\n        case Types.wkb.GeometryCollection:\r\n            return GeometryCollection._parseWkb(binaryReader, options);\r\n        default:\r\n            throw new Error('GeometryType ' + geometryType + ' not supported');\r\n    }\r\n};\r\n\r\nGeometry.parseTwkb = function (value) {\r\n    var binaryReader,\r\n        options = {};\r\n\r\n    if (value instanceof BinaryReader)\r\n        binaryReader = value;\r\n    else\r\n        binaryReader = new BinaryReader(value);\r\n\r\n    var type = binaryReader.readUInt8();\r\n    var metadataHeader = binaryReader.readUInt8();\r\n\r\n    var geometryType = type & 0x0F;\r\n    options.precision = ZigZag.decode(type >> 4);\r\n    options.precisionFactor = Math.pow(10, options.precision);\r\n\r\n    options.hasBoundingBox = metadataHeader >> 0 & 1;\r\n    options.hasSizeAttribute = metadataHeader >> 1 & 1;\r\n    options.hasIdList = metadataHeader >> 2 & 1;\r\n    options.hasExtendedPrecision = metadataHeader >> 3 & 1;\r\n    options.isEmpty = metadataHeader >> 4 & 1;\r\n\r\n    if (options.hasExtendedPrecision) {\r\n        var extendedPrecision = binaryReader.readUInt8();\r\n        options.hasZ = (extendedPrecision & 0x01) === 0x01;\r\n        options.hasM = (extendedPrecision & 0x02) === 0x02;\r\n\r\n        options.zPrecision = ZigZag.decode((extendedPrecision & 0x1C) >> 2);\r\n        options.zPrecisionFactor = Math.pow(10, options.zPrecision);\r\n\r\n        options.mPrecision = ZigZag.decode((extendedPrecision & 0xE0) >> 5);\r\n        options.mPrecisionFactor = Math.pow(10, options.mPrecision);\r\n    }\r\n    else {\r\n        options.hasZ = false;\r\n        options.hasM = false;\r\n    }\r\n\r\n    if (options.hasSizeAttribute)\r\n        binaryReader.readVarInt();\r\n    if (options.hasBoundingBox) {\r\n        var dimensions = 2;\r\n\r\n        if (options.hasZ)\r\n            dimensions++;\r\n        if (options.hasM)\r\n            dimensions++;\r\n\r\n        for (var i = 0; i < dimensions; i++) {\r\n            binaryReader.readVarInt();\r\n            binaryReader.readVarInt();\r\n        }\r\n    }\r\n\r\n    switch (geometryType) {\r\n        case Types.wkb.Point:\r\n            return Point._parseTwkb(binaryReader, options);\r\n        case Types.wkb.LineString:\r\n            return LineString._parseTwkb(binaryReader, options);\r\n        case Types.wkb.Polygon:\r\n            return Polygon._parseTwkb(binaryReader, options);\r\n        case Types.wkb.MultiPoint:\r\n            return MultiPoint._parseTwkb(binaryReader, options);\r\n        case Types.wkb.MultiLineString:\r\n            return MultiLineString._parseTwkb(binaryReader, options);\r\n        case Types.wkb.MultiPolygon:\r\n            return MultiPolygon._parseTwkb(binaryReader, options);\r\n        case Types.wkb.GeometryCollection:\r\n            return GeometryCollection._parseTwkb(binaryReader, options);\r\n        default:\r\n            throw new Error('GeometryType ' + geometryType + ' not supported');\r\n    }\r\n};\r\n\r\nGeometry.parseGeoJSON = function (value) {\r\n    return Geometry._parseGeoJSON(value);\r\n};\r\n\r\nGeometry._parseGeoJSON = function (value, isSubGeometry) {\r\n    var geometry;\r\n\r\n    switch (value.type) {\r\n        case Types.geoJSON.Point:\r\n            geometry = Point._parseGeoJSON(value); break;\r\n        case Types.geoJSON.LineString:\r\n            geometry = LineString._parseGeoJSON(value); break;\r\n        case Types.geoJSON.Polygon:\r\n            geometry = Polygon._parseGeoJSON(value); break;\r\n        case Types.geoJSON.MultiPoint:\r\n            geometry = MultiPoint._parseGeoJSON(value); break;\r\n        case Types.geoJSON.MultiLineString:\r\n            geometry = MultiLineString._parseGeoJSON(value); break;\r\n        case Types.geoJSON.MultiPolygon:\r\n            geometry = MultiPolygon._parseGeoJSON(value); break;\r\n        case Types.geoJSON.GeometryCollection:\r\n            geometry = GeometryCollection._parseGeoJSON(value); break;\r\n        default:\r\n            throw new Error('GeometryType ' + value.type + ' not supported');\r\n    }\r\n\r\n    if (value.crs && value.crs.type && value.crs.type === 'name' && value.crs.properties && value.crs.properties.name) {\r\n        var crs = value.crs.properties.name;\r\n\r\n        if (crs.indexOf('EPSG:') === 0)\r\n            geometry.srid = parseInt(crs.substring(5));\r\n        else if (crs.indexOf('urn:ogc:def:crs:EPSG::') === 0)\r\n            geometry.srid = parseInt(crs.substring(22));\r\n        else\r\n            throw new Error('Unsupported crs: ' + crs);\r\n    }\r\n    else if (!isSubGeometry) {\r\n        geometry.srid = 4326;\r\n    }\r\n\r\n    return geometry;\r\n};\r\n\r\nGeometry.prototype.toEwkt = function () {\r\n    return 'SRID=' + this.srid + ';' + this.toWkt();\r\n};\r\n\r\nGeometry.prototype.toEwkb = function () {\r\n    var ewkb = new BinaryWriter(this._getWkbSize() + 4);\r\n    var wkb = this.toWkb();\r\n\r\n    ewkb.writeInt8(1);\r\n    ewkb.writeUInt32LE((wkb.slice(1, 5).readUInt32LE(0) | 0x20000000) >>> 0, true);\r\n    ewkb.writeUInt32LE(this.srid);\r\n\r\n    ewkb.writeBuffer(wkb.slice(5));\r\n\r\n    return ewkb.buffer;\r\n};\r\n\r\nGeometry.prototype._getWktType = function (wktType, isEmpty) {\r\n    var wkt = wktType;\r\n\r\n    if (this.hasZ && this.hasM)\r\n        wkt += ' ZM ';\r\n    else if (this.hasZ)\r\n        wkt += ' Z ';\r\n    else if (this.hasM)\r\n        wkt += ' M ';\r\n\r\n    if (isEmpty && !this.hasZ && !this.hasM)\r\n        wkt += ' ';\r\n\r\n    if (isEmpty)\r\n        wkt += 'EMPTY';\r\n\r\n    return wkt;\r\n};\r\n\r\nGeometry.prototype._getWktCoordinate = function (point) {\r\n    var coordinates = point.x + ' ' + point.y;\r\n\r\n    if (this.hasZ)\r\n        coordinates += ' ' + point.z;\r\n    if (this.hasM)\r\n        coordinates += ' ' + point.m;\r\n\r\n    return coordinates;\r\n};\r\n\r\nGeometry.prototype._writeWkbType = function (wkb, geometryType, parentOptions) {\r\n    var dimensionType = 0;\r\n\r\n    if (typeof this.srid === 'undefined' && (!parentOptions || typeof parentOptions.srid === 'undefined')) {\r\n        if (this.hasZ && this.hasM)\r\n            dimensionType += 3000;\r\n        else if (this.hasZ)\r\n            dimensionType += 1000;\r\n        else if (this.hasM)\r\n            dimensionType += 2000;\r\n    }\r\n    else {\r\n        if (this.hasZ)\r\n            dimensionType |= 0x80000000;\r\n        if (this.hasM)\r\n            dimensionType |= 0x40000000;\r\n    }\r\n\r\n    wkb.writeUInt32LE((dimensionType + geometryType) >>> 0, true);\r\n};\r\n\r\nGeometry.getTwkbPrecision = function (xyPrecision, zPrecision, mPrecision) {\r\n    return {\r\n        xy: xyPrecision,\r\n        z: zPrecision,\r\n        m: mPrecision,\r\n        xyFactor: Math.pow(10, xyPrecision),\r\n        zFactor: Math.pow(10, zPrecision),\r\n        mFactor: Math.pow(10, mPrecision)\r\n    };\r\n};\r\n\r\nGeometry.prototype._writeTwkbHeader = function (twkb, geometryType, precision, isEmpty) {\r\n    var type = (ZigZag.encode(precision.xy) << 4) + geometryType;\r\n    var metadataHeader = (this.hasZ || this.hasM) << 3;\r\n    metadataHeader += isEmpty << 4;\r\n\r\n    twkb.writeUInt8(type);\r\n    twkb.writeUInt8(metadataHeader);\r\n\r\n    if (this.hasZ || this.hasM) {\r\n        var extendedPrecision = 0;\r\n        if (this.hasZ)\r\n            extendedPrecision |= 0x1;\r\n        if (this.hasM)\r\n            extendedPrecision |= 0x2;\r\n\r\n        twkb.writeUInt8(extendedPrecision);\r\n    }\r\n};\r\n\r\nGeometry.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = {};\r\n\r\n    if (this.srid) {\r\n        if (options) {\r\n            if (options.shortCrs) {\r\n                geoJSON.crs = {\r\n                    type: 'name',\r\n                    properties: {\r\n                        name: 'EPSG:' + this.srid\r\n                    }\r\n                };\r\n            }\r\n            else if (options.longCrs) {\r\n                geoJSON.crs = {\r\n                    type: 'name',\r\n                    properties: {\r\n                        name: 'urn:ogc:def:crs:EPSG::' + this.srid\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = GeometryCollection;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction GeometryCollection(geometries, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.geometries = geometries || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.geometries.length > 0) {\r\n        this.hasZ = this.geometries[0].hasZ;\r\n        this.hasM = this.geometries[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(GeometryCollection, Geometry);\r\n\r\nGeometryCollection.Z = function (geometries, srid) {\r\n    var geometryCollection = new GeometryCollection(geometries, srid);\r\n    geometryCollection.hasZ = true;\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection.M = function (geometries, srid) {\r\n    var geometryCollection = new GeometryCollection(geometries, srid);\r\n    geometryCollection.hasM = true;\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection.ZM = function (geometries, srid) {\r\n    var geometryCollection = new GeometryCollection(geometries, srid);\r\n    geometryCollection.hasZ = true;\r\n    geometryCollection.hasM = true;\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseWkt = function (value, options) {\r\n    var geometryCollection = new GeometryCollection();\r\n    geometryCollection.srid = options.srid;\r\n    geometryCollection.hasZ = options.hasZ;\r\n    geometryCollection.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return geometryCollection;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        geometryCollection.geometries.push(Geometry.parse(value));\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseWkb = function (value, options) {\r\n    var geometryCollection = new GeometryCollection();\r\n    geometryCollection.srid = options.srid;\r\n    geometryCollection.hasZ = options.hasZ;\r\n    geometryCollection.hasM = options.hasM;\r\n\r\n    var geometryCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < geometryCount; i++)\r\n        geometryCollection.geometries.push(Geometry.parse(value, options));\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseTwkb = function (value, options) {\r\n    var geometryCollection = new GeometryCollection();\r\n    geometryCollection.hasZ = options.hasZ;\r\n    geometryCollection.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return geometryCollection;\r\n\r\n    var geometryCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < geometryCount; i++)\r\n        geometryCollection.geometries.push(Geometry.parseTwkb(value));\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection._parseGeoJSON = function (value) {\r\n    var geometryCollection = new GeometryCollection();\r\n\r\n    for (var i = 0; i < value.geometries.length; i++)\r\n        geometryCollection.geometries.push(Geometry._parseGeoJSON(value.geometries[i], true));\r\n\r\n    if (geometryCollection.geometries.length > 0)\r\n        geometryCollection.hasZ = geometryCollection.geometries[0].hasZ;\r\n\r\n    return geometryCollection;\r\n};\r\n\r\nGeometryCollection.prototype.toWkt = function () {\r\n    if (this.geometries.length === 0)\r\n        return this._getWktType(Types.wkt.GeometryCollection, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.GeometryCollection, false) + '(';\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        wkt += this.geometries[i].toWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nGeometryCollection.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.GeometryCollection);\r\n    wkb.writeUInt32LE(this.geometries.length);\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        wkb.writeBuffer(this.geometries[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nGeometryCollection.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.geometries.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.GeometryCollection, precision, isEmpty);\r\n\r\n    if (this.geometries.length > 0) {\r\n        twkb.writeVarInt(this.geometries.length);\r\n\r\n        for (var i = 0; i < this.geometries.length; i++)\r\n            twkb.writeBuffer(this.geometries[i].toTwkb());\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nGeometryCollection.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        size += this.geometries[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nGeometryCollection.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.GeometryCollection;\r\n    geoJSON.geometries = [];\r\n\r\n    for (var i = 0; i < this.geometries.length; i++)\r\n        geoJSON.geometries.push(this.geometries[i].toGeoJSON());\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = LineString;\r\n\r\nvar util = require('util');\r\n\r\nvar Geometry = require('./geometry');\r\nvar Types = require('./types');\r\nvar Point = require('./point');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction LineString(points, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.points = points || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.points.length > 0) {\r\n        this.hasZ = this.points[0].hasZ;\r\n        this.hasM = this.points[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(LineString, Geometry);\r\n\r\nLineString.Z = function (points, srid) {\r\n    var lineString = new LineString(points, srid);\r\n    lineString.hasZ = true;\r\n    return lineString;\r\n};\r\n\r\nLineString.M = function (points, srid) {\r\n    var lineString = new LineString(points, srid);\r\n    lineString.hasM = true;\r\n    return lineString;\r\n};\r\n\r\nLineString.ZM = function (points, srid) {\r\n    var lineString = new LineString(points, srid);\r\n    lineString.hasZ = true;\r\n    lineString.hasM = true;\r\n    return lineString;\r\n};\r\n\r\nLineString._parseWkt = function (value, options) {\r\n    var lineString = new LineString();\r\n    lineString.srid = options.srid;\r\n    lineString.hasZ = options.hasZ;\r\n    lineString.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return lineString;\r\n\r\n    value.expectGroupStart();\r\n    lineString.points.push.apply(lineString.points, value.matchCoordinates(options));\r\n    value.expectGroupEnd();\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString._parseWkb = function (value, options) {\r\n    var lineString = new LineString();\r\n    lineString.srid = options.srid;\r\n    lineString.hasZ = options.hasZ;\r\n    lineString.hasM = options.hasM;\r\n\r\n    var pointCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        lineString.points.push(Point._readWkbPoint(value, options));\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString._parseTwkb = function (value, options) {\r\n    var lineString = new LineString();\r\n    lineString.hasZ = options.hasZ;\r\n    lineString.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return lineString;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var pointCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString._parseGeoJSON = function (value) {\r\n    var lineString = new LineString();\r\n\r\n    if (value.coordinates.length > 0)\r\n        lineString.hasZ = value.coordinates[0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        lineString.points.push(Point._readGeoJSONPoint(value.coordinates[i]));\r\n\r\n    return lineString;\r\n};\r\n\r\nLineString.prototype.toWkt = function () {\r\n    if (this.points.length === 0)\r\n        return this._getWktType(Types.wkt.LineString, true);\r\n\r\n    return this._getWktType(Types.wkt.LineString, false) + this._toInnerWkt();\r\n};\r\n\r\nLineString.prototype._toInnerWkt = function () {\r\n    var innerWkt = '(';\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        innerWkt += this._getWktCoordinate(this.points[i]) + ',';\r\n\r\n    innerWkt = innerWkt.slice(0, -1);\r\n    innerWkt += ')';\r\n\r\n    return innerWkt;\r\n};\r\n\r\nLineString.prototype.toWkb = function (parentOptions) {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.LineString, parentOptions);\r\n    wkb.writeUInt32LE(this.points.length);\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        this.points[i]._writeWkbPoint(wkb);\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nLineString.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.points.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.LineString, precision, isEmpty);\r\n\r\n    if (this.points.length > 0) {\r\n        twkb.writeVarInt(this.points.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.points.length; i++)\r\n            this.points[i]._writeTwkbPoint(twkb, precision, previousPoint);\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nLineString.prototype._getWkbSize = function () {\r\n    var coordinateSize = 16;\r\n\r\n    if (this.hasZ)\r\n        coordinateSize += 8;\r\n    if (this.hasM)\r\n        coordinateSize += 8;\r\n\r\n    return 1 + 4 + 4 + (this.points.length * coordinateSize);\r\n};\r\n\r\nLineString.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.LineString;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.points.length; i++) {\r\n        if (this.hasZ)\r\n            geoJSON.coordinates.push([this.points[i].x, this.points[i].y, this.points[i].z]);\r\n        else\r\n            geoJSON.coordinates.push([this.points[i].x, this.points[i].y]);\r\n    }\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = MultiLineString;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar LineString = require('./linestring');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiLineString(lineStrings, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.lineStrings = lineStrings || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        this.hasZ = this.lineStrings[0].hasZ;\r\n        this.hasM = this.lineStrings[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiLineString, Geometry);\r\n\r\nMultiLineString.Z = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.M = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.ZM = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkt = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiLineString;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n        multiLineString.lineStrings.push(new LineString(value.matchCoordinates(options)));\r\n        value.expectGroupEnd();\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    var lineStringCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < lineStringCount; i++)\r\n        multiLineString.lineStrings.push(Geometry.parse(value, options));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseTwkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiLineString;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var lineStringCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < lineStringCount; i++) {\r\n        var lineString = new LineString();\r\n        lineString.hasZ = options.hasZ;\r\n        lineString.hasM = options.hasM;\r\n\r\n        var pointCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < pointCount; j++)\r\n            lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        multiLineString.lineStrings.push(lineString);\r\n    }\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseGeoJSON = function (value) {\r\n    var multiLineString = new MultiLineString();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0)\r\n        multiLineString.hasZ = value.coordinates[0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiLineString.lineStrings.push(LineString._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.prototype.toWkt = function () {\r\n    if (this.lineStrings.length === 0)\r\n        return this._getWktType(Types.wkt.MultiLineString, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiLineString, false) + '(';\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkt += this.lineStrings[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiLineString.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiLineString);\r\n    wkb.writeUInt32LE(this.lineStrings.length);\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkb.writeBuffer(this.lineStrings[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.lineStrings.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiLineString, precision, isEmpty);\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        twkb.writeVarInt(this.lineStrings.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.lineStrings.length; i++) {\r\n            twkb.writeVarInt(this.lineStrings[i].points.length);\r\n\r\n            for (var j = 0; j < this.lineStrings[i].points.length; j++)\r\n                this.lineStrings[i].points[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        size += this.lineStrings[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiLineString.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiLineString;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        geoJSON.coordinates.push(this.lineStrings[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = MultiPoint;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiPoint(points, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.points = points || [];\r\n\tthis.srid = srid;\r\n\t\r\n    if (this.points.length > 0) {\r\n        this.hasZ = this.points[0].hasZ;\r\n        this.hasM = this.points[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiPoint, Geometry);\r\n\r\nMultiPoint.Z = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasZ = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.M = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasM = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.ZM = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasZ = true;\r\n    multiPoint.hasM = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseWkt = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.srid = options.srid;\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiPoint;\r\n\r\n    value.expectGroupStart();\r\n    multiPoint.points.push.apply(multiPoint.points, value.matchCoordinates(options));\r\n    value.expectGroupEnd();\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseWkb = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.srid = options.srid;\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    var pointCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        multiPoint.points.push(Geometry.parse(value, options));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseTwkb = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiPoint;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var pointCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        multiPoint.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseGeoJSON = function (value) {\r\n    var multiPoint = new MultiPoint();\r\n\r\n    if (value.coordinates.length > 0)\r\n        multiPoint.hasZ = value.coordinates[0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiPoint.points.push(Point._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.prototype.toWkt = function () {\r\n    if (this.points.length === 0)\r\n        return this._getWktType(Types.wkt.MultiPoint, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiPoint, false) + '(';\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        wkt += this._getWktCoordinate(this.points[i]) + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiPoint.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiPoint);\r\n    wkb.writeUInt32LE(this.points.length);\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        wkb.writeBuffer(this.points[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiPoint.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.points.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiPoint, precision, isEmpty);\r\n\r\n    if (this.points.length > 0) {\r\n        twkb.writeVarInt(this.points.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.points.length; i++)\r\n            this.points[i]._writeTwkbPoint(twkb, precision, previousPoint);\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiPoint.prototype._getWkbSize = function () {\r\n    var coordinateSize = 16;\r\n\r\n    if (this.hasZ)\r\n        coordinateSize += 8;\r\n    if (this.hasM)\r\n        coordinateSize += 8;\r\n\r\n    coordinateSize += 5;\r\n\r\n    return 1 + 4 + 4 + (this.points.length * coordinateSize);\r\n};\r\n\r\nMultiPoint.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiPoint;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        geoJSON.coordinates.push(this.points[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = MultiPolygon;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar Polygon = require('./polygon');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiPolygon(polygons, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.polygons = polygons || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.polygons.length > 0) {\r\n        this.hasZ = this.polygons[0].hasZ;\r\n        this.hasM = this.polygons[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiPolygon, Geometry);\r\n\r\nMultiPolygon.Z = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.M = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.ZM = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkt = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiPolygon;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n\r\n        var exteriorRing = [];\r\n        var interiorRings = [];\r\n\r\n        value.expectGroupStart();\r\n        exteriorRing.push.apply(exteriorRing, value.matchCoordinates(options));\r\n        value.expectGroupEnd();\r\n\r\n        while (value.isMatch([','])) {\r\n            value.expectGroupStart();\r\n            interiorRings.push(value.matchCoordinates(options));\r\n            value.expectGroupEnd();\r\n        }\r\n\r\n        multiPolygon.polygons.push(new Polygon(exteriorRing, interiorRings));\r\n\r\n        value.expectGroupEnd();\r\n\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    var polygonCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < polygonCount; i++)\r\n        multiPolygon.polygons.push(Geometry.parse(value, options));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseTwkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiPolygon;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var polygonCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < polygonCount; i++) {\r\n        var polygon = new Polygon();\r\n        polygon.hasZ = options.hasZ;\r\n        polygon.hasM = options.hasM;\r\n\r\n        var ringCount = value.readVarInt();\r\n        var exteriorRingCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < exteriorRingCount; j++)\r\n            polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        for (j = 1; j < ringCount; j++) {\r\n            var interiorRing = [];\r\n\r\n            var interiorRingCount = value.readVarInt();\r\n\r\n            for (var k = 0; k < interiorRingCount; k++)\r\n                interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n            polygon.interiorRings.push(interiorRing);\r\n        }\r\n\r\n        multiPolygon.polygons.push(polygon);\r\n    }\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseGeoJSON = function (value) {\r\n    var multiPolygon = new MultiPolygon();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0 && value.coordinates[0][0].length > 0)\r\n        multiPolygon.hasZ = value.coordinates[0][0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiPolygon.polygons.push(Polygon._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.prototype.toWkt = function () {\r\n    if (this.polygons.length === 0)\r\n        return this._getWktType(Types.wkt.MultiPolygon, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiPolygon, false) + '(';\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkt += this.polygons[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiPolygon.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiPolygon);\r\n    wkb.writeUInt32LE(this.polygons.length);\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkb.writeBuffer(this.polygons[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.polygons.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiPolygon, precision, isEmpty);\r\n\r\n    if (this.polygons.length > 0) {\r\n        twkb.writeVarInt(this.polygons.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.polygons.length; i++) {\r\n            twkb.writeVarInt(1 + this.polygons[i].interiorRings.length);\r\n\r\n            twkb.writeVarInt(this.polygons[i].exteriorRing.length);\r\n\r\n            for (var j = 0; j < this.polygons[i].exteriorRing.length; j++)\r\n                this.polygons[i].exteriorRing[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n\r\n            for (j = 0; j < this.polygons[i].interiorRings.length; j++) {\r\n                twkb.writeVarInt(this.polygons[i].interiorRings[j].length);\r\n\r\n                for (var k = 0; k < this.polygons[i].interiorRings[j].length; k++)\r\n                    this.polygons[i].interiorRings[j][k]._writeTwkbPoint(twkb, precision, previousPoint);\r\n            }\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        size += this.polygons[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiPolygon.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiPolygon;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        geoJSON.coordinates.push(this.polygons[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = Point;\r\n\r\nvar util = require('util');\r\n\r\nvar Geometry = require('./geometry');\r\nvar Types = require('./types');\r\nvar BinaryWriter = require('./binarywriter');\r\nvar ZigZag = require('./zigzag.js');\r\n\r\nfunction Point(x, y, z, m, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.m = m;\r\n\tthis.srid = srid;\r\n\r\n    this.hasZ = typeof this.z !== 'undefined';\r\n    this.hasM = typeof this.m !== 'undefined';\r\n}\r\n\r\nutil.inherits(Point, Geometry);\r\n\r\nPoint.Z = function (x, y, z, srid) {\r\n    var point = new Point(x, y, z, undefined, srid);\r\n    point.hasZ = true;\r\n    return point;\r\n};\r\n\r\nPoint.M = function (x, y, m, srid) {\r\n    var point = new Point(x, y, undefined, m, srid);\r\n    point.hasM = true;\r\n    return point;\r\n};\r\n\r\nPoint.ZM = function (x, y, z, m, srid) {\r\n    var point = new Point(x, y, z, m, srid);\r\n    point.hasZ = true;\r\n    point.hasM = true;\r\n    return point;\r\n};\r\n\r\nPoint._parseWkt = function (value, options) {\r\n    var point = new Point();\r\n    point.srid = options.srid;\r\n    point.hasZ = options.hasZ;\r\n    point.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return point;\r\n\r\n    value.expectGroupStart();\r\n\r\n    var coordinate = value.matchCoordinate(options);\r\n\r\n    point.x = coordinate.x;\r\n    point.y = coordinate.y;\r\n    point.z = coordinate.z;\r\n    point.m = coordinate.m;\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return point;\r\n};\r\n\r\nPoint._parseWkb = function (value, options) {\r\n    var point = Point._readWkbPoint(value, options);\r\n    point.srid = options.srid;\r\n    return point;\r\n};\r\n\r\nPoint._readWkbPoint = function (value, options) {\r\n    return new Point(value.readDouble(), value.readDouble(),\r\n        options.hasZ ? value.readDouble() : undefined,\r\n        options.hasM ? value.readDouble() : undefined);\r\n};\r\n\r\nPoint._parseTwkb = function (value, options) {\r\n    var point = new Point();\r\n    point.hasZ = options.hasZ;\r\n    point.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return point;\r\n\r\n    point.x = ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n    point.y = ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n    point.z = options.hasZ ? ZigZag.decode(value.readVarInt()) / options.zPrecisionFactor : undefined;\r\n    point.m = options.hasM ? ZigZag.decode(value.readVarInt()) / options.mPrecisionFactor : undefined;\r\n\r\n    return point;\r\n};\r\n\r\nPoint._readTwkbPoint = function (value, options, previousPoint) {\r\n    previousPoint.x += ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n    previousPoint.y += ZigZag.decode(value.readVarInt()) / options.precisionFactor;\r\n\r\n    if (options.hasZ)\r\n        previousPoint.z += ZigZag.decode(value.readVarInt()) / options.zPrecisionFactor;\r\n    if (options.hasM)\r\n        previousPoint.m += ZigZag.decode(value.readVarInt()) / options.mPrecisionFactor;\r\n\r\n    return new Point(previousPoint.x, previousPoint.y, previousPoint.z, previousPoint.m);\r\n};\r\n\r\nPoint._parseGeoJSON = function (value) {\r\n    return Point._readGeoJSONPoint(value.coordinates);\r\n};\r\n\r\nPoint._readGeoJSONPoint = function (coordinates) {\r\n    if (coordinates.length === 0)\r\n        return new Point();\r\n\r\n    if (coordinates.length > 2)\r\n        return new Point(coordinates[0], coordinates[1], coordinates[2]);\r\n\r\n    return new Point(coordinates[0], coordinates[1]);\r\n};\r\n\r\nPoint.prototype.toWkt = function () {\r\n    if (typeof this.x === 'undefined' && typeof this.y === 'undefined' &&\r\n        typeof this.z === 'undefined' && typeof this.m === 'undefined')\r\n        return this._getWktType(Types.wkt.Point, true);\r\n\r\n    return this._getWktType(Types.wkt.Point, false) + '(' + this._getWktCoordinate(this) + ')';\r\n};\r\n\r\nPoint.prototype.toWkb = function (parentOptions) {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n    this._writeWkbType(wkb, Types.wkb.Point, parentOptions);\r\n\r\n    if (typeof this.x === 'undefined' && typeof this.y === 'undefined') {\r\n        wkb.writeDoubleLE(NaN);\r\n        wkb.writeDoubleLE(NaN);\r\n\r\n        if (this.hasZ)\r\n            wkb.writeDoubleLE(NaN);\r\n        if (this.hasM)\r\n            wkb.writeDoubleLE(NaN);\r\n    }\r\n    else {\r\n        this._writeWkbPoint(wkb);\r\n    }\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nPoint.prototype._writeWkbPoint = function (wkb) {\r\n    wkb.writeDoubleLE(this.x);\r\n    wkb.writeDoubleLE(this.y);\r\n\r\n    if (this.hasZ)\r\n        wkb.writeDoubleLE(this.z);\r\n    if (this.hasM)\r\n        wkb.writeDoubleLE(this.m);\r\n};\r\n\r\nPoint.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = typeof this.x === 'undefined' && typeof this.y === 'undefined';\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.Point, precision, isEmpty);\r\n\r\n    if (!isEmpty)\r\n        this._writeTwkbPoint(twkb, precision, new Point(0, 0, 0, 0));\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nPoint.prototype._writeTwkbPoint = function (twkb, precision, previousPoint) {\r\n    var x = this.x * precision.xyFactor;\r\n    var y = this.y * precision.xyFactor;\r\n    var z = this.z * precision.zFactor;\r\n    var m = this.m * precision.mFactor;\r\n\r\n    twkb.writeVarInt(ZigZag.encode(x - previousPoint.x));\r\n    twkb.writeVarInt(ZigZag.encode(y - previousPoint.y));\r\n    if (this.hasZ)\r\n        twkb.writeVarInt(ZigZag.encode(z - previousPoint.z));\r\n    if (this.hasM)\r\n        twkb.writeVarInt(ZigZag.encode(m - previousPoint.m));\r\n\r\n    previousPoint.x = x;\r\n    previousPoint.y = y;\r\n    previousPoint.z = z;\r\n    previousPoint.m = m;\r\n};\r\n\r\nPoint.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 8 + 8;\r\n\r\n    if (this.hasZ)\r\n        size += 8;\r\n    if (this.hasM)\r\n        size += 8;\r\n\r\n    return size;\r\n};\r\n\r\nPoint.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.Point;\r\n\r\n    if (typeof this.x === 'undefined' && typeof this.y === 'undefined')\r\n        geoJSON.coordinates = [];\r\n    else if (typeof this.z !== 'undefined')\r\n        geoJSON.coordinates = [this.x, this.y, this.z];\r\n    else\r\n        geoJSON.coordinates = [this.x, this.y];\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = Polygon;\r\n\r\nvar util = require('util');\r\n\r\nvar Geometry = require('./geometry');\r\nvar Types = require('./types');\r\nvar Point = require('./point');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction Polygon(exteriorRing, interiorRings, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.exteriorRing = exteriorRing || [];\r\n    this.interiorRings = interiorRings || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        this.hasZ = this.exteriorRing[0].hasZ;\r\n        this.hasM = this.exteriorRing[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(Polygon, Geometry);\r\n\r\nPolygon.Z = function (exteriorRing, interiorRings, srid) {\r\n    var polygon = new Polygon(exteriorRing, interiorRings, srid);\r\n    polygon.hasZ = true;\r\n    return polygon;\r\n};\r\n\r\nPolygon.M = function (exteriorRing, interiorRings, srid) {\r\n    var polygon = new Polygon(exteriorRing, interiorRings, srid);\r\n    polygon.hasM = true;\r\n    return polygon;\r\n};\r\n\r\nPolygon.ZM = function (exteriorRing, interiorRings, srid) {\r\n    var polygon = new Polygon(exteriorRing, interiorRings, srid);\r\n    polygon.hasZ = true;\r\n    polygon.hasM = true;\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseWkt = function (value, options) {\r\n    var polygon = new Polygon();\r\n    polygon.srid = options.srid;\r\n    polygon.hasZ = options.hasZ;\r\n    polygon.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return polygon;\r\n\r\n    value.expectGroupStart();\r\n\r\n    value.expectGroupStart();\r\n    polygon.exteriorRing.push.apply(polygon.exteriorRing, value.matchCoordinates(options));\r\n    value.expectGroupEnd();\r\n\r\n    while (value.isMatch([','])) {\r\n        value.expectGroupStart();\r\n        polygon.interiorRings.push(value.matchCoordinates(options));\r\n        value.expectGroupEnd();\r\n    }\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseWkb = function (value, options) {\r\n    var polygon = new Polygon();\r\n    polygon.srid = options.srid;\r\n    polygon.hasZ = options.hasZ;\r\n    polygon.hasM = options.hasM;\r\n\r\n    var ringCount = value.readUInt32();\r\n\r\n    if (ringCount > 0) {\r\n        var exteriorRingCount = value.readUInt32();\r\n\r\n        for (var i = 0; i < exteriorRingCount; i++)\r\n            polygon.exteriorRing.push(Point._readWkbPoint(value, options));\r\n\r\n        for (i = 1; i < ringCount; i++) {\r\n            var interiorRing = [];\r\n\r\n            var interiorRingCount = value.readUInt32();\r\n\r\n            for (var j = 0; j < interiorRingCount; j++)\r\n                interiorRing.push(Point._readWkbPoint(value, options));\r\n\r\n            polygon.interiorRings.push(interiorRing);\r\n        }\r\n    }\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseTwkb = function (value, options) {\r\n    var polygon = new Polygon();\r\n    polygon.hasZ = options.hasZ;\r\n    polygon.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return polygon;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var ringCount = value.readVarInt();\r\n    var exteriorRingCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < exteriorRingCount; i++)\r\n        polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n    for (i = 1; i < ringCount; i++) {\r\n        var interiorRing = [];\r\n\r\n        var interiorRingCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < interiorRingCount; j++)\r\n            interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        polygon.interiorRings.push(interiorRing);\r\n    }\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon._parseGeoJSON = function (value) {\r\n    var polygon = new Polygon();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0)\r\n        polygon.hasZ = value.coordinates[0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++) {\r\n        if (i > 0)\r\n            polygon.interiorRings.push([]);\r\n\r\n        for (var j = 0; j  < value.coordinates[i].length; j++) {\r\n            if (i === 0)\r\n                polygon.exteriorRing.push(Point._readGeoJSONPoint(value.coordinates[i][j]));\r\n            else\r\n                polygon.interiorRings[i - 1].push(Point._readGeoJSONPoint(value.coordinates[i][j]));\r\n        }\r\n    }\r\n\r\n    return polygon;\r\n};\r\n\r\nPolygon.prototype.toWkt = function () {\r\n    if (this.exteriorRing.length === 0)\r\n        return this._getWktType(Types.wkt.Polygon, true);\r\n\r\n    return this._getWktType(Types.wkt.Polygon, false) + this._toInnerWkt();\r\n};\r\n\r\nPolygon.prototype._toInnerWkt = function () {\r\n    var innerWkt = '((';\r\n\r\n    for (var i = 0; i < this.exteriorRing.length; i++)\r\n        innerWkt += this._getWktCoordinate(this.exteriorRing[i]) + ',';\r\n\r\n    innerWkt = innerWkt.slice(0, -1);\r\n    innerWkt += ')';\r\n\r\n    for (i = 0; i < this.interiorRings.length; i++) {\r\n        innerWkt += ',(';\r\n\r\n        for (var j = 0; j < this.interiorRings[i].length; j++) {\r\n            innerWkt += this._getWktCoordinate(this.interiorRings[i][j]) + ',';\r\n        }\r\n\r\n        innerWkt = innerWkt.slice(0, -1);\r\n        innerWkt += ')';\r\n    }\r\n\r\n    innerWkt += ')';\r\n\r\n    return innerWkt;\r\n};\r\n\r\nPolygon.prototype.toWkb = function (parentOptions) {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.Polygon, parentOptions);\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        wkb.writeUInt32LE(1 + this.interiorRings.length);\r\n        wkb.writeUInt32LE(this.exteriorRing.length);\r\n    }\r\n    else {\r\n        wkb.writeUInt32LE(0);\r\n    }\r\n\r\n    for (var i = 0; i < this.exteriorRing.length; i++)\r\n        this.exteriorRing[i]._writeWkbPoint(wkb);\r\n\r\n    for (i = 0; i < this.interiorRings.length; i++) {\r\n        wkb.writeUInt32LE(this.interiorRings[i].length);\r\n\r\n        for (var j = 0; j < this.interiorRings[i].length; j++)\r\n            this.interiorRings[i][j]._writeWkbPoint(wkb);\r\n    }\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nPolygon.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.exteriorRing.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.Polygon, precision, isEmpty);\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        twkb.writeVarInt(1 + this.interiorRings.length);\r\n\r\n        twkb.writeVarInt(this.exteriorRing.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.exteriorRing.length; i++)\r\n            this.exteriorRing[i]._writeTwkbPoint(twkb, precision, previousPoint);\r\n\r\n        for (i = 0; i < this.interiorRings.length; i++) {\r\n            twkb.writeVarInt(this.interiorRings[i].length);\r\n\r\n            for (var j = 0; j < this.interiorRings[i].length; j++)\r\n                this.interiorRings[i][j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nPolygon.prototype._getWkbSize = function () {\r\n    var coordinateSize = 16;\r\n\r\n    if (this.hasZ)\r\n        coordinateSize += 8;\r\n    if (this.hasM)\r\n        coordinateSize += 8;\r\n\r\n    var size = 1 + 4 + 4;\r\n\r\n    if (this.exteriorRing.length > 0)\r\n        size += 4 + (this.exteriorRing.length * coordinateSize);\r\n\r\n    for (var i = 0; i < this.interiorRings.length; i++)\r\n        size += 4 + (this.interiorRings[i].length * coordinateSize);\r\n\r\n    return size;\r\n};\r\n\r\nPolygon.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.Polygon;\r\n    geoJSON.coordinates = [];\r\n\r\n    if (this.exteriorRing.length > 0) {\r\n        var exteriorRing = [];\r\n\r\n        for (var i = 0; i < this.exteriorRing.length; i++) {\r\n            if (this.hasZ)\r\n                exteriorRing.push([this.exteriorRing[i].x, this.exteriorRing[i].y, this.exteriorRing[i].z]);\r\n            else\r\n                exteriorRing.push([this.exteriorRing[i].x, this.exteriorRing[i].y]);\r\n        }\r\n\r\n        geoJSON.coordinates.push(exteriorRing);\r\n    }\r\n\r\n    for (var j = 0; j < this.interiorRings.length; j++) {\r\n        var interiorRing = [];\r\n\r\n        for (var k = 0; k < this.interiorRings[j].length; k++) {\r\n            if (this.hasZ)\r\n                interiorRing.push([this.interiorRings[j][k].x, this.interiorRings[j][k].y, this.interiorRings[j][k].z]);\r\n            else\r\n                interiorRing.push([this.interiorRings[j][k].x, this.interiorRings[j][k].y]);\r\n        }\r\n\r\n        geoJSON.coordinates.push(interiorRing);\r\n    }\r\n\r\n    return geoJSON;\r\n};\r\n","module.exports = {\r\n    wkt: {\r\n        Point: 'POINT',\r\n        LineString: 'LINESTRING',\r\n        Polygon: 'POLYGON',\r\n        MultiPoint: 'MULTIPOINT',\r\n        MultiLineString: 'MULTILINESTRING',\r\n        MultiPolygon: 'MULTIPOLYGON',\r\n        GeometryCollection: 'GEOMETRYCOLLECTION'\r\n    },\r\n    wkb: {\r\n        Point: 1,\r\n        LineString: 2,\r\n        Polygon: 3,\r\n        MultiPoint: 4,\r\n        MultiLineString: 5,\r\n        MultiPolygon: 6,\r\n        GeometryCollection: 7\r\n    },\r\n    geoJSON: {\r\n        Point: 'Point',\r\n        LineString: 'LineString',\r\n        Polygon: 'Polygon',\r\n        MultiPoint: 'MultiPoint',\r\n        MultiLineString: 'MultiLineString',\r\n        MultiPolygon: 'MultiPolygon',\r\n        GeometryCollection: 'GeometryCollection'\r\n    }\r\n};\r\n","module.exports = WktParser;\r\n\r\nvar Types = require('./types');\r\nvar Point = require('./point');\r\n\r\nfunction WktParser(value) {\r\n    this.value = value;\r\n    this.position = 0;\r\n}\r\n\r\nWktParser.prototype.match = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\r\n            this.position += tokens[i].length;\r\n            return tokens[i];\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nWktParser.prototype.matchRegex = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        var match = this.value.substring(this.position).match(tokens[i]);\r\n\r\n        if (match) {\r\n            this.position += match[0].length;\r\n            return match;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nWktParser.prototype.isMatch = function (tokens) {\r\n    this.skipWhitespaces();\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (this.value.substring(this.position).indexOf(tokens[i]) === 0) {\r\n            this.position += tokens[i].length;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nWktParser.prototype.matchType = function () {\r\n    var geometryType = this.match([Types.wkt.Point, Types.wkt.LineString, Types.wkt.Polygon, Types.wkt.MultiPoint,\r\n    Types.wkt.MultiLineString, Types.wkt.MultiPolygon, Types.wkt.GeometryCollection]);\r\n\r\n    if (!geometryType)\r\n        throw new Error('Expected geometry type');\r\n\r\n    return geometryType;\r\n};\r\n\r\nWktParser.prototype.matchDimension = function () {\r\n    var dimension = this.match(['ZM', 'Z', 'M']);\r\n\r\n    switch (dimension) {\r\n        case 'ZM': return { hasZ: true, hasM: true };\r\n        case 'Z': return { hasZ: true, hasM: false };\r\n        case 'M': return { hasZ: false, hasM: true };\r\n        default: return { hasZ: false, hasM: false };\r\n    }\r\n};\r\n\r\nWktParser.prototype.expectGroupStart = function () {\r\n    if (!this.isMatch(['(']))\r\n        throw new Error('Expected group start');\r\n};\r\n\r\nWktParser.prototype.expectGroupEnd = function () {\r\n    if (!this.isMatch([')']))\r\n        throw new Error('Expected group end');\r\n};\r\n\r\nWktParser.prototype.matchCoordinate = function (options) {\r\n    var match;\r\n\r\n    if (options.hasZ && options.hasM)\r\n        match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);\r\n    else if (options.hasZ || options.hasM)\r\n        match = this.matchRegex([/^(\\S*)\\s+(\\S*)\\s+([^\\s,)]*)/]);\r\n    else\r\n        match = this.matchRegex([/^(\\S*)\\s+([^\\s,)]*)/]);\r\n\r\n    if (!match)\r\n        throw new Error('Expected coordinates');\r\n\r\n    if (options.hasZ && options.hasM)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]), parseFloat(match[4]));\r\n    else if (options.hasZ)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), parseFloat(match[3]));\r\n    else if (options.hasM)\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]), undefined, parseFloat(match[3]));\r\n    else\r\n        return new Point(parseFloat(match[1]), parseFloat(match[2]));\r\n};\r\n\r\nWktParser.prototype.matchCoordinates = function (options) {\r\n    var coordinates = [];\r\n\r\n    do {\r\n        var startsWithBracket = this.isMatch(['(']);\r\n\r\n        coordinates.push(this.matchCoordinate(options));\r\n\r\n        if (startsWithBracket)\r\n            this.expectGroupEnd();\r\n    } while (this.isMatch([',']));\r\n\r\n    return coordinates;\r\n};\r\n\r\nWktParser.prototype.skipWhitespaces = function () {\r\n    while (this.position < this.value.length && this.value[this.position] === ' ')\r\n        this.position++;\r\n};\r\n","exports.Types = require('./types');\r\nexports.Geometry = require('./geometry');\r\nexports.Point = require('./point');\r\nexports.LineString = require('./linestring');\r\nexports.Polygon = require('./polygon');\r\nexports.MultiPoint = require('./multipoint');\r\nexports.MultiLineString = require('./multilinestring');\r\nexports.MultiPolygon = require('./multipolygon');\r\nexports.GeometryCollection = require('./geometrycollection');","module.exports = {\r\n    encode: function (value) {\r\n        return (value << 1) ^ (value >> 31);\r\n    },\r\n    decode: function (value) {\r\n        return (value >> 1) ^ (-(value & 1));\r\n    }\r\n};\r\n"],"names":["BinaryReader","buffer","isBigEndian","this","position","_read","readLE","readBE","size","value","call","module","exports","prototype","readUInt8","Buffer","readUInt16","readUInt16LE","readUInt16BE","readUInt32","readUInt32LE","readUInt32BE","readInt8","readInt16","readInt16LE","readInt16BE","readInt32","readInt32LE","readInt32BE","readFloat","readFloatLE","readFloatBE","readDouble","readDoubleLE","readDoubleBE","readVarInt","nextByte","result","bytesRead","BinaryWriter","allowResize","_write","write","noAssert","ensureSize","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","writeBuffer","length","copy","writeVarInt","RangeError","tempBuffer","Geometry","Types","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","WktParser","ZigZag","srid","undefined","hasZ","hasM","parse","options","_parseWkt","isBuffer","_parseWkb","Error","wktParser","match","matchRegex","parseInt","geometryType","matchType","dimension","matchDimension","wkt","parentOptions","binaryReader","wkbType","hasSrid","isEwkb","wkb","parseTwkb","type","metadataHeader","precision","decode","precisionFactor","Math","pow","hasBoundingBox","hasSizeAttribute","hasIdList","hasExtendedPrecision","isEmpty","extendedPrecision","zPrecision","zPrecisionFactor","mPrecision","mPrecisionFactor","dimensions","i","_parseTwkb","parseGeoJSON","_parseGeoJSON","isSubGeometry","geometry","geoJSON","crs","properties","name","indexOf","substring","toEwkt","toWkt","toEwkb","ewkb","_getWkbSize","toWkb","slice","_getWktType","wktType","_getWktCoordinate","point","coordinates","x","y","z","m","_writeWkbType","dimensionType","getTwkbPrecision","xyPrecision","xy","xyFactor","zFactor","mFactor","_writeTwkbHeader","twkb","encode","toGeoJSON","shortCrs","longCrs","util","geometries","inherits","Z","geometryCollection","M","ZM","isMatch","expectGroupStart","push","expectGroupEnd","geometryCount","toTwkb","points","lineString","apply","matchCoordinates","pointCount","_readWkbPoint","previousPoint","_readTwkbPoint","_readGeoJSONPoint","_toInnerWkt","innerWkt","_writeWkbPoint","_writeTwkbPoint","coordinateSize","lineStrings","multiLineString","lineStringCount","j","multiPoint","polygons","multiPolygon","exteriorRing","interiorRings","polygonCount","polygon","ringCount","exteriorRingCount","interiorRing","interiorRingCount","k","coordinate","matchCoordinate","NaN","tokens","skipWhitespaces","parseFloat","startsWithBracket"],"sourceRoot":""}