{"version":3,"file":"chunks/6709.sitna.js","mappings":"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","sources":["webpack://SITNA/./node_modules/interactjs/dist/node_modules/browser-pack-flat/_prelude","webpack://SITNA/./node_modules/interactjs/dist/_header.js","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/isWindow.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/window.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/is.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/actions/drag/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/domObjects.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/browser.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/domUtils.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/extend.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/rect.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/getOriginXY.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/normalizeListeners.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/hypot.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/pointerExtend.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/pointerUtils.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/BaseEvent.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/arr.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/actions/drop/DropEvent.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/actions/drop/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/actions/gesture/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/actions/resize/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/actions/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/raf.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/auto-scroll/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/misc.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/auto-start/InteractableMethods.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/auto-start/base.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/auto-start/dragAxis.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/auto-start/hold.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/auto-start/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/interactablePreventDefault.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/dev-tools/visualizer/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/dev-tools/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/utils/clone.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/Modification.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/base.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/options.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/InteractEvent.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/PointerInfo.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/Interaction.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/offset/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/inertia/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/Eventable.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/isNonNativeEvent.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/InteractStatic.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/Interactable.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/InteractableSet.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/events.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/interactionFinder.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/interactions.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/core/scope.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/interact/index.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/snappers/edgeTarget.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/snappers/elements.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/snappers/grid.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/snappers/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/aspectRatio.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/noop.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/pointer.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/edges.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/rect.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/restrict/size.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/snap/pointer.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/snap/size.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/snap/edges.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/all.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/modifiers/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/pointer-events/PointerEvent.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/pointer-events/base.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/pointer-events/holdRepeat.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/pointer-events/interactableTargets.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/pointer-events/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/reflow/plugin.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/@interactjs/interactjs/index.ts","webpack://SITNA/./node_modules/interactjs/dist/packages/interactjs/index.ts","webpack://SITNA/./node_modules/interactjs/dist/node_modules/browser-pack-flat/_postlude"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;\n","/**\n * interact.js 1.10.17\n *\n * Copyright (c) 2012-present Taye Adeyemi <dev@taye.me>\n * https://interactjs.io/license\n */\n","export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n","import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init (window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow (node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n","import isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is HTMLElement | SVGElement => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof Element)\n    ? thing instanceof Element || thing instanceof _window.Element\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, ListenersArg } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport type DraggableMethod = ActionMethod<DraggableOptions>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n","const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n","import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  // https://github.com/taye/interact.js/issues/703#issuecomment-471570492\n  browser.supportsPointerEvent = (navigator as any).pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = (\n    'matches' in Element.prototype\n      ? 'matches'\n      : 'webkitMatchesSelector' in Element.prototype\n        ? 'webkitMatchesSelector'\n        : 'mozMatchesSelector' in Element.prototype\n          ? 'mozMatchesSelector'\n          : 'oMatchesSelector' in Element.prototype\n            ? 'oMatchesSelector'\n            : 'msMatchesSelector'\n  ) as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up: 'MSPointerUp',\n        down: 'MSPointerDown',\n        over: 'mouseover',\n        out: 'mouseout',\n        move: 'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up: 'pointerup',\n        down: 'pointerdown',\n        over: 'pointerover',\n        out: 'pointerout',\n        move: 'pointermove',\n        cancel: 'pointercancel',\n      }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains (parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest (element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents (node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan (higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo (element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY (relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect (element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector (value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","export default function extend<T, U extends object> (dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;(dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n","import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/core/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult (value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]> (\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function rectToXY (rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>> (rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh (rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges (edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n","import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName, HasGetRect } from '@interactjs/core/types'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function (\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport extend from './extend'\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize (\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>((acc, t) => extend(acc, normalize(t, listeners, result)), result)\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n","export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n","export default function pointerExtend<T> (dest: Partial<T & { __set?: Partial<T> }>, source: T) {\n  dest.__set ||= {} as any\n\n  for (const prop in source) {\n    if (typeof dest[prop] !== 'function' && prop !== '__set') {\n      Object.defineProperty(dest, prop, {\n        get () {\n          if (prop in dest.__set) return dest.__set[prop]\n\n          return (dest.__set[prop] = source[prop] as any)\n        },\n        set (value: any) {\n          dest.__set[prop] = value\n        },\n        configurable: true,\n      })\n    }\n  }\n  return dest\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords (dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas (targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity (targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords (targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer (pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY (type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY (pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY (pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId (pointer: { pointerId?: number, identifier?: number, type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords (dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair (event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage (pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox (event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType (pointer: { pointerType?: string, identifier?: number, type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n    // be either a MouseEvent, TouchEvent, or Touch object\n      /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets (event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords (): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent (coords: MockCoords) {\n  const event = {\n    coords,\n    get page () {\n      return this.coords.page\n    },\n    get client () {\n      return this.coords.client\n    },\n    get timeStamp () {\n      return this.coords.timeStamp\n    },\n    get pageX () {\n      return this.coords.page.x\n    },\n    get pageY () {\n      return this.coords.page.y\n    },\n    get clientX () {\n      return this.coords.client.x\n    },\n    get clientY () {\n      return this.coords.client.y\n    },\n    get pointerId () {\n      return this.coords.pointerId\n    },\n    get target () {\n      return this.coords.target\n    },\n    get type () {\n      return this.coords.type\n    },\n    get pointerType () {\n      return this.coords.pointerType\n    },\n    get buttons () {\n      return this.coords.buttons\n    },\n    preventDefault () {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/types'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  declare type: string\n  declare target: EventTarget\n  declare currentTarget: Node\n  declare interactable: Interactable\n  declare _interaction: Interaction<T>\n  declare timeStamp: number\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor (interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get (this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set (this: BaseEvent) {},\n})\n","type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>) => array[findIndex(array, func)]\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  declare target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n  | string\n  | Element\n  | (({ dropzone, draggableElement }: { dropzone: Interactable, draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    dynamicDrop: (this: InteractStatic, newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interactStatic: interact,\n    /** @lends Interactable */\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {object | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = (\n      is.string(dropzone.target)\n        ? dropzone._context.querySelectorAll(dropzone.target)\n        : is.array(dropzone.target)\n          ? dropzone.target\n          : [dropzone.target]\n    ) as Element[]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop (\n  { dropState, interactable: draggable, element: dragElement }: Partial<Interaction>,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(\n      dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n        ? dropzoneElement\n        : null,\n    )\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\nRecord<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents (interaction: Interaction, events: FiredDropEvents) {\n  const { dropState } = interaction\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod (interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n        dragEvent,\n        event,\n        dropped,\n        interactable,\n        dropElement,\n        draggable,\n        draggableElement,\n      )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      // reset active dropzones\n      dropState.activeDrops = null\n      dropState.events = null\n      dropState.activeDrops = getActiveDrops(scope, interaction.element)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      interaction.dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null\n        dropState.events = null\n        dropState.cur.dropzone = null\n        dropState.cur.element = null\n        dropState.prev.dropzone = null\n        dropState.prev.element = null\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n","import type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, Rect, PointerType, ListenersArg } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport type GesturableMethod = ActionMethod<GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GesturableOptions extends PerActionDefaults {\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as GesturableOptions\n  } as GesturableMethod\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps ({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor () {\n    return ''\n  },\n}\n\nexport default gesture\n","import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  ActionMethod,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = ActionMethod<ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker (arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable (interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n    value === element\n    : // otherwise check if element matches value as selector\n    dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors (browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n      x: 'e-resize',\n      y: 's-resize',\n      xy: 'se-resize',\n\n      top: 'n-resize',\n      left: 'w-resize',\n      bottom: 's-resize',\n      right: 'e-resize',\n      topleft: 'se-resize',\n      bottomright: 'se-resize',\n      topright: 'ne-resize',\n      bottomleft: 'ne-resize',\n    }\n    : {\n      x: 'ew-resize',\n      y: 'ns-resize',\n      xy: 'nwse-resize',\n\n      top: 'ns-resize',\n      left: 'ew-resize',\n      bottom: 'ns-resize',\n      right: 'ew-resize',\n      topleft: 'nwse-resize',\n      bottomright: 'nwse-resize',\n      topright: 'nesw-resize',\n      bottomleft: 'nesw-resize',\n    }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor ({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n","import type { Scope } from '@interactjs/core/scope'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n\nexport default {\n  id: 'actions',\n  install (scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n","let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init (global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line n/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install (scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName> ({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName> (\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n","import type { ActionName, ActionProps } from '@interactjs/core/types'\n\nimport { window } from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName> (dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { ActionProps, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n    allowFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction (\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  /**\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n   *       // force drag with handle target\n   *       action.name = drag\n   *     }\n   *     else {\n   *       // resize from the top and right edges\n   *       action.name  = 'resize'\n   *       action.edges = { top: true, right: true }\n   *     }\n   *\n   *     return action\n   * })\n   * ```\n   *\n   * Returns or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker (\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable): boolean\nfunction styleCursor(this: Interactable, newValue: boolean): typeof this\nfunction styleCursor (this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type {\n  CursorChecker,\n  PointerType,\n  PointerEventType,\n  Element,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install (scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop ({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName> (\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches (interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName> (\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName> (interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope } from '@interactjs/core/scope'\nimport type { ActionName, Element } from '@interactjs/core/types'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart ({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis (startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration (interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n","import type { Scope } from '@interactjs/core/scope'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nexport default {\n  id: 'auto-start',\n  install (scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/core/types'\nimport { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault: typeof preventDefault\n    checkAndPreventDefault: (event: Event) => void\n  }\n}\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\nfunction preventDefault(this: Interactable): PreventDefaultValue\nfunction preventDefault(this: Interactable, newValue: PreventDefaultValue): typeof this\nfunction preventDefault (this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }: { interaction: Interaction, event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install (scope: Scope) {\n  /** @lends Interactable */\n  const { Interactable } = scope\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n","export default {}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, OptionMethod } from '@interactjs/core/types'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport visualizer from '@interactjs/dev-tools/visualizer/plugin'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as win from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    visializer: typeof visualizer\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    devTools?: DevToolsOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    devTools: OptionMethod<DevToolsOptions>\n  }\n}\n\nexport interface DevToolsOptions {\n  ignore: { [P in keyof typeof CheckName]?: boolean }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport interface Check {\n  name: CheckName\n  text: string\n  perform: (interaction: Interaction) => boolean\n  getInfo: (interaction: Interaction) => any[]\n}\n\nenum CheckName {\n  touchAction = 'touchAction',\n  boxSizing = 'boxSizing',\n  noListeners = 'noListeners',\n}\n\nconst prefix = '[interact.js] '\nconst links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\n// eslint-disable-next-line no-undef\nconst isProduction = process.env.NODE_ENV === 'production'\n\nfunction install (scope: Scope, { logger }: { logger?: Logger } = {}) {\n  const { Interactable, defaults } = scope\n\n  scope.logger = logger || console\n\n  defaults.base.devTools = {\n    ignore: {},\n  }\n\n  Interactable.prototype.devTools = function (options?: object) {\n    if (options) {\n      extend(this.options.devTools, options)\n      return this\n    }\n\n    return this.options.devTools\n  }\n\n  scope.usePlugin(visualizer)\n}\n\nconst checks: Check[] = [\n  {\n    name: CheckName.touchAction,\n    perform ({ element }) {\n      return !parentHasStyle(element, 'touchAction', /pan-|pinch|none/)\n    },\n    getInfo ({ element }) {\n      return [element, links.touchAction]\n    },\n    text: 'Consider adding CSS \"touch-action: none\" to this element\\n',\n  },\n\n  {\n    name: CheckName.boxSizing,\n    perform (interaction) {\n      const { element } = interaction\n\n      return (\n        interaction.prepared.name === 'resize' &&\n        element instanceof domObjects.HTMLElement &&\n        !hasStyle(element, 'boxSizing', /border-box/)\n      )\n    },\n    text: 'Consider adding CSS \"box-sizing: border-box\" to this resizable element',\n    getInfo ({ element }) {\n      return [element, links.boxSizing]\n    },\n  },\n\n  {\n    name: CheckName.noListeners,\n    perform (interaction) {\n      const actionName = interaction.prepared.name\n      const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n      return !moveListeners.length\n    },\n    getInfo (interaction) {\n      return [interaction.prepared.name, interaction.interactable]\n    },\n    text: 'There are no listeners set for this action',\n  },\n]\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  const value = element.style[prop] || win.window.getComputedStyle(element)[prop]\n  return styleRe.test((value || '').toString())\n}\n\nfunction parentHasStyle (element: Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent) as HTMLElement\n  }\n\n  return false\n}\n\nconst id = 'dev-tools'\nconst defaultExport: Plugin = isProduction\n  ? { id, install: () => {} }\n  : {\n    id,\n    install,\n    listeners: {\n      'interactions:action-start': ({ interaction }, scope) => {\n        for (const check of checks) {\n          const options = interaction.interactable && interaction.interactable.options\n\n          if (\n            !(options && options.devTools && options.devTools.ignore[check.name]) &&\n              check.perform(interaction)\n          ) {\n            scope.logger.warn(prefix + check.text, ...check.getInfo(interaction))\n          }\n        }\n      },\n    },\n    checks,\n    CheckName,\n    links,\n    prefix,\n  }\n\nexport default defaultExport\n","import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport default class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  edges!: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n  }\n\n  start ({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.edges = extend({}, interaction.edges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg (arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect = arg.rect || interaction.rect\n    arg.edges = this.edges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll (arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll (arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(this.interaction.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction (arg: { phase: EventPhase, rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply (\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd (arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop (arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates (modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords ({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo (options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom (other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy () {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult (coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList (interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left: coords.x - rect.left,\n      top: coords.y - rect.top,\n      right: rect.right - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    }\n}\n","import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport Modification from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n> (module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, arg.interaction.coords.start.page)\n      arg.interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => arg.interaction.modification.setAndApply(arg),\n\n    'interactions:before-action-end': (arg) => arg.interaction.modification.beforeEnd(arg),\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n","import type { Point, Listeners, OrBoolean, Element } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Node\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\nPartial<PerActionDefaults> & {\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n","import type { Point, FullRect, PointerEventType, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\nimport type { ActionName } from './types'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  declare target: Element\n  declare currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get () {\n      return this.page.x\n    },\n    set (value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get () {\n      return this.page.y\n    },\n    set (value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get () {\n      return this.client.x\n    },\n    set (value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get () {\n      return this.client.y\n    },\n    set (value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get () {\n      return this.delta.x\n    },\n    set (value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get () {\n      return this.delta.y\n    },\n    set (value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get () {\n      return this.velocity.x\n    },\n    set (value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get () {\n      return this.velocity.y\n    },\n    set (value) {\n      this.velocity.y = value\n    },\n  },\n})\n","import type { PointerEventType, PointerType } from '@interactjs/core/types'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor (id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n","import type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n} from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { Interactable } from './Interactable'\nimport { PointerInfo } from './PointerInfo'\nimport type { ActionDefaults } from './options'\nimport type { Scope } from './scope'\nimport type { ActionName, ActionProps } from './types'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>, event: Event, type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\nInteraction<T>,\nkeyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  // current interactable being interacted with\n  interactable: Interactable | null = null\n\n  // the target element of the interactable\n  element: Element | null = null\n  rect: FullRect | null = null\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  edges: EdgeOptions | null = null\n\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: PointerEventType | null = null\n\n  downPointer: PointerType = {} as PointerType\n\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n      pointer: null,\n      event: null,\n      eventTarget: null,\n    }\n\n  // previous action event\n  prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _stopped = true\n  _proxy: InteractionProxy<T> | null = null\n\n  simulation = null\n\n  /** @internal */ get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  readonly _id: number = idCounter++\n\n  /** */\n  constructor ({ pointerType, scopeFire }: { pointerType?: string, scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get () {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {Boolean} Whether the interaction was successfully started\n   */\n  start<A extends ActionName> (action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  _updateLatestPointer (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy () {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  _createPreparedEvent<P extends EventPhase> (\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  _fireEvent<P extends EventPhase> (iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase<P extends EventPhase> (\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  _now () {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/core/types'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal (interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction ({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd ({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end ({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending (interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy (this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords ({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending (interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install (scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n","import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\nimport Modification from '@interactjs/modifiers/Modification'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start (event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia () {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd () {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame (tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick () {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick () {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume ({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end () {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop () {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start ({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume (arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop ({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions ({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint (\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n","import type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nfunction fireUntilImmediateStopped (event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string, propagationStopped?: boolean }> (event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect (_element: Element): Rect {\n    return null\n  }\n}\n","import type { Actions } from '@interactjs/core/types'\n\nexport default function isNonNativeEvent (type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n","/** @module interact */\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\nimport browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Interactable } from './Interactable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { Options } from './options'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    (target: Target, options?: Options): Interactable\n    getPointerAverage: typeof pointerUtils.pointerAverage\n    getTouchBBox: typeof pointerUtils.touchBBox\n    getTouchDistance: typeof pointerUtils.touchDistance\n    getTouchAngle: typeof pointerUtils.touchAngle\n    getElementRect: typeof domUtils.getElementRect\n    getElementClientRect: typeof domUtils.getElementClientRect\n    matchesSelector: typeof domUtils.matchesSelector\n    closest: typeof domUtils.closest\n    /** @internal */ globalEvents: any\n    version: string\n    /** @internal */ scope: Scope\n    use(\n      plugin: Plugin,\n      options?: {\n        [key: string]: any\n      },\n    ): any\n    isSet(target: Target, options?: any): boolean\n    on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n    off(type: EventTypes, listener: any, options?: object): any\n    debug(): any\n    supportsTouch(): boolean\n    supportsPointerEvent(): boolean\n    stop(): any\n    pointerMoveTolerance(newValue?: number): any\n    addDocument(doc: Document, options?: object): void\n    removeDocument(doc: Document): void\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\ntype _InteractStatic = import('@interactjs/core/InteractStatic').InteractStatic\n\nexport function createInteractStatic (scope: Scope): _InteractStatic {\n  /**\n   * ```js\n   * interact('#draggable').draggable(true)\n   *\n   * var rectables = interact('rect')\n   * rectables\n   *   .gesturable(true)\n   *   .on('gesturemove', function (event) {\n   *       // ...\n   *   })\n   * ```\n   *\n   * The methods of this variable can be used to set elements as interactables\n   * and also to change various default settings.\n   *\n   * Calling it as a function and passing an element or a valid CSS selector\n   * string returns an Interactable object which has various methods to configure\n   * it.\n   *\n   * @global\n   *\n   * @param {Element | string} target The HTML or SVG Element to interact with\n   * or CSS selector\n   * @return {Interactable}\n   */\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.get(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as _InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  /**\n   * Use a plugin\n   *\n   * @alias module:interact.use\n   *\n   */\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  /**\n   * Check if an element or selector has been set with the {@link interact}\n   * function\n   *\n   * @alias module:interact.isSet\n   *\n   * @param {Target} target The Element or string being searched for\n   * @param {object} options\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  /**\n   * @deprecated\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\n   *\n   * @alias module:interact.on\n   *\n   * @param {string | array | object} type The types of events to listen for\n   * @param {function} listener The function event (s)\n   * @param {object | boolean} [options] object or useCapture flag for\n   * addEventListener\n   * @return {object} interact\n   */\n  interact.on = warnOnce(function on (type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  /**\n   * @deprecated\n   * Removes a global InteractEvent listener or DOM event from `document`\n   *\n   * @alias module:interact.off\n   *\n   * @param {string | array | object} type The types of events that were listened\n   * for\n   * @param {function} listener The listener function to be removed\n   * @param {object | boolean} options [options] object or useCapture flag for\n   * removeEventListener\n   * @return {object} interact\n   */\n  interact.off = warnOnce(function off (type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  /**\n   * @alias module:interact.supportsTouch\n   *\n   * @return {boolean} Whether or not the browser supports touch input\n   */\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  /**\n   * @alias module:interact.supportsPointerEvent\n   *\n   * @return {boolean} Whether or not the browser supports PointerEvents\n   */\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  /**\n   * Cancels all interactions (end events are not fired)\n   *\n   * @alias module:interact.stop\n   *\n   * @return {object} interact\n   */\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   *\n   * @alias module:interact.pointerMoveTolerance\n   *\n   * @param {number} [newValue] The movement from the start position must be greater than this value\n   * @return {interact | number}\n   */\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n","/* eslint-disable no-dupe-class-members */\nimport type { Scope } from '@interactjs/core/scope'\nimport type {\n  ActionMap,\n  ActionMethod,\n  ActionName,\n  Actions,\n  Context,\n  Element,\n  EventTypes,\n  Listeners,\n  ListenersArg,\n  OrBoolean,\n  Target,\n} from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults, Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Actions\n  readonly target: Target\n  readonly events = new Eventable()\n  readonly _context: Context\n  readonly _win: Window\n  readonly _doc: Document\n  readonly _scopeEvents: Scope['events']\n\n  /** @internal */ _rectChecker?: typeof Interactable.prototype.getRect\n\n  /** */\n  constructor (\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName: ActionName, prev: Listeners, cur: Listeners) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect (element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker (checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this._rectChecker = checker\n\n      this.getRect = (element) => {\n        const rect = extend({}, this._rectChecker(element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n      delete this._rectChecker\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource (newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  testIgnoreAllow (\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue, allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  testAllow (this: Interactable, allowFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (this: Interactable, ignoreFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }> (iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: EventTypes, listenerArg?: ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[`${addRemove}Delegate` as 'addDelegate' | 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[addRemove](this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset () {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target as Node, 'all')\n    }\n  }\n}\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target, Context } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\ninterface InteractableScopeProp {\n  context: Context\n  interactable: Interactable\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: InteractableScopeProp[]\n  } = {}\n\n  scope: Scope\n\n  constructor (scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target, _context: context } = interactable\n        const targetMappings: InteractableScopeProp[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(targetMappings, (m) => m.context === context)\n        if (targetMappings[targetIndex]) {\n          // Destroying mappingInfo's context and interactable\n          targetMappings[targetIndex].context = null\n          targetMappings[targetIndex].interactable = null\n        }\n        targetMappings.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new (target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(mappingInfo)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings: InteractableScopeProp[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!targetMappings) {\n      return null\n    }\n\n    const found = arr.find(\n      targetMappings,\n      (m) => m.context === context && (isSelector || m.interactable.inContext(target as any)),\n    )\n\n    return found && found.interactable\n  }\n\n  forEachMatch<T> (node: Node, callback: (interactable: Interactable) => T) {\n    for (const interactable of this.list) {\n      let ret: void | T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n          is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n          node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ntype Listener = (event: Event | FakeEvent) => any\n\nfunction install (scope: Scope) {\n  const targets: Array<{\n    eventTarget: EventTarget\n    events: { [type: string]: Listener[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: Array<[Listener, { capture: boolean, passive: boolean }]>\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture () {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive () {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add (eventTarget: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (eventTarget.addEventListener && !arr.contains(target.events[type], listener)) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push(listener)\n    }\n  }\n\n  function remove (\n    eventTarget: EventTarget,\n    type: string,\n    listener?: 'all' | Listener,\n    optionalArg?: boolean | any,\n  ) {\n    const options = getOptions(optionalArg)\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          remove(eventTarget, type, typeListeners[i], options)\n        }\n        return\n      } else {\n        for (let i = 0; i < typeListeners.length; i++) {\n          if (typeListeners[i] === listener) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate (selector: string, context: Node, type: string, listener: Listener, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push([listener, options])\n  }\n\n  function removeDelegate (\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: Listener,\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const [fn, { capture, passive }] = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (fn === listener && capture === options.capture && passive === options.passive) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener (event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const [fn, { capture, passive }] of listeners) {\n            if (capture === options.capture && passive === options.passive) {\n              fn(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture (this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor (originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions (param: { [index: string]: any } | boolean): { capture: boolean, passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  const options = extend({}, param) as any\n\n  options.capture = !!param.capture\n  options.passive = !!param.passive\n\n  return options\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search (details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n","import type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\nimport browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport InteractionBase from './Interaction'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string, listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class <T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName> (options: { pointerType?: string, scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls () {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions (method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'> (\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n","import type Interaction from '@interactjs/core/Interaction'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport { InteractEvent } from './InteractEvent'\nimport { createInteractStatic } from './InteractStatic'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport events from './events'\nimport interactions from './interactions'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase, options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n      list: [],\n      map: {},\n    }\n\n  constructor () {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults () {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase> (this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset (this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        super.unset()\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners (map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName> (name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._plugins.map[plugin.id] || this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (before[otherId] || before[pluginIdRoot(otherId)]) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot (id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n","import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n","export default () => {}\n","export default () => {}\n","import type { Rect, Point } from '@interactjs/core/types'\nimport type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\n\nexport type GridOptions = (Partial<Rect> | Point) & {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\n\nexport default (grid: GridOptions) => {\n  const coordFields = (\n    [\n      ['x', 'y'],\n      ['left', 'top'],\n      ['right', 'bottom'],\n      ['width', 'height'],\n    ] as const\n  ).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n","/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This module forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport Modification from './Modification'\nimport { makeModifier } from './base'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\nAspectRatioOptions,\n{\n  startCoords: Point\n  startRect: Rect\n  linkedEdges: EdgeOptions\n  ratio: number\n  equalDelta: boolean\n  xIsPrimaryAxis: boolean\n  edgeSign: {\n    x: number\n    y: number\n  }\n  subModification: Modification\n}\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start (arg) {\n    const { state, rect, edges: originalEdges, pageCoords: coords } = arg\n    let { ratio } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: originalEdges.top || (originalEdges.left && !originalEdges.bottom),\n      left: originalEdges.left || (originalEdges.top && !originalEdges.right),\n      bottom: originalEdges.bottom || (originalEdges.right && !originalEdges.top),\n      right: originalEdges.right || (originalEdges.bottom && !originalEdges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(originalEdges.left || originalEdges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    extend(arg.edges, linkedEdges)\n\n    if (!modifiers || !modifiers.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set (arg) {\n    const { state, rect, coords } = arg\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(state.linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: state.linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta ({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio (\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n","import type { ModifierFunction } from './types'\n\nconst noop = (() => {}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\nRestrictOptions,\n{\n  offset: Rect\n}\n>\n\nfunction start ({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect (\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\nRestrictEdgesOptions,\n{\n  inner: Rect\n  outer: Rect\n  offset: RestrictEdgesOptions['offset']\n}\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect (rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n","import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect () {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect (_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n","import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start (arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\nModifierState<\nRestrictSizeOptions & { inner: Rect, outer: Rect },\n{\n  min: Rect\n  max: Rect\n}\n>\n\nfunction set (arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n","import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets: SnapTarget[] | null\n  // target range\n  range: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints: Point[] | null\n  // startCoords = offset snapping from drag start page position\n  offset: Point | RectResolvable<[Interaction]> | 'startCoords' | null\n  offsetWithOrigin?: boolean\n  origin: RectResolvable<[Element]> | Point | null\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\nSnapOptions,\n{\n  offsets?: Offset[]\n  closest?: any\n  targetFields?: string[][]\n}\n>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n        index,\n        relativePoint,\n        x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n        y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n      }))\n      : [\n        {\n          index: 0,\n          relativePoint: null,\n          x: snapOffset.x,\n          y: snapOffset.y,\n        },\n      ]\n}\n\nfunction set (arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n        closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n          distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n          (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n        !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin (arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * WOW> This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: null,\n    range: null,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n","/* eslint-disable n/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n","import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\nimport all from './all'\nimport base from './base'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n","import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/core/types'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport default class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  declare type: T\n  declare originalEvent: PointerEventType\n  declare pointerId: number\n  declare pointerType: string\n  declare double: boolean\n  declare pageX: number\n  declare pageY: number\n  declare clientX: number\n  declare clientY: number\n  declare dt: number\n  declare eventable: any;\n  [key: string]: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double =\n        !!interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n      this.double = true\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n\nexport { PointerEvent }\n","import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string> (\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n        {\n          interaction,\n          pointer,\n          event,\n          eventTarget,\n          type: 'doubletap',\n        },\n        scope,\n      )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> (\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) => target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps ({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo ({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold ({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold (\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n","import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\nimport type PointerEvent from './PointerEvent'\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew ({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n","import type { Plugin } from '@interactjs/core/scope'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install (scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n","import type { Interactable } from '@interactjs/core/Interactable'\nimport type { DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, ActionProps, Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: <T extends ActionName>(action: ActionProps<T>) => ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nexport function install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable,\n  } = scope\n\n  scope.actions.phases.reflow = true\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n   */\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName> (\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = (\n    is.string(interactable.target)\n      ? arr.from(interactable._context.querySelectorAll(interactable.target))\n      : [interactable.target]\n  ) as Element[]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName> (\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = scope.window as unknown as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n      interaction._reflowResolve = resolve\n    })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n","import actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n\nconst _ = {\n  actions,\n  autoScroll,\n  autoStart,\n  interactablePreventDefault,\n  devTools,\n  inertia,\n  interact,\n  modifiers,\n  offset,\n  pointerEvents,\n  reflow,\n}\n\n// Exported so that the related module augmentations will be referenced in\n// generated .d.ts file\nexport type __internal_plugin_types__ = typeof _\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n","\nreturn _$index_79;\n\n});\n"],"names":["t","Window","ownerDocument","defaultView","window","realWindow","document","createTextNode","wrap","docFrag","nodeType","object","func","number","bool","string","element","getWindow","test","Element","nodeName","plainObject","constructor","toString","array","length","splice","interaction","prepared","name","axis","coords","cur","page","y","start","client","velocity","x","iEvent","o","delta","id","install","actions","Interactable","defaults","prototype","draggable","map","drag","methodDict","listeners","interactable","buttons","options","enabled","pointerIsDown","pointerType","mouseButtons","action","lockAxis","startAxis","i","this","setPerAction","setOnEvents","beforeMove","move","getCursor","init","DocumentFragment","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch","PointerEvent","MSPointerEvent","n","navigator","supportsTouch","DocumentTouch","supportsPointerEvent","pointerEnabled","isIOS","platform","isIOS7","appVersion","isIe9","userAgent","isOperaMobile","appName","prefixedMatchesSelector","pEventTypes","up","down","over","out","cancel","wheelEvent","b","parentNode","host","replace","correspondingUseElement","left","right","top","bottom","push","ownerSVGElement","c","lastChild","previousSibling","parseInt","getComputedStyle","zIndex","contains","querySelector","unshift","scrollX","documentElement","scrollLeft","scrollY","scrollTop","getBoundingClientRect","getClientRects","width","height","getRect","closest","value","getElementRect","e","origin","resolveRectLike","rectToXY","trim","split","r","search","reduce","Math","sqrt","__set","Object","defineProperty","get","set","configurable","type","touches","changedTouches","pageX","pageY","clientX","clientY","screenX","screenY","timeStamp","pointerId","target","preventDefault","composedPath","path","getActualElement","currentTarget","identifier","max","atan2","PI","min","_interaction","propagationStopped","immediatePropagationStopped","BaseEvent","_proxy","indexOf","prev","dropzone","dragEvent","relatedTarget","dropState","rejected","events","enter","stopImmediatePropagation","activeDrops","findIndex","fire","slice","interactables","list","drop","accept","matchesSelector","draggableElement","_context","querySelectorAll","rect","dropCheck","d","indexOfDeepestElement","leave","activate","deactivate","DropEvent","dragLeave","prevDropzone","dragEnter","dragmove","event","dynamicDrop","interactStatic","usePlugin","keys","off","on","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","overlap","checker","getPageXY","phaselessTypes","dragenter","dragleave","dropactivate","dropdeactivate","dropmove","getActiveDrops","getDrop","getDropEvents","fireDropEvents","phase","pointers","pointer","deltaSource","distance","touchDistance","box","touchBBox","scale","ds","angle","touchAngle","da","gesture","startDistance","startAngle","prevEvent","isNaN","before","gesturable","abs","matchesUpTo","resizeAxes","resize","square","axes","browser","cursors","xy","topleft","bottomright","topright","bottomleft","defaultMargin","resizable","preserveAspectRatio","edges","_rects","corrected","previous","deltaRect","invert","_latestPointer","eventTarget","margin","NaN","request","requestAnimationFrame","cancelAnimationFrame","bind","Date","now","setTimeout","clearTimeout","body","scrollWidth","scrollHeight","autoScroll","container","speed","isScrolling","prevTime","scroll","stop","scrollBy","check","onInteractionMove","interacting","simulation","innerWidth","innerHeight","getElementClientRect","getStringOptionResult","autoscroll","perAction","console","warn","apply","arguments","styleCursor","actionChecker","getAction","a","button","ignoreFrom","warnOnce","_backCompatOption","allowFrom","testIgnoreAllow","l","forEachMatch","manualStart","copyAction","maxPerElement","autoStart","maxInteractions","f","interactions","cursorElement","style","cursor","cursorChecker","_interacting","base","withinInteractionLimit","pointerWasMoved","validateAction","dx","dy","downPointer","downEvent","hold","delay","autoStartHoldTimer","duplicate","getHoldDuration","checkAndPreventDefault","supportsPassive","getDocOptions","passive","docEvents","listener","nodeContains","touchAction","boxSizing","noListeners","from","result","modifiers","methods","_methods","filter","prepareStates","startOffset","startDelta","fillArg","pageCoords","preEnd","startAll","setAll","states","state","skipModifiers","shouldDo","addEdges","eventProps","rectDelta","p","changed","modifiedCoords","applyToInteraction","beforeEnd","endResult","index","modification","endOnly","setStart","enable","disable","_defaults","setAndApply","restoreInteractionCoords","ctrlKey","altKey","shiftKey","metaKey","t0","downTime","x0","y0","clientX0","clientY0","dt","duration","swipe","getSwipe","velocityY","velocityX","defineProperties","downTarget","_ProxyMethods","_ProxyValues","scopeFire","newCoords","_scopeFire","updatePointer","pointerIndex","pointerInfo","_stopped","_doPhase","pointerMoveTolerance","getPointerIndex","s","setCoordVelocity","copyCoords","setZeroCoords","curEventTarget","end","removePointer","_ending","getPointerId","PointerInfo","setCoords","_now","setCoordDeltas","pointerExtend","_updateLatestPointer","InteractEvent","_createPreparedEvent","_fireEvent","Interaction","offset","total","pending","offsetBy","copyFrom","allowResume","v0","currentOffset","startCoords","modifierArg","minSpeed","endSpeed","startInertia","startSmoothEnd","targetOffset","active","resistance","log","te","lambda_v0","one_ve_v0","isModified","modifiedOffset","onNextFrame","inertiaTick","smoothEnd","smoothEndTick","timeout","exp","smoothEndDuration","modifierCount","inertia","default","phases","inertiastart","resume","addEventModifiers","global","types","merge","Eventable","substr","new","globalEvents","getPointerAverage","pointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","version","scope","use","isSet","context","add","remove","debug","addDocument","removeDocument","_actions","_win","trySelector","_doc","_scopeEvents","onstart","onmove","onend","oninertiastart","updatePerActionListeners","_rectChecker","testIgnore","testAllow","_onOff","delegatedEvents","selector","removeDelegate","In","addListeners","selectorMap","win","find","inContext","InteractableSet","originalEvent","stopPropagation","capture","addDelegate","delegateListener","delegateUseCapture","documents","targets","supportsOptions","addEventListener","removeEventListener","hasOwnProperty","getEventTargets","createElement","methodOrder","simulationResume","eventType","mouseOrPen","hasPointer","idle","some","getPointerType","prevTouchTime","searchDetails","doc","pointerDown","pointerMove","pointerUp","documentBlur","destroy","onDocSignal","doOnInteractions","methodNames","floor","random","createInteractStatic","listenerMaps","isInitialized","_plugins","pluginIsInstalled","getDocIndex","onWindowUnload","Scope","globalThis","range","limits","grid","round","coordFields","snappers","createSnapGrid","ratio","equalDelta","startRect","linkedEdges","xIsPrimaryAxis","edgeSign","subModification","prevCoords","prevRect","makeModifier","elementRect","restriction","xywhToTlbr","noInner","noOuter","getRestrictionRect","inner","outer","restrict","restrictEdges","tlbrToXywh","offsetWithOrigin","relativePoints","offsets","relativePoint","source","inRange","targetFields","snap","snapSize","aspectRatio","restrictRect","restrictSize","snapEdges","spring","avoid","transform","rubberband","tapTime","double","prevTap","pointerEvents","getPath","node","eventable","holdDuration","collectEventTargets","tap","doubletap","pointerEvent","props","_subtractOrigin","_addOrigin","holdIntervalHandle","clearInterval","holdRepeatInterval","holdrepeat","count","call","reflow","Promise","_reflowPromise","_reflowResolve","coordsToEvent","all","then"],"sourceRoot":""}